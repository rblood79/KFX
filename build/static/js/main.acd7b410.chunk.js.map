{"version":3,"sources":["component/Context/index.js","component/Head/index.js","component/Foot/index.js","component/Mixin/index.js","component/Slide/guideBox.js","component/Slide/gueage.js","component/Slide/slideItem.js","component/Slide/chart.js","component/Slide/detailItem.js","component/Slide/index.js","component/Base/index.js","component/Loading/index.js","component/Mobile/index.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","state","url","theme","topNum","type","focused","base","count","width","height","filter","temp","setTheme","a","setState","setTopNum","prevState","setType","setFocused","setBase","setCount","setWidth","setHeight","setFilter","setTemp","children","this","props","Provider","value","Component","App","useContext","context","data","useEffect","className","onClick","console","log","src","process","alt","classNames","length","MARK","기지","map","item","index","id","대대","defaultProps","useState","title","comment","stepData","step","num","stepNum","idx","getColor","percent","start","end","alpha","byKeys","obj","keys","filtered","forEach","key","hasOwnProperty","active","Box","result","i","push","color","number","useSpring","from","to","reset","delay","Gueage","div","style","n","toFixed","backgroundColor","e","selectItem","호기ID","percentColor","TOTAL","flipId","translate","기종","호기","canvasRef","useRef","timeout","canvas","setCanvas","setContext","aver","total","def","Object","now","fillColor","strokeColor","wCenter","hCenter","current","getContext","delta","curArr","cur","startArr","endArr","items","complete","draw","arr","clearRect","ss","setArray","stroke","fill","shadow","strokeStyle","lineJoin","lineWidth","shadowBlur","beginPath","moveTo","lineTo","closePath","polygonPoints","fillPolygon","inSize","font","textAlign","textBaseline","fillStyle","fillText","_","clearTimeout","loop","t","temp0","temp1","Math","round","setTimeout","FPS","ref","CanvasRenderingContext2D","prototype","points","shadowColor","select","checkList","ess","averItem","name","icon","itemIcon","SideItem","val","find","DS","setSelectItem","setCheckList","sliderRef","size","undefined","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","setData","wAverage","keyArray","기준정보","weight","가중치","used","cloneDeep","weightFix","mergeWith","lists","호수추천","each","valueSum","v","k","element","Number","sortBy","reverse","useData","grid","target","col","row","gap","gridNum","setGridNum","targetWidth","clientWidth","floor","_row","_col","_end","_gap","_width","rowNum","colNum","ceil","colMin","min","useGridNum","position","x","setPosition","usePosition","move","setMove","_x","useMove","필수항목","평균","배정조건","filterView","setFilterView","moveSlide","postion","iarr","arrItem","fView","CheckBox","label","checked","disabled","onChange","onCheck","htmlFor","flipKey","spring","stiffness","damping","transform","gridTemplateColumns","gridTemplateRows","loading","cc","maxCount","meassage","callBack","setEnd","setPercent","dataSet","temporaryValue","randomIndex","array","slice","currentIndex","random","shuffle","ment","startMsg","fix","setFix","flag","setFlag","randomArray","m","endMsg","test","navigator","userAgent","isMobile","top","setTop","setLoading","onLoad","fetch","headers","then","response","json","resultTop","부대","ini","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acd7b410.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst UserContext = React.createContext();\n\nclass UserProvider extends Component {\n    // Context state\n    state = {\n        url: 'http://localhost:8080',\n        theme: 'light',\n        topNum: 0,\n        type: 'list',\n        focused: 0,\n        base: false,\n        count: 0,\n        width: 0,\n        height: 0,\n        filter: null,\n        temp: [0,0,0,0],\n    };\n    // Method to update state\n    setTheme = async theme => {\n        this.setState(\n            {\n                theme: theme ? 'dark' : 'light',\n            }\n        );\n    };\n    setTopNum = topNum => {\n        this.setState(prevState => ({ topNum }));\n    };\n    setType = type => {\n        this.setState(prevState => ({ type }));\n    };\n    setFocused = focused => {\n        this.setState(prevState => ({ focused }));\n    };\n    setBase = base => {\n        this.setState(prevState => ({ base }));\n    };\n    setCount = count => {\n        this.setState(prevState => ({ count }));\n    };\n    setWidth = width => {\n        this.setState(prevState => ({ width }));\n    };\n    setHeight = height => {\n        this.setState(prevState => ({ height }));\n    };\n    setFilter = filter => {\n        this.setState(prevState => ({ filter }));\n    };\n    setTemp = temp => {\n        this.setState(prevState => ({ temp }));\n    };\n    //\n    render() {\n        const { children } = this.props;\n        const { url, theme, topNum, type, focused, count, base, width, height, filter, temp } = this.state;\n        const { setTheme, setTopNum, setType, setFocused, setCount, setBase, setWidth, setHeight, setFilter, setTemp } = this;\n\n        return (\n            <UserContext.Provider\n                value={{\n                    theme,\n                    url,\n                    topNum,\n                    type,\n                    focused,\n                    count,\n                    base,\n                    width,\n                    height,\n                    filter,\n                    temp,\n                    setTheme,\n                    setTopNum,\n                    setType,\n                    setFocused,\n                    setCount,\n                    setBase,\n                    setWidth,\n                    setHeight,\n                    setFilter,\n                    setTemp,\n                }}>\n                {children}\n            </UserContext.Provider>\n        );\n    }\n}\n\nexport default UserContext;\n\nexport { UserProvider };\n","import './index.scss';\nimport React, { useContext, useEffect } from 'react';\nimport context from '../Context';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { topNum, setTopNum, setFocused, setCount, base } = state;\n  const data = props.data;\n  const onClick = (id) => {\n    setFocused(0);\n    setCount(0);\n    setTopNum(id);\n  }\n  useEffect(() => {\n  },[])\n  return (\n    <div className=\"head\">\n      <div className={'topLogo'} onClick={() => console.log(state)}>\n        <div className={'logo'}>\n          <img src={process.env.PUBLIC_URL + '/assets/logo.png'} alt={'logo'} />\n        </div>\n      </div>\n      <div className={classNames('topNav', base && 'active')}>\n        {\n          data && data.length > 0 && (\n            <>\n              <img className={'flag'} src={data[topNum].MARK} alt={data[topNum].기지} />\n              <span className={'viewText'}>{data[topNum].기지}</span>\n            </>\n          )\n        }\n        {data && (\n          data.map((item, index) => {\n            return (\n              <button key={index} className={classNames('topButton', index === topNum ? 'active' : null)} onClick={() => !base && onClick(index)}>\n                {item.대대}\n              </button>\n            )\n          }))\n        }\n      </div>\n    </div>\n  );\n}\n\nApp.defaultProps = {\n  topNum: null,\n  type: 'list',\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useState, useContext, useEffect } from 'react';\nimport context from '../Context';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { base, type } = state;\n  const [stepData] = useState([\n    { title: 'STEP 1', comment: 'Search' },\n    { title: 'STEP 2', comment: 'Aircraft' },\n    { title: 'STEP 3', comment: 'Condition' },\n    { title: 'STEP 4', comment: 'Finish' }\n  ]);\n\n  const step = () => {\n    let num = props.stepNum;\n    if (type === 'grid') {\n      num = 2;\n    };\n    return num;\n  };\n  \n  useEffect(() => {\n  }, [])\n  return (\n    <div className={'step'}>\n      <ul className={classNames('stepGroup', base && 'active')}>\n        {\n          stepData.map((item, idx) => {\n            return (\n              <li key={idx} className={classNames('stepItem', idx === step() ? 'active' : null)}>\n                <span className={'stepItemTitle'}>{item.title}</span>\n                <span className={'stepItemComment'}>{item.comment}</span>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}\n\nApp.defaultProps = {\n  stepNum: 1,\n};\n\nexport default App;\n","import { useEffect, useState, } from 'react';\nimport _ from 'lodash';\n\nexport function getColor(percent, start, end, alpha) {\n    var a = percent / 100,\n        b = (end - start) * a,\n        c = b + start,\n        d = alpha ? alpha : 1;\n    return 'hsla(' + c + ', 60%, 48%, ' + d + ')';\n}\n\nexport function byKeys(obj, keys = []) {\n    const filtered = {}\n    keys.forEach(key => {\n        if (obj.hasOwnProperty(key)) {\n            filtered[key] = obj[key]\n        }\n    })\n    return filtered\n}\n\nexport function useData(arr, num, checkList) {\n    const [data, setData] = useState({\n        data: undefined\n    });\n    useEffect(() => {\n        let wAverage = 0;\n        const customizer = ((obj, src) => {\n            if (obj === 'N') {\n                return 0;\n            } else {\n                wAverage += src;\n            };\n        });\n        const keyArray = _.keys(arr[num].기준정보);\n        const weight = arr[num].가중치;\n        const used = _.cloneDeep(checkList);\n        const weightFix = _.mergeWith(used, weight, customizer);\n        const lists = _.cloneDeep(arr[num].호수추천);\n        _.each(lists, (obj) => {\n            let valueSum = 0;\n            _.map(obj, (v, k) => {\n                //console.log(k, v)\n                const findKey = keyArray.find(element => element === k);\n                if (findKey && used) {\n                    valueSum += (v * weightFix[k])\n                    //valueSum += (v * used[findKey])\n                }\n            })\n            obj.TOTAL = Number((valueSum / wAverage).toFixed(2));\n        });\n\n        const temp = _.sortBy(lists, 'TOTAL').reverse();\n        setData({\n            data: temp,\n        });\n    }, [arr, num, checkList]);\n    return data;\n}\n\nexport function useMove(type, count, grid, position) {\n    const [move, setMove] = useState({\n        x: 0,\n    });\n    useEffect(() => {\n        let _x = 0;\n        if (type === 'list') {\n            _x = Math.round(position.x - ((grid.width + grid.gap) * count) - (grid.width * 0.5))\n            //} else if (data.length > 15 && !base) {\n        } else {\n            _x = Math.round(position.x - ((grid.width + grid.gap) * count))\n        };\n        setMove({\n            x: _x,\n        });\n    }, [type, count, grid, position]);\n    return move;\n}\n\nexport function usePosition(type, size) {\n    const [position, setPosition] = useState({\n        x: 0,\n    });\n    useEffect(() => {\n        if (size === null) {\n            return { x: 0 };\n        }\n        setPosition({\n            x: type === 'list' ? (size.width - 32) * 0.5 : 0,\n        });\n    }, [type, size,]);\n    return position;\n}\n\nexport function useGridNum(target, total, type) {\n\n    const [gridNum, setGridNum] = useState({\n        col: undefined,\n        row: undefined,\n        end: undefined,\n        gap: undefined,\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        if (!total || !target) {\n            return { col: 0, row: 0, end: 0, gap: 0, width: 0, height: 0 };\n        }\n        const targetWidth = Math.round(target.current.clientWidth);\n        const count = Math.floor(targetWidth / 360);\n\n        let _row = 1;\n        let _col = total;\n        let _end = total - 1;\n        let _gap = 96;\n\n        let _width = type === 'list' ? 360 : Math.round((targetWidth - (16 * (count - 1))) / count);\n        let _height = 160;\n\n        let rowNum = Math.round(targetWidth / _width);\n        let colNum = Math.ceil(total / rowNum);\n        let colMin = Math.min(colNum, 3)\n\n        if (type === 'grid') {\n            if (colNum > 3) {\n                _row = colMin;\n                _col = Math.ceil(total / _row);\n            } else {\n                _row = colMin;\n                _col = rowNum;\n            };\n            _gap = 16;\n            _end = _col - Math.round(targetWidth / _width);\n        };\n        setGridNum({\n            col: _col,\n            row: _row,\n            end: _end,\n            gap: _gap,\n            width: _width,\n            height: _height,\n        });\n    }, [target, total, type]);\n    return gridNum;\n}\n\nexport function useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        };\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n}\n\nexport function shuffle(dataSet) {\n    const array = dataSet.slice();\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n    return array;\n}\n","\nimport './guideBox.scss';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n    const active = props.active;\n    //const type = props.type;\n\n    const Box = () => {\n        const result = [];\n        for (let i = 0; i < 4; i++) {\n            result.push(<span key={i} className={classNames('boxLine')} />)\n        }\n        return result;\n    }\n    return (\n        <>\n        <div className={classNames('boxLineContainer', active && 'active')}>\n            {\n                <Box />\n            }\n        </div>\n        </>\n    );\n}\n\nexport default App;","\nimport './gueage.scss';\nimport classNames from 'classnames';\nimport React, { useEffect } from 'react';\nimport { animated, useSpring } from 'react-spring';\n\nconst App = (props) => {\n    const value = props.value;\n    const color = props.color;\n\n    const { number,} = useSpring({\n        from: {\n            number: 0,\n        },\n        to: {\n            number: value,\n        },\n        reset: true,\n        delay: 300,\n    });\n\n    const Gueage = () => {\n        const result = [];\n        for (let i = 0; i < 10; i++) {\n            result.push(<span key={i} className={classNames('boxGueage')} />)\n        }\n        return result;\n    }\n    useEffect(() => {\n        \n    }, [])\n    return (\n        <div className={classNames('boxGueageContainer')}>\n            <animated.div className={'boxGueageBase'} style={{ width: props.active ? number.to(n => n.toFixed(2) + '%') : value+'%', backgroundColor: color }}/>\n            <Gueage />\n        </div>\n    );\n}\n\nexport default App;","import './slideItem.scss';\nimport React, { useContext, useEffect } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { Flipped } from 'react-flip-toolkit';\nimport { getColor } from '../Mixin'\nimport context from '../Context';\nimport GuideBox from './guideBox';\nimport GueageBox from './gueage';\n\nconst App = (props) => {\n\n    const state = useContext(context);\n    const { focused, setFocused, type, setBase, setCount, setTemp } = state;\n    const index = props.index;\n    const item = props.item;\n    const active = focused === index && type !== 'grid';\n    const selectItem = props.selectItem;\n    const id = item.호기ID;\n    //\n    let percentColor = getColor(item.TOTAL, 0, 240);\n\n    const { number,} = useSpring({\n        from: {\n            number: 0,\n        },\n        to: {\n            number: item.TOTAL,\n        },\n        reset: true,\n        //delay: 200,\n    });\n\n    const onClick = () => {\n        setTemp([0, 0, 0, 0])\n        selectItem(item)\n        setFocused(index)\n        setBase(true)\n        type === 'list' && setCount(index);\n    }\n\n    const getImage = (e) => {\n        return 'assets/aircraft/' + e + '.png'\n    }\n\n    useEffect(() => {\n\n    }, [])\n\n    return (\n        <Flipped flipId={id} translate>\n            <div key={item.호기ID} className={classNames('listItem', active && 'active')}>\n                <GuideBox active={active} />\n                <div className={'aircraftGroup'} >\n                    <div className={'aircraft'}>\n                        <img src={getImage(item.기종)} alt={'KF-21'} />\n                    </div>\n                </div>\n                {(focused === index && type === 'list') ? (\n                    <div className={classNames('item')} >\n                        <div>\n                            <GueageBox value={item.TOTAL} color={percentColor} active={focused === index}/>\n                            <span className={'itemRating'}>RATING POINT</span>\n                            <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{number.to(n => n.toFixed(2) + '%')}</animated.div>\n                        </div>\n                        <div className={'itemTitleGroup'}>\n                            <div className={'itemTitle'}>{item.호기}호기</div>\n                            <span className={'itemSubText'}>Boramae</span>\n                        </div>\n                        <button className={'detailButton'} onClick={() => { onClick() }} />\n                    </div>\n                ) : (\n                    <div className={classNames('item')} >\n                        <div className={'itemTitle'}>{item.호기}호기</div>\n                        <GueageBox value={item.TOTAL} color={percentColor} />\n                        <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{type === 'grid' ? number.to(n => n.toFixed(2) + '%') : item.TOTAL + '%'}</animated.div>\n                        <div className={'itemIndex'}>{index < 9 ? '0' + (index + 1) : (index + 1)}</div>\n                        <button className={'detailButtonGrid'} onClick={() => { onClick() }} />\n                    </div>\n                )}\n\n            </div>\n        </Flipped>\n    );\n}\n\nApp.defaultProps = {\n    focused: 0,\n};\n\nexport default App;\n","\nimport React, { useRef, useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { getColor } from '../Mixin'\n\nconst App = (props) => {\n    //console.log('chart')\n    const canvasRef = useRef(null);\n    const timeout = useRef(null);\n    //\n    const [canvas, setCanvas] = useState(null)\n    const [context, setContext] = useState(null)\n    const item = props.item;\n    const aver = props.aver || [0, 0, 0, 0];\n    const total = props.total;\n    const def = Object.keys(aver).map(key => ({ key, value: aver[key] }));\n    const now = Object.keys(item).map(key => ({ key, value: item[key] }));\n    //\n    const fillColor = getColor(total, 0, 240, 0.48);\n    const strokeColor = getColor(total, 0, 240, 1);\n\n    const fixSize = 0.5;\n    const width = 480;\n    const height = 360;\n    const wCenter = width * 0.5;\n    const hCenter = height * 0.5;\n    const size = 20;\n    const FPS = 60;\n    const duration = 20;\n\n    useEffect(() => {\n        setCanvas(canvasRef.current);\n        canvas && setContext(canvas.getContext('2d'));\n        const curArr = [props.cur];\n        const startArr = [props.cur];\n        const endArr = [Object.keys(item).map(key => (item[key]))];\n        const items = [def, now];\n        //\n        let complete = true;\n        let delta;\n        //\n        const base = () => {\n            context.strokeStyle = \"#ccc\";  // 선 색깔\n            context.lineJoin = 'round';\t// 선 끄트머리(?)\n            context.lineWidth = 1;\t\t// 선 굵기\n            context.shadowBlur = 0;\n            //세로\n            context.beginPath();\n            context.moveTo(wCenter + fixSize, size);\n            context.lineTo(wCenter + fixSize, height - size);\n            //가로\n            context.moveTo(80, hCenter + fixSize);\n            context.lineTo(width - 80, hCenter + fixSize);\n            context.closePath();\n            //\n            context.stroke();\n            //\n            let ss = ((height / 2) - size) / 5;\n            let polygonPoints = [\n                wCenter, hCenter - ss * 5, // 0\n                wCenter + ss * 5, hCenter, // 1\n                wCenter, hCenter + ss * 5, // 2\n                wCenter - ss * 5, hCenter, // 3\n            ];\n            context.fillPolygon(polygonPoints, 'rgba(0,0,0,0.0)', '#a4a4a4');\n            \n            context.stroke();\n\n           // context.beginPath();\n\n            for (let i = 0; i < 5; i++) {\n\n                const inSize = ss * i;\n                let polygonPoints = [\n                    wCenter, hCenter - inSize,\n                    wCenter + inSize, hCenter,\n                    wCenter, hCenter + inSize,\n                    wCenter - inSize, hCenter,\n                ];\n                context.fillPolygon(polygonPoints, 'rgba(0,0,0,0)', '#dedede');\n            }\n            context.font = 'bold 12px Arial';\n            context.textAlign = 'center';\n            context.textBaseline = 'bottom';\n            context.fillStyle = '#1c1c1c';\n            context.shadowBlur = 0;\n            context.fillText(now[0].key, wCenter, hCenter - 165);\n\n            context.textAlign = 'left';\n            context.textBaseline = 'middle';\n            context.fillText(now[1].key, wCenter + 165, hCenter);\n\n            context.textAlign = 'center';\n            context.textBaseline = 'top';\n            context.fillText(now[2].key, wCenter, hCenter + 165);\n\n            context.textAlign = 'right';\n            context.textBaseline = 'middle';\n            context.fillText(now[3].key, wCenter - 165, hCenter);\n        }\n        const draw = (arr) => {\n            context.clearRect(0, 0, 480, 360);\n            const ss = ((height / 2) - size) / 100;\n            const setArray = [\n                { stroke: 'rgba(0,0,0,0.24)', fill: 'rgba(0,0,0,0.16)', width: 1, shadow: 0 },\n                { stroke: strokeColor, fill: fillColor, width: 1.6, shadow: 0 },\n            ]\n            base();\n\n            _.map(items, (item, i) => {\n                let polygonPoints = [];\n                if (i === 0) {\n                    polygonPoints = [\n                        wCenter, hCenter - ss * item[0].value,\n                        wCenter + ss * item[1].value, hCenter,\n                        wCenter, hCenter + ss * item[2].value,\n                        wCenter - ss * item[3].value, hCenter,\n                    ];\n                } else {\n                    polygonPoints = [\n                        wCenter, hCenter - ss * arr[0],\n                        wCenter + ss * arr[1], hCenter,\n                        wCenter, hCenter + ss * arr[2],\n                        wCenter - ss * arr[3], hCenter,\n                    ];\n                }\n                context.fillPolygon(polygonPoints,\n                    setArray[i].fill,\n                    setArray[i].stroke,\n                    setArray[i].width,\n                    setArray[i].shadow,\n                );\n            })\n        }\n        const loop = () => {\n            for (let i = 0; i < endArr.length; i += 1) {\n                for (let t = 0; t < endArr[i].length; t += 1) {\n                    delta = (endArr[i][t] - startArr[i][t]) / duration;\n                    curArr[i][t] += delta;\n                    if (delta) {\n                        complete = false;\n                    };\n                };\n            };\n            //\n            let temp0 = endArr.length - 1;\n            let temp1 = endArr[temp0].length - 1;\n\n            if (Math.round(endArr[temp0][temp1] * 10) / 10 === Math.round(startArr[temp0][temp1] * 10) / 10) {\n                complete = true;\n            };\n            if (complete) {\n                draw(endArr[0]);\n                clearTimeout(timeout.current);\n                //cancelAnimationFrame(loop);\n            } else {\n                draw(curArr[0])\n                timeout.current = setTimeout(() => { loop() }, FPS / duration);\n                //requestAnimationFrame(loop);\n\n            };\n        };\n        if (context) {\n            clearTimeout(timeout.current);\n            loop();\n            //requestAnimationFrame(loop);\n        }\n    }, [canvas, context, item, fillColor, hCenter, now, strokeColor, wCenter, def, props.cur])\n\n    return (\n        <canvas ref={canvasRef} className=\"canvas\" width={480} height={360} />\n    );\n}\n\nexport default App;\n\nCanvasRenderingContext2D.prototype.fillPolygon = function (points, fillColor, strokeColor, lineWidth, shadow) {\n    if (points.length <= 0) return;\n    this.closePath();\n    this.strokeStyle = strokeColor;  // 선 색깔\n    this.lineJoin = 'round';\t// 선 끄트머리(?)\n    this.lineWidth = lineWidth || .5;\t\t// 선 굵기\n    this.fillStyle = fillColor;\n\n    this.beginPath();\n    this.moveTo(points[0], points[1]);\n    for (let i = 2; i < points.length - 1; i += 2) {\n        this.lineTo(points[i], points[i + 1]);\n    }\n    this.shadowColor = fillColor;\n    this.shadowBlur = shadow || 0;\n    this.closePath();\n    this.stroke();\n\n    this.fill();\n}","import './detailItem.scss';\nimport React, { useContext, useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css';\nimport { getColor, byKeys } from '../Mixin';\nimport context from '../Context';\nimport { animated, useSpring } from 'react-spring';\n\nimport Chart from './chart';\n\nconst App = (props) => {\n    const state = useContext(context);\n    const { type, setBase, temp, base } = state;\n    const item = props.item;\n    const selectItem = props.select;\n    const checkList = props.checkList;\n    const ess = props.ess;\n    const aver = props.aver;\n\n    const items = byKeys(item, _.keys(checkList));\n    const averItem = byKeys(aver, _.keys(checkList));\n    //\n    const percentColor = item && getColor(item.TOTAL, 0, 240);\n\n    const { number, color } = useSpring({\n        from: { number: 0 },\n        to: {\n            number: item.TOTAL,\n            color: percentColor\n        },\n        reset: true,\n        //delay: 200,\n    });\n\n    //const iarr = byKeys(item, _.keys(ess))\n    //const arrItem = Object.keys(iarr).map(key => (iarr[key]));\n\n    const [itemIcon] = useState([\n        { name: '주기검사', icon: 'ri-tools-fill' },\n        { name: '야간비행여부', icon: 'ri-contrast-2-fill' },\n        { name: '외장변경', icon: 'ri-timer-line' },\n        { name: '실무장여부', icon: 'ri-flight-takeoff-fill' },\n        { name: '항공기등급', icon: 'ri-todo-line' },\n        { name: '가동상태', icon: 'ri-user-heart-line' },\n        { name: '최근비행', icon: 'ri-calendar-line' },\n        { name: '주요결함', icon: 'ri-pulse-line' },\n    ])\n\n    const SideItem = item => {\n        const result = [];\n        _.map(items, (val, key) => {\n            //const color = getColor(val, 0, 240)\n            result.push(\n                <li key={key} className={classNames('sideItem', checkList[key] === 'N' && 'disabled')}>\n                    <span className={'sideItemBase'} />\n                    <span className={'sideItemIcon'}><i className={_.find(itemIcon, ['name', key]).icon} /></span>\n                    <span className={'sideItemTitle'}>{key}</span>\n                    <span className={'sideItemValue'}>\n                        {\n                            checkList[key] === 'N' ?\n                                <i className=\"ri-eye-off-line\" /> :\n                                <span className={'sideItemUd'}>{val}<i className={val > averItem[key] ? \"ri-arrow-up-s-fill\" : \"ri-arrow-down-s-fill\"}></i></span>\n                        }\n                    </span>\n                </li>\n            )\n        })\n        return result;\n    }\n\n    const onClick = () => {\n        selectItem(null);\n        setBase(false);\n    }\n\n    useEffect(() => {\n    }, [])\n\n    return (\n        <div className={'detailContainer'} style={{ width: 360, height: 360 }}>\n            <ul className={'detailContents'}>\n                <SideItem {...item} type={type} key={'sideItem'} />\n            </ul>\n            <div className={classNames('listItem', 'listItemExpend')} >\n                <div className={'graph'}>\n                    {base && <Chart item={byKeys(item, _.keys(ess))} aver={byKeys(aver, _.keys(ess))} total={item.TOTAL} cur={temp} />}\n                </div>\n                <div className={'itemRank'}></div>\n                <div className={'itemTitle'}>{item && item.호기}호기 <span className={'itemTitleGray'}>BORAMAE</span></div>\n                <span className={'itemPoint'}>MATCHING POINT</span>\n                <animated.div className={classNames('itemPercent')} style={{ color: color }}>\n                    {number.to(n => n.toFixed(2) + '%')}\n                </animated.div>\n                <button className={'detailButton'} onClick={() => { onClick() }} />\n            </div>\n        </div>\n    );\n}\n\nApp.defaultProps = {\n    focused: 0,\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport { byKeys } from '../Mixin'\n\nimport context from '../Context';\nimport SlideItem from './slideItem';\nimport DetailItem from './detailItem';\n\nimport { useWindowSize, useGridNum, usePosition, useMove, useData } from '../Mixin';\nimport _ from 'lodash';\n\nconst App = (props) => {\n  //console.log('slide')\n  const DS = props.data;\n  const state = useContext(context);\n  const { topNum, type, setType, focused, setFocused, count, setCount, base, setBase, setTemp } = state;\n  const [selectItem, setSelectItem] = useState(null);\n  const [checkList, setCheckList] = useState(null);\n  const sliderRef = useRef(null);\n  const size = useWindowSize();\n  const result = useData(DS, topNum, checkList);\n  const grid = useGridNum(sliderRef, result.data && result.data.length, type);\n  const position = usePosition(type, size);\n  const move = useMove(type, count, grid, position);\n  const ess = DS[topNum].필수항목;\n  const aver = DS[topNum].평균;\n  const comment = DS[topNum].배정조건;\n\n  const [filterView, setFilterView] = useState(null);\n  //\n  //const timeout = useRef(null);\n  /*const autoSlide = () => {\n    if (focused < grid.col - 1) {\n      moveSlide('next');\n    } else {\n      setFocused(0);\n      setCount(0);\n    }\n    timeout.current = setTimeout(() => { autoSlide() }, 2000);\n  }*/\n\n  const moveSlide = (postion) => {\n    const iarr = byKeys(result.data[focused], _.keys(ess))\n    const arrItem = Object.keys(iarr).map(key => (iarr[key]));\n    setTemp(arrItem);\n\n    if (postion === 'prev') {\n      type === 'list' && focused > 0 && setFocused(focused - 1);\n      count > 0 && setCount(count - 1);\n    } else if (postion === 'next') {\n      type === 'list' && focused < grid.end && setFocused(focused + 1);\n      count < grid.end && setCount(count + 1);\n    };\n  };\n\n  const onCheck = e => {\n    let name = e.target.value;\n    setCheckList(\n      { ...checkList, [name]: e.target.checked ? 'Y' : 'N' }\n    );\n  };\n\n  const onWindow = () => {\n    window['returnFn'](result.data[focused]);\n  }\n\n  const fView = () => {\n    if (filterView === null) {\n      setFilterView('active');\n      setType('grid');\n    } else {\n      setFilterView(null);\n      setType('list');\n    }\n    setSelectItem(null);\n    setBase(false)\n    setFocused(0);\n    setCount(0);\n  }\n\n  const CheckBox = () => {\n    const result = [];\n    _.map(checkList, (v, k) => {\n      const label = 'check' + k;\n      result.push(\n        <div className={'checkbox'} key={'check' + k}>\n          <div className='checkboxInput'><input id={label} className={'check'} value={k} type={'checkbox'} checked={v === 'Y' && true} disabled={ess[k]} onChange={(e) => onCheck(e)} /></div>\n          <div className={'checkboxText'} ><label htmlFor={label} className={'label'}>{k}</label>\n            <span className={'comment'}>{comment[k]}</span></div>\n        </div>\n      )\n    })\n    return result;\n  }\n\n  useEffect(() => {\n    setCheckList(DS[topNum].기준정보);\n  }, [DS, topNum]);\n\n  return (\n    <Flipper className={'slider'} flipKey={[result.data]}\n      //spring={\"noWobble\"} \n      spring={{ stiffness: 560, damping: 56 }}\n    >\n      {\n        result.data ? (\n          selectItem === null ? (\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate\n              //onStart={() => {}}\n              >\n              <div className={classNames('slide')} ref={sliderRef}>\n                <div className={classNames('list', type === 'grid' && 'active')}\n                  style={{\n                    transform: 'translateX(' + move.x + 'px)',\n                    gridTemplateColumns: 'repeat(' + grid.col + ', ' + grid.width + 'px)',\n                    gridTemplateRows: 'repeat(' + grid.row + ', ' + grid.height + 'px)',\n                    gap: grid.gap,\n                  }}\n                >\n                  {\n                    result.data.map((item, i) => {\n                      return (\n                        <SlideItem item={item} index={i} focused={focused} key={'slideItem' + i} selectItem={setSelectItem} />\n                      )\n                    })\n                  }\n                </div>\n                <button className={classNames('callButton', base && 'active')} onClick={onWindow}>\n                  <span className='callButtonText'>선 택</span>\n                </button>\n              </div>\n            </Flipped>\n          ) : (\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate>\n              <div className={'detail'}>\n                <DetailItem item={result.data[focused]} ess={ess} aver={aver} checkList={checkList} active={false} select={setSelectItem} key={'sideItem'} />\n              </div>\n            </Flipped>\n          )\n\n        ) : (\n          <div>NO DATA</div>\n        )\n      }\n      {result.data &&\n        <div className={classNames('controller', type === 'grid' && 'active')}>\n          <button className={'controllerButton prevButton'} onClick={() => count !== 0 && moveSlide('prev')}><i className=\"ri-arrow-left-s-line\"></i><span className=\"controllText\">PREV</span></button>\n          <button className={'controllerButton filterButton'} onClick={() => fView()}><i className={type === 'list' ? \"ri-arrow-up-s-line\" : \"ri-close-fill\"}></i><span className=\"controllText\">배정조건</span></button>\n          <button className={'controllerButton nextButton'} onClick={() => count < grid.end && moveSlide('next')}><span className=\"controllText\">NEXT</span><i className=\"ri-arrow-right-s-line\"></i></button>\n          <div className={classNames('filter', filterView)}>\n            <div className={'filterClose'} onClick={() => fView()} />\n            <CheckBox />\n            <ul className={'filterInfo'}>\n              <li className={'infobox boxdisable'}>필수</li>\n              <li className={'infobox boxchecked'}>선택</li>\n              <li className={'infobox boxnormal'}>선택가능</li>\n            </ul>\n          </div>\n        </div>\n      }\n    </Flipper>\n  );\n}\n\nApp.defaultProps = {\n  focused: 0,\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useContext, useEffect } from 'react';\nimport classNames from 'classnames';\nimport context from '../Context';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { type, base } = state;\n  const loading = props.loading;\n  const slideSize = 360;\n\n  useEffect(() => {\n  },[])\n\n  return (\n    <div className={classNames('base', type !== 'grid' ? null : 'active', loading && 'loading')}>\n      <div className={'baseContents'} style={{ width: slideSize, height: slideSize }}>\n        <div className={classNames('baseBox')} />\n        <div className={classNames('inBox')} />\n        {!loading &&\n          <div className={'detailButton'}>\n            <div className={classNames('detailButtonContainer', base && 'active')}>\n              <span className={'detailText'}>상세정보<i className={\"ri-search-line\"}></i></span>\n              <span className={'detailText'}>닫기<i className={\"ri-close-line\"}></i></span>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useRef, useEffect, } from 'react';\nimport './index.scss';\nimport Chart from '../Slide/chart';\nimport { shuffle } from '../Mixin';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n    //console.log('loading')\n    let cc = 0;\n    const duration = 1000;\n    const maxCount = props.meassage.length || 0;\n    const callBack = props.callBack;\n    const [end, setEnd] = useState([0, 0, 0, 0]);\n    const [start] = useState([0, 0, 0, 0]);\n    const [percent, setPercent] = useState(0);\n    const [ment] = useState(shuffle(props.meassage));\n    const [fix, setFix] = useState(props.startMsg);\n    const timeout = useRef(null);\n    const [flag, setFlag] = useState(false);\n    //\n    useEffect(() => {\n        const loop = () => {\n            if (props.title) {\n                clearTimeout(timeout.current);\n                let item = null;\n                if (cc > maxCount - 1) {\n                    item = randomArray(100, 100);\n                    setFix(props.endMsg);\n                } else {\n                    item = randomArray(50, 100);\n                    setFix(ment[cc])\n                }\n\n                if (cc < maxCount) {\n                    cc++;\n                    timeout.current = setTimeout(() => { loop() }, duration);\n                } else {\n                    setFlag(true);\n                    timeout.current = setTimeout(() => {\n                        callBack(false);\n                        clearTimeout(timeout.current);\n                    }, 1200);\n                }\n                setEnd(item.array);\n                setPercent(item.total);\n            }\n        }\n        const randomArray = (n, m) => {\n            let arr = {};\n            let total = 0;\n            for (var i = 0; i < props.title.length; i++) {\n                const value = Math.floor((Math.random() * (m - n) + n));\n                arr[props.title[i]] = value;\n                total += value;\n            };\n            return { array: arr, total: total / props.title.length };\n        };\n        loop();\n        return () => setEnd(null);\n    }, [cc, maxCount, ment, props.endMsg, props.title, callBack])\n\n    return (\n        <div className='load'>\n            <div className={classNames('graph', flag && 'active')}>\n                <Chart item={end} total={percent} cur={start} />\n                <div className={'callButton'} onClick={() => { callBack(false) }}>\n                    <span className='callButtonText'>{fix}</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import './index.scss';\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n  //const slideSize = 360;\n\n  useEffect(() => {\n  }, [])\n\n  return (\n    <div className={classNames('mobile')}>\n      <div className='inBox'></div>\n      <img className='logo' src={process.env.PUBLIC_URL + '/assets/logo.png'} alt={'logo'} />\n      <span className='ment'>모바일은 지원 하지 않습니다</span>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport './App.scss';\nimport Head from './component/Head/';\nimport Foot from './component/Foot/';\nimport Slide from './component/Slide';\nimport Base from './component/Base';\nimport Loading from './component/Loading';\n\nimport Mobile from './component/Mobile';\n\nconst App = () => {\n  //console.log('App')\n  const [props] = useState(window['getProps']());\n  const [isMobile] = useState(/Mobi/i.test(window.navigator.userAgent));\n  const [top, setTop] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      fetch(props.url, {\n        headers: {\n          'Accept': 'application / json'\n        }\n      })\n        .then(response => response.json())\n        .then(response => setData(response));\n    }\n    const ini = () => {\n      let resultTop = [];\n      _.forEach(data, function (n) {\n        resultTop.push(n.부대)\n      });\n      setTop(resultTop);\n    }\n    !data ? onLoad() : ini();\n  }, [data, props.url]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\" />\n      <main className=\"main\">\n        <div className={classNames('contents', loading && 'loading')}>\n          {isMobile ? (\n            <Mobile />\n          ) : (\n            <>\n              <Base loading={loading} />\n              <Head data={top} />\n              {\n                loading ? <Loading callBack={setLoading} {...props} /> : <Slide data={data} />\n              }\n              <Foot stepNum={loading ? 0 : 1} />\n            </>\n\n          )}\n        </div>\n      </main>\n      <footer className=\"footer\">\n        {isMobile ? '© ROK KF-21 lis, ALL RIGHTS RESERVED' : '© ROK Government KF-21 lis program data, ALL RIGHTS RESERVED'}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n//\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { UserProvider } from './component/Context';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}