{"version":3,"sources":["component/Context/index.js","component/Head/index.js","component/Foot/index.js","component/Mixin/index.js","component/Slide/guideBox.js","component/Slide/gueage.js","component/Slide/slideItem.js","component/Slide/chart.js","component/Slide/expendItem.js","component/Slide/index.js","component/Base/index.js","component/Loading/index.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","state","url","theme","topNum","type","focused","base","count","width","height","filter","temp","setTheme","a","setState","setTopNum","prevState","setType","setFocused","setBase","setCount","setWidth","setHeight","setFilter","setTemp","children","this","props","Provider","value","Component","App","useContext","context","data","className","onClick","console","log","src","process","alt","classNames","length","MARK","기지","map","item","index","id","대대","defaultProps","useState","title","comment","stepData","idx","stepNum","getColor","percent","start","end","alpha","byKeys","obj","keys","filtered","forEach","key","hasOwnProperty","active","Box","result","i","push","color","Gueage","style","backgroundColor","e","selectItem","호기ID","percentColor","TOTAL","flipId","translate","기종","호기","canvas","setCanvas","setContext","aver","total","def","Object","now","items","delta","fillColor","strokeColor","canvasRef","useRef","wCenter","hCenter","timeout","curArr","startArr","endArr","animationComplete","cur","draw","arr","clearRect","ss","setArray","stroke","fill","shadow","strokeStyle","lineJoin","lineWidth","shadowBlur","beginPath","moveTo","lineTo","polygonPoints","fillPolygon","inSize","font","textAlign","textBaseline","fillStyle","fillText","_","loop","t","temp0","temp1","Math","round","clearTimeout","current","setTimeout","FPS","useEffect","getContext","ref","CanvasRenderingContext2D","prototype","points","closePath","shadowColor","select","checkList","ess","averItem","useSpring","from","number","to","reset","name","icon","itemIcon","SideItem","val","find","div","n","toFixed","DS","setSelectItem","setCheckList","sliderRef","size","undefined","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","num","setData","customizer","wAverage","keyArray","기준정보","weight","가중치","used","cloneDeep","weightFix","mergeWith","lists","호수추천","each","valueSum","v","k","element","Number","sortBy","reverse","useData","grid","target","col","row","gap","gridNum","setGridNum","targetWidth","clientWidth","floor","_row","_col","_end","_gap","_width","rowNum","colNum","ceil","colMin","min","useGridNum","position","x","setPosition","usePosition","move","setMove","_x","useMove","필수항목","평균","배정조건","filterView","setFilterView","moveSlide","postion","iarr","arrItem","fView","CheckBox","label","checked","disabled","onChange","onCheck","htmlFor","flipKey","transform","gridTemplateColumns","gridTemplateRows","loading","cc","maxCount","meassage","callBack","setEnd","setPercent","dataSet","temporaryValue","randomIndex","array","slice","currentIndex","random","shuffle","ment","startMsg","fix","setFix","flag","setFlag","useCallback","randomArray","endMsg","m","test","navigator","userAgent","isMobile","top","setTop","setLoading","onLoad","fetch","headers","then","response","json","resultTop","부대","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0643da09.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst UserContext = React.createContext();\n\nclass UserProvider extends Component {\n    // Context state\n    state = {\n        url: 'http://localhost:8080',\n        theme: 'light',\n        topNum: 0,\n        type: 'list',\n        focused: 0,\n        base: false,\n        count: 0,\n        width: 0,\n        height: 0,\n        filter: null,\n        temp: [0,0,0,0],\n    };\n    // Method to update state\n    setTheme = async theme => {\n        this.setState(\n            {\n                theme: theme ? 'dark' : 'light',\n            }\n        );\n    };\n    setTopNum = topNum => {\n        this.setState(prevState => ({ topNum }));\n    };\n    setType = type => {\n        this.setState(prevState => ({ type }));\n    };\n    setFocused = focused => {\n        this.setState(prevState => ({ focused }));\n    };\n    setBase = base => {\n        this.setState(prevState => ({ base }));\n    };\n    setCount = count => {\n        this.setState(prevState => ({ count }));\n    };\n    setWidth = width => {\n        this.setState(prevState => ({ width }));\n    };\n    setHeight = height => {\n        this.setState(prevState => ({ height }));\n    };\n    setFilter = filter => {\n        this.setState(prevState => ({ filter }));\n    };\n    setTemp = temp => {\n        this.setState(prevState => ({ temp }));\n    };\n    //\n    render() {\n        const { children } = this.props;\n        const { url, theme, topNum, type, focused, count, base, width, height, filter, temp } = this.state;\n        const { setTheme, setTopNum, setType, setFocused, setCount, setBase, setWidth, setHeight, setFilter, setTemp } = this;\n\n        return (\n            <UserContext.Provider\n                value={{\n                    theme,\n                    url,\n                    topNum,\n                    type,\n                    focused,\n                    count,\n                    base,\n                    width,\n                    height,\n                    filter,\n                    temp,\n                    setTheme,\n                    setTopNum,\n                    setType,\n                    setFocused,\n                    setCount,\n                    setBase,\n                    setWidth,\n                    setHeight,\n                    setFilter,\n                    setTemp,\n                }}>\n                {children}\n            </UserContext.Provider>\n        );\n    }\n}\n\nexport default UserContext;\n\nexport { UserProvider };\n","import './index.scss';\nimport React, { useContext } from 'react';\nimport context from '../Context';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { topNum, setTopNum, setFocused, setCount, base } = state;\n  const data = props.data;\n  const onClick = (id) => {\n    setFocused(0);\n    setCount(0);\n    setTopNum(id);\n  }\n  return (\n    <div className=\"head\">\n      <div className={'topLogo'} onClick={() => console.log(state)}>\n        <div className={'logo'}>\n          <img src={process.env.PUBLIC_URL + '/assets/logo.png'} alt={'logo'} />\n        </div>\n      </div>\n      <div className={classNames('topNav', base && 'active')}>\n        {\n          data && data.length > 0 && (\n            <>\n              <img className={'flag'} src={data[topNum].MARK} alt={data[topNum].기지} />\n              <span className={'viewText'}>{data[topNum].기지}</span>\n            </>\n          )\n        }\n        {data && (\n          data.map((item, index) => {\n            return (\n              <button key={index} className={classNames('topButton', index === topNum ? 'active' : null)} onClick={() => !base && onClick(index)}>\n                {item.대대}\n              </button>\n            )\n          }))\n        }\n      </div>\n    </div>\n  );\n}\n\nApp.defaultProps = {\n  topNum: null,\n  type: 'list',\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useState, useContext } from 'react';\nimport context from '../Context';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { base } = state;\n  const [stepData] = useState([\n    { title: 'STEP 1', comment: 'Condition' },\n    { title: 'STEP 2', comment: 'Aircraft' },\n    { title: 'STEP 3', comment: 'Confirm' },\n    { title: 'STEP 4', comment: 'Finish' }\n  ])\n  return (\n    <div className={'step'}>\n      <ul className={classNames('stepGroup', base && 'active')}>\n        {\n          stepData.map((item, idx) => {\n            return (\n              <li key={idx} className={classNames('stepItem', idx === props.stepNum ? 'active' : null)}>\n                <span className={'stepItemTitle'}>{item.title}</span>\n                <span className={'stepItemComment'}>{item.comment}</span>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}\n\nApp.defaultProps = {\n  stepNum: 1,\n};\n\nexport default App;\n","import { useEffect, useState, } from 'react';\nimport _ from 'lodash';\n\nexport function getColor(percent, start, end, alpha) {\n    var a = percent / 100,\n        b = (end - start) * a,\n        c = b + start,\n        d = alpha ? alpha : 1;\n    return 'hsla(' + c + ', 60%, 48%, ' + d + ')';\n}\n\nexport function byKeys(obj, keys = []) {\n    const filtered = {}\n    keys.forEach(key => {\n        if (obj.hasOwnProperty(key)) {\n            filtered[key] = obj[key]\n        }\n    })\n    return filtered\n}\n\nexport function useData(arr, num, checkList) {\n    const [data, setData] = useState({\n        data: undefined\n    });\n    const customizer = ((obj, src) => {\n        if (obj === 'N') {\n            return 0;\n        } else {\n            wAverage += src;\n        };\n    });\n    let wAverage = 0;\n    useEffect(() => {\n        const keyArray = _.keys(arr[num].기준정보);\n        const weight = arr[num].가중치;\n        const used = _.cloneDeep(checkList);\n        const weightFix = _.mergeWith(used, weight, customizer);\n        const lists = _.cloneDeep(arr[num].호수추천);\n        _.each(lists, (obj) => {\n            let valueSum = 0;\n            _.map(obj, (v, k) => {\n                //console.log(k, v)\n                const findKey = keyArray.find(element => element === k);\n                if (findKey && used) {\n                    valueSum += (v * weightFix[k])\n                    //valueSum += (v * used[findKey])\n                }\n            })\n            obj.TOTAL = Number((valueSum / wAverage).toFixed(2));\n        });\n\n        const temp = _.sortBy(lists, 'TOTAL').reverse();\n        setData({\n            data: temp,\n        });\n    }, [arr, num, checkList, wAverage]);\n    return data;\n}\n\nexport function useMove(type, count, grid, position) {\n    const [move, setMove] = useState({\n        x: 0,\n    });\n    useEffect(() => {\n        let _x = 0;\n        if (type === 'list') {\n            _x = Math.round(position.x - ((grid.width + grid.gap) * count) - (grid.width * 0.5))\n            //} else if (data.length > 15 && !base) {\n        } else {\n            _x = Math.round(position.x - ((grid.width + grid.gap) * count))\n        };\n        setMove({\n            x: _x,\n        });\n    }, [type, count, grid, position]);\n    return move;\n}\n\nexport function usePosition(target, type, size) {\n    const [position, setPosition] = useState({\n        x: 0,\n    });\n    useEffect(() => {\n        if (target.current === null) {\n            return { x: 0 };\n        }\n        setPosition({\n            x: type === 'list' ? Math.round(target.current.clientWidth * 0.5) : 0,\n        });\n    }, [target, type, size,]);\n    return position;\n}\n\nexport function useGridNum(target, total, type) {\n    const [gridNum, setGridNum] = useState({\n        col: undefined,\n        row: undefined,\n        end: undefined,\n        gap: undefined,\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        if (!total) {\n            return { col: 0, row: 0, end: 0, gap: 0, width: 0, height: 0 };\n        }\n        const targetWidth = Math.round(target.current.clientWidth);\n        const count = Math.floor(targetWidth / 360);\n\n        let _row = 1;\n        let _col = total;\n        let _end = total - 1;\n        let _gap = 96;\n\n        let _width = type === 'list' ? 360 : Math.round((targetWidth - (16 * (count - 1))) / count);\n        let _height = 160;\n\n        let rowNum = Math.round(targetWidth / _width);\n        let colNum = Math.ceil(total / rowNum);\n        let colMin = Math.min(colNum, 3)\n\n        if (type === 'grid') {\n            if (colNum > 3) {\n                _row = colMin;\n                _col = Math.ceil(total / _row);\n            } else {\n                _row = colMin;\n                _col = rowNum;\n            };\n            _gap = 16;\n            _end = _col - Math.round(targetWidth / _width);\n        };\n        setGridNum({\n            col: _col,\n            row: _row,\n            end: _end,\n            gap: _gap,\n            width: _width,\n            height: _height,\n        });\n    }, [target, total, type]);\n    return gridNum;\n}\n\nexport function useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        };\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n}\n\nexport function shuffle(dataSet) {\n    const array = dataSet.slice();\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n    return array;\n}\n","\nimport './guideBox.scss';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n    const active = props.active;\n    //const type = props.type;\n\n    const Box = () => {\n        const result = [];\n        for (let i = 0; i < 4; i++) {\n            result.push(<span key={i} className={classNames('boxLine')} />)\n        }\n        return result;\n    }\n    return (\n        <>\n        <div className={classNames('boxLineContainer', active && 'active')}>\n            {\n                <Box />\n            }\n        </div>\n        </>\n    );\n}\n\nexport default App;","\nimport './gueage.scss';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n    const value = props.value;\n    const color = props.color;\n\n    const Gueage = () => {\n        const result = [];\n        for (let i = 0; i < 10; i++) {\n            result.push(<span key={i} className={classNames('boxGueage')} />)\n        }\n        return result;\n    }\n    return (\n        <div className={classNames('boxGueageContainer')}>\n            <div className={'boxGueageBase'} style={{ width: value + '%', backgroundColor: color }}/>\n            <Gueage />\n        </div>\n    );\n}\n\nexport default App;","import './slideItem.scss';\nimport React, { useContext, } from 'react';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { Flipped } from 'react-flip-toolkit';\nimport { getColor } from '../Mixin'\nimport context from '../Context';\n\nimport GuideBox from './guideBox';\nimport GueageBox from './gueage';\n\nconst App = (props) => {\n    const state = useContext(context);\n    const { focused, setFocused, type, setBase, setCount, setTemp } = state;\n    const index = props.index;\n    const item = props.item;\n    const active = focused === index && type !== 'grid';\n    const selectItem = props.selectItem;\n    const id = item.호기ID;\n    //\n    let percentColor = getColor(item.TOTAL, 0, 240);\n\n    const onClick = () => {\n        setTemp([0, 0, 0, 0])\n        selectItem(item)\n        setFocused(index)\n        setBase(true)\n        type === 'list' && setCount(index);\n    }\n\n    const getImage = (e) => {\n        return 'assets/aircraft/' + e + '.png'\n    }\n\n    return (\n        <Flipped flipId={id} translate>\n            <div key={item.호기ID} className={classNames('listItem', active && 'active')}>\n                <GuideBox active={active} />\n                <div className={'aircraftGroup'} >\n                    <div className={'aircraft'}>\n                        <img src={getImage(item.기종)} alt={'KF-21'} />\n                    </div>\n                </div>\n                {(focused === index && type === 'list') ? (\n                    <div className={classNames('item')} >\n                        <div>\n                            <GueageBox value={item.TOTAL} color={percentColor} />\n                            <span className={'itemRating'}>RATING POINT</span>\n                            <div className={classNames('itemPercent')} style={{ color: percentColor }}>{item.TOTAL}%</div>\n                        </div>\n                        <div className={'itemTitleGroup'}>\n                            <div className={'itemTitle'}>{item.호기}호기</div>\n                            <span className={'itemSubText'}>Boramae</span>\n                        </div>\n                        <button className={'detailButton'} onClick={() => { onClick() }} />\n                    </div>\n                ) : (\n                    <div className={classNames('item')} >\n                        <div className={'itemTitle'}>{item.호기}호기</div>\n                        <GueageBox value={item.TOTAL} color={percentColor} />\n                        <div className={classNames('itemPercent')} style={{ color: percentColor }}>{item.TOTAL}%</div>\n                        <div className={'itemIndex'}>{index < 9 ? '0' + (index + 1) : (index + 1)}</div>\n                        <button className={'detailButtonGrid'} onClick={() => { onClick() }} />\n                    </div>\n                )}\n\n            </div>\n        </Flipped>\n    );\n}\n\nApp.defaultProps = {\n    focused: 0,\n};\n\nexport default App;\n","\nimport React, { useRef, useEffect, useState} from 'react';\nimport _ from 'lodash';\nimport { getColor } from '../Mixin'\n\nconst App = (props) => {\n    const [canvas, setCanvas] = useState(null)\n    const [context, setContext] = useState(null)\n    \n    const item = props.item;\n    const aver = props.aver || [0, 0, 0, 0];\n    const total = props.total;\n    //\n    const def = Object.keys(aver).map(key => ({ key, value: aver[key] }));\n    const now = Object.keys(item).map(key => ({ key, value: item[key] }));\n\n    const items = [];\n    items.push(def)\n    items.push(now)\n    //console.log(items)\n\n    const fillColor = getColor(total, 0, 240, 0.48);\n    const strokeColor = getColor(total, 0, 240, 1);\n    const canvasRef = useRef(null);\n\n    const fixSize = 0.5;\n    const width = 480;\n    const height = 360;\n    const wCenter = width * 0.5;\n    const hCenter = height * 0.5;\n    const size = 20;\n    const timeout = useRef(null);\n    let curArr = [];\n    let startArr = [];\n    let endArr = []\n    let delta;\n    let animationComplete = true;\n    let FPS = 60;\n    let duration = 20;\n\n    curArr.push(props.cur);\n    startArr.push(props.cur);\n    endArr.push(Object.keys(item).map(key => (item[key])));\n\n    const base = () => {\n        context.strokeStyle = \"#ccc\";  // 선 색깔\n        context.lineJoin = 'round';\t// 선 끄트머리(?)\n        context.lineWidth = 1;\t\t// 선 굵기\n        context.shadowBlur = 0;\n        //세로\n        context.beginPath();\n        context.moveTo(wCenter + fixSize, size);\n        context.lineTo(wCenter + fixSize, height - size);\n        //가로\n        context.moveTo(80, hCenter + fixSize);\n        context.lineTo(width - 80, hCenter + fixSize);\n        //context.closePath();\n        //\n        context.stroke();\n        //\n        let ss = ((height / 2) - size) / 5;\n        let polygonPoints = [\n            wCenter, hCenter - ss * 5, // 0\n            wCenter + ss * 5, hCenter, // 1\n            wCenter, hCenter + ss * 5, // 2\n            wCenter - ss * 5, hCenter, // 3\n        ];\n        context.fillPolygon(polygonPoints, 'rgba(0,0,0,0.0)', '#a4a4a4');\n        for (let i = 0; i < 5; i++) {\n            const inSize = ss * i;\n            let polygonPoints = [\n                wCenter, hCenter - inSize,\n                wCenter + inSize, hCenter,\n                wCenter, hCenter + inSize,\n                wCenter - inSize, hCenter,\n            ];\n            context.fillPolygon(polygonPoints, 'rgba(0,0,0,0)', '#dedede');\n        }\n        context.font = 'bold 12px Arial';\n        context.textAlign = 'center';\n        context.textBaseline = 'bottom';\n        context.fillStyle = '#1c1c1c';\n        context.shadowBlur = 0;\n        context.fillText(now[0].key, wCenter, hCenter - 165);\n\n        context.textAlign = 'left';\n        context.textBaseline = 'middle';\n        context.fillText(now[1].key, wCenter + 165, hCenter);\n\n        context.textAlign = 'center';\n        context.textBaseline = 'top';\n        context.fillText(now[2].key, wCenter, hCenter + 165);\n\n        context.textAlign = 'right';\n        context.textBaseline = 'middle';\n        context.fillText(now[3].key, wCenter - 165, hCenter);\n    }\n\n    const draw = (arr) => {\n        context.clearRect(0, 0, 480, 360);\n        const ss = ((height / 2) - size) / 100;\n        const setArray = [\n            { stroke: 'rgba(0,0,0,0.24)', fill: 'rgba(0,0,0,0.16)', width: 1, shadow: 0 },\n            { stroke: strokeColor, fill: fillColor, width: 1.6, shadow: 0 },\n        ]\n        base();\n        _.map(items, (item, i) => {\n            let polygonPoints = [];\n            if (i === 0) {\n                polygonPoints = [\n                    wCenter, hCenter - ss * item[0].value,\n                    wCenter + ss * item[1].value, hCenter,\n                    wCenter, hCenter + ss * item[2].value,\n                    wCenter - ss * item[3].value, hCenter,\n                ];\n            } else {\n                polygonPoints = [\n                    wCenter, hCenter - ss * arr[0],\n                    wCenter + ss * arr[1], hCenter,\n                    wCenter, hCenter + ss * arr[2],\n                    wCenter - ss * arr[3], hCenter,\n                ];\n            }\n            context.fillPolygon(polygonPoints,\n                setArray[i].fill,\n                setArray[i].stroke,\n                setArray[i].width,\n                setArray[i].shadow,\n            );\n        })\n    }\n\n    const loop = () => {\n        for (let i = 0; i < endArr.length; i += 1) {\n            for (let t = 0; t < endArr[i].length; t += 1) {\n                delta = (endArr[i][t] - startArr[i][t]) / duration;\n                curArr[i][t] += delta;\n                if (delta) {\n                    animationComplete = false;\n                };\n            };\n        };\n        //\n        let temp0 = endArr.length - 1;\n        let temp1 = endArr[temp0].length - 1;\n\n        if (Math.round(endArr[temp0][temp1] * 10) / 10 === Math.round(startArr[temp0][temp1] * 10) / 10) {\n            animationComplete = true;\n        };\n        if (animationComplete) {\n            draw(endArr[0]);\n            clearTimeout(timeout.current);\n            //cancelAnimationFrame(loop);\n        } else {\n            draw(curArr[0])\n            timeout.current = setTimeout(() => { loop() }, FPS / duration);\n            //requestAnimationFrame(loop);\n            \n        };\n    };\n\n    useEffect(() => {\n        setCanvas(canvasRef.current);\n        canvas && setContext(canvas.getContext('2d'));\n        if (context) {\n            clearTimeout(timeout.current);\n            loop();\n            //requestAnimationFrame(loop);\n        }\n    }, [canvas, context, item])\n\n    return (\n        <canvas ref={canvasRef} className=\"canvas\" width={480} height={360} />\n    );\n}\n\nexport default App;\n\nCanvasRenderingContext2D.prototype.fillPolygon = function (points, fillColor, strokeColor, lineWidth, shadow) {\n    if (points.length <= 0) return;\n    this.closePath();\n    this.strokeStyle = strokeColor;  // 선 색깔\n    this.lineJoin = 'round';\t// 선 끄트머리(?)\n    this.lineWidth = lineWidth || .5;\t\t// 선 굵기\n    this.fillStyle = fillColor;\n    this.beginPath();\n    this.moveTo(points[0], points[1]);\n    for (let i = 2; i < points.length - 1; i += 2) {\n        this.lineTo(points[i], points[i + 1])\n    }\n    this.shadowColor = fillColor;\n    this.shadowBlur = shadow || 0;\n    this.closePath();\n    this.stroke();\n    this.fill();\n}","import './expendItem.scss';\nimport React, { useContext, useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { getColor, byKeys } from '../Mixin'\nimport context from '../Context';\nimport { animated, useSpring } from 'react-spring'\n\nimport Chart from './chart';\n\nconst App = (props) => {\n    //console.log('ex')\n    const state = useContext(context);\n    const { type, setBase, focused, temp, } = state;\n    const item = props.item;\n    //const rank = props.index;\n    const selectItem = props.select;\n    const checkList = props.checkList;\n    const ess = props.ess;\n    const aver = props.aver;\n\n    const items = byKeys(item, _.keys(checkList));\n    const averItem = byKeys(aver, _.keys(checkList));\n    //\n    const percentColor = item && getColor(item.TOTAL, 0, 240);\n\n    const {number, color} = useSpring({\n        from: { number: 0 },\n        to: {\n            number: item.TOTAL,\n            color: percentColor\n        },\n        reset: true,\n        //delay: 200,\n    });\n\n    //const iarr = byKeys(item, _.keys(ess))\n    //const arrItem = Object.keys(iarr).map(key => (iarr[key]));\n\n    const [itemIcon] = useState([\n        { name: '주기검사', icon: 'ri-tools-fill' },\n        { name: '야간비행여부', icon: 'ri-contrast-2-fill' },\n        { name: '외장변경', icon: 'ri-timer-line' },\n        { name: '실무장여부', icon: 'ri-flight-takeoff-fill' },\n        { name: '항공기등급', icon: 'ri-todo-line' },\n        { name: '가동상태', icon: 'ri-user-heart-line' },\n        { name: '최근비행', icon: 'ri-calendar-line' },\n        { name: '주요결함', icon: 'ri-pulse-line' },\n    ])\n\n    const SideItem = item => {\n        const result = [];\n        _.map(items, (val, key) => {\n            //const color = getColor(val, 0, 240)\n            result.push(\n                <li key={key} className={classNames('sideItem', checkList[key] === 'N' && 'disabled')}>\n                    <span className={'sideItemBase'} />\n                    <span className={'sideItemIcon'}><i className={_.find(itemIcon, ['name', key]).icon} /></span>\n                    <span className={'sideItemTitle'}>{key}</span>\n                    <span className={'sideItemValue'}>\n                        {\n                            checkList[key] === 'N' ?\n                                <i className=\"ri-eye-off-line\" /> :\n                                <span className={'sideItemUd'}>{val}<i className={val > averItem[key] ? \"ri-arrow-up-s-fill\" : \"ri-arrow-down-s-fill\"}></i></span>\n                        }\n                    </span>\n                </li>\n            )\n        })\n        return result;\n    }\n\n    const onClick = () => {\n        //setTemp(arrItem);\n        selectItem(null);\n        setBase(false);\n    }\n\n    useEffect(() => {\n\n    }, [focused])\n\n    return (\n        <div className={'detailContainer'} style={{ width: 360, height: 360 }}>\n            <ul className={'detailContents'}>\n                <SideItem {...item} type={type} key={'sideItem'} />\n            </ul>\n            <div className={classNames('listItem', 'listItemExpend')} >\n                <div className={'graph'}>\n                    <Chart item={byKeys(item, _.keys(ess))} aver={byKeys(aver, _.keys(ess))} total={item.TOTAL} cur={temp} />\n                </div>\n                <div className={'itemRank'}></div>\n                <div className={'itemTitle'}>{item && item.호기}호기 <span className={'itemTitleGray'}>BORAMAE</span></div>\n                <span className={'itemPoint'}>MATCHING POINT</span>\n                <animated.div className={classNames('itemPercent')} style={{ color: color }}>\n                    {number.to(n => n.toFixed(2) + '%')}\n                </animated.div>\n                <button className={'detailButton'} onClick={() => { onClick() }} />\n            </div>\n        </div>\n    );\n}\n\nApp.defaultProps = {\n    focused: 0,\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport { byKeys } from '../Mixin'\n\nimport context from '../Context';\nimport SlideItem from './slideItem';\nimport ExpendItem from './expendItem';\n//import GuideBox from './guideBox';\n\nimport { useWindowSize, useGridNum, usePosition, useMove, useData } from '../Mixin';\nimport _ from 'lodash';\n\nconst App = (props) => {\n  const DS = props.data;\n  const state = useContext(context);\n  const { topNum, type, setType, focused, setFocused, count, setCount, base, setBase, setTemp } = state;\n  const [selectItem, setSelectItem] = useState(null);\n\n  const [checkList, setCheckList] = useState(null);\n  const sliderRef = useRef(null);\n  const size = useWindowSize();\n\n  const result = useData(DS, topNum, checkList);\n\n  const grid = useGridNum(sliderRef, result.data && result.data.length, type);\n\n  const position = usePosition(sliderRef, type, size);\n  const move = useMove(type, count, grid, position);\n\n  const ess = DS[topNum].필수항목;\n  const aver = DS[topNum].평균;\n  const comment = DS[topNum].배정조건;\n\n  \n  const [filterView, setFilterView] = useState(null);\n  //\n  //const timeout = useRef(null);\n  /*const autoSlide = () => {\n    if (focused < grid.col - 1) {\n      moveSlide('next');\n    } else {\n      setFocused(0);\n      setCount(0);\n    }\n    timeout.current = setTimeout(() => { autoSlide() }, 2000);\n  }*/\n  const moveSlide = (postion) => {\n    const iarr = byKeys(result.data[focused], _.keys(ess))\n    const arrItem = Object.keys(iarr).map(key => (iarr[key]));\n    setTemp(arrItem)\n\n    if (postion === 'prev') {\n      type === 'list' && focused > 0 && setFocused(focused - 1);\n      count > 0 && setCount(count - 1);\n    } else if (postion === 'next') {\n      type === 'list' && focused < grid.end && setFocused(focused + 1);\n      count < grid.end && setCount(count + 1);\n    };\n  };\n\n  const onCheck = e => {\n    let name = e.target.value;\n    setCheckList(\n      { ...checkList, [name]: e.target.checked ? 'Y' : 'N' }\n    );\n  };\n\n  const onWindow = () => {\n    window['returnFn'](result.data[focused]);\n  }\n\n  const fView = () => {\n    if (filterView === null) {\n      setFilterView('active');\n      setType('grid');\n    } else {\n      setFilterView(null);\n      setType('list');\n    }\n    setSelectItem(null);\n    setBase(false)\n    setFocused(0);\n    setCount(0);\n  }\n\n  const CheckBox = () => {\n    const result = [];\n    _.map(checkList, (v, k) => {\n      const label = 'check' + k;\n      result.push(\n        <div className={'checkbox'} key={'check' + k}>\n          <div className='checkboxInput'><input id={label} className={'check'} value={k} type={'checkbox'} checked={v === 'Y' && true} disabled={ess[k]} onChange={(e) => onCheck(e)} /></div>\n          <div className={'checkboxText'} ><label htmlFor={label} className={'label'}>{k}</label>\n            <span className={'comment'}>{comment[k]}</span></div>\n        </div>\n      )\n    })\n    return result;\n  }\n\n  useEffect(() => {\n    setCheckList(DS[topNum].기준정보);\n  }, [DS, topNum]);\n\n  return (\n    <Flipper className={'slider'} flipKey={[result.data]}>\n      {result.data ? (\n        <>\n          <div className={classNames('controller', type === 'grid' && 'active')}>\n            <button className={'controllerButton prevButton'} onClick={() => moveSlide('prev')}><i className=\"ri-arrow-left-s-line\"></i><span className=\"controllText\">PREV</span></button>\n            <button className={'controllerButton filterButton'} onClick={() => fView()}><i className={type === 'list' ? \"ri-arrow-up-s-line\" : \"ri-close-fill\"}></i><span className=\"controllText\">배정조건</span></button>\n            <button className={'controllerButton nextButton'} onClick={() => moveSlide('next')}><span className=\"controllText\">NEXT</span><i className=\"ri-arrow-right-s-line\"></i></button>\n            <div className={classNames('filter', filterView)}>\n              <div className={'filterClose'} onClick={() => fView()} />\n              <CheckBox />\n              <ul className={'filterInfo'}>\n                <li className={'infobox boxdisable'}>필수</li>\n                <li className={'infobox boxchecked'}>선택</li>\n                <li className={'infobox boxnormal'}>선택가능</li>\n              </ul>\n            </div>\n          </div>\n          <div className={classNames('slide')} ref={sliderRef}>\n            <div className={classNames('list', type === 'grid' && 'active')}\n              style={{\n                transform: 'translateX(' + move.x + 'px)',\n                gridTemplateColumns: 'repeat(' + grid.col + ', ' + grid.width + 'px)',\n                gridTemplateRows: 'repeat(' + grid.row + ', ' + grid.height + 'px)',\n                gap: grid.gap,\n              }}\n            >\n              {\n                result.data.map((item, i) => {\n                  return (\n                    <SlideItem item={item} index={i} focused={focused} key={'slideItem' + i} selectItem={setSelectItem} />\n                  )\n                })\n              }\n            </div>\n          </div>\n\n          {(selectItem === null) ? (\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'}\n            //onComplete={() => {type==='grid'&&setFocused(prev)}}\n            >\n              {<div className={'empty'}>\n                <div className={'detail'}>\n                  <ExpendItem item={result.data[focused]} ess={ess} aver={aver} checkList={checkList} active={false} select={setSelectItem} key={'sideItem'} />\n                </div>\n              </div>}\n            </Flipped>\n          ) : (\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'}>\n              <div className={'detail'}>\n                <ExpendItem item={result.data[focused]} ess={ess} aver={aver} checkList={checkList} active={true} select={setSelectItem} key={'sideItem'} />\n              </div>\n            </Flipped>\n          )}\n          <button className={classNames('callButton', base && 'active')} onClick={onWindow}>\n            <span className='callButtonText'>선 택</span>\n          </button>\n        </>\n      ) : (\n        <div>empty</div>\n      )}\n\n    </Flipper>\n  );\n}\n\nApp.defaultProps = {\n  focused: 0,\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport context from '../Context';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { type, base } = state;\n  const loading = props.loading;\n  const slideSize = 360;\n\n  return (\n    <div className={classNames('base', type !== 'grid' ? null : 'active', loading && 'loading')}>\n      <div className={'baseContents'} style={{ width: slideSize, height: slideSize }}>\n        <div className={classNames('baseBox')} />\n        <div className={classNames('inBox')} />\n        {!loading &&\n          <div className={'detailButton'}>\n            <div className={classNames('detailButtonContainer', base && 'active')}>\n              <span className={'detailText'}>상세정보<i className={\"ri-search-line\"}></i></span>\n              <span className={'detailText'}>닫기<i className={\"ri-close-line\"}></i></span>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './index.scss';\nimport Base from '../Base';\nimport Chart from '../Slide/chart';\nimport { shuffle } from '../Mixin';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n\n    let cc = 0;\n    const duration = 1000;\n    //console.log(title, meassage)\n    const maxCount = props.meassage.length || 0;\n    const callBack = props.callBack;\n    const [end, setEnd] = useState([0, 0, 0, 0]);\n    const [start] = useState([0, 0, 0, 0]);\n    const [percent, setPercent] = useState(0);\n    const [ment] = useState(shuffle(props.meassage));\n    const [fix, setFix] = useState(props.startMsg);\n    const timeout = useRef(null);\n\n    const [flag, setFlag] = useState(false);\n    //\n    const loop = useCallback(() => {\n        if (props.title) {\n            clearTimeout(timeout.current);\n            let item = null;\n            if (cc > maxCount - 1) {\n                item = randomArray(100, 100);\n                setFix(props.endMsg);\n            } else {\n                item = randomArray(50, 100);\n                setFix(ment[cc])\n            }\n\n            if (cc < maxCount) {\n                cc++;\n                timeout.current = setTimeout(() => { loop() }, duration);\n            } else {\n                setFlag(true);\n                timeout.current = setTimeout(() => {\n                    callBack(false);\n                    clearTimeout(timeout.current);\n                }, 1200);\n            }\n            setEnd(item.array);\n            setPercent(item.total);\n        }\n    }, [cc, maxCount, ment, props])\n\n    const randomArray = useCallback((n, m) => {\n        let arr = {};\n        let total = 0;\n        for (var i = 0; i < props.title.length; i++) {\n            const value = Math.floor((Math.random() * (m - n) + n));//Math.round((Math.random() * v) * 10) / 10;\n            arr[props.title[i]] = value;\n            total += value;\n        };\n        return { array: arr, total: total / props.title.length };\n    }, [props]);\n\n    useEffect(() => {\n        loop();\n        return () => setEnd(null);\n    }, [loop])\n\n    return (\n        <div className='load'>\n            <Base loading={true} />\n            <div className={classNames('graph', flag && 'active')}>{props.title &&\n                <Chart item={end} total={percent} cur={start} />}\n                <div className={'callButton'} onClick={() => { callBack(false) }}>\n                    <span className='callButtonText'>{fix}</span>\n                </div>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport './App.scss';\nimport Head from './component/Head/';\nimport Foot from './component/Foot/';\nimport Slide from './component/Slide';\nimport Base from './component/Base';\nimport Loading from './component/Loading';\n\nconst App = () => {\n  const props = window['getProps']();\n  const [isMobile] = useState(/Mobi/i.test(window.navigator.userAgent));\n  const [top, setTop] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const onLoad = useCallback(async () => {\n    fetch(props.url, {\n      headers: {\n        'Accept': 'application / json'\n      }\n    })\n      .then(response => response.json())\n      .then(response => setData(response));\n  }, [props.url])\n\n  useEffect(() => {\n    let resultTop = [];\n    _.forEach(data, function (n, key) {\n      resultTop.push(n.부대)\n    });\n    setTop(resultTop);\n  }, [data]);\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\" />\n      <main className=\"main\">\n        <div className={classNames('contents', loading && 'loading')}>\n          {isMobile ? (\n            <div>모바일은 지원하지 않습니다.</div>\n          ) : (\n            <>\n              <Base loading={loading}/>\n              <Head data={top} />\n              {loading ?\n                <Loading callBack={setLoading} {...props} /> : <Slide data={data} />\n              }\n              <Foot stepNum={loading ? 0 : 1}/>\n            </>\n\n          )}\n        </div>\n      </main>\n      <footer className=\"footer\">\n        {isMobile ? '© ROK KF-21 lis, ALL RIGHTS RESERVED' : '© ROK Government KF-21 lis program data, ALL RIGHTS RESERVED'}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { UserProvider } from './component/Context';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}