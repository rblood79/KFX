{"version":3,"sources":["component/Context/index.js","component/Head/index.js","component/Foot/index.js","component/Mixin/index.js","component/Slide/guideBox.js","component/Slide/gueage.js","component/Slide/aircraft.js","component/Slide/slideItem.js","component/Slide/chart.js","component/Slide/detailItem.js","component/Slide/focusItem.js","component/Slide/index.js","component/Base/index.js","component/Loading/index.js","component/Mobile/index.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","state","engine","topNum","type","focused","base","count","width","height","filter","temp","setTheme","theme","a","setState","setEngine","prevState","setTopNum","setType","setFocused","setBase","setCount","setWidth","setHeight","setFilter","setTemp","children","this","props","url","Provider","value","Component","App","useContext","context","data","useEffect","className","classNames","onClick","src","process","alt","length","MARK","기지","map","item","index","id","대대","defaultProps","useState","title","comment","stepData","step","num","stepNum","idx","getColor","percent","start","end","alpha","byKeys","obj","keys","filtered","forEach","key","hasOwnProperty","useWindowSize","undefined","flag","windowSize","setWindowSize","handleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","debounce","window","innerWidth","innerHeight","addEventListener","removeEventListener","active","Box","result","i","push","color","number","useSpring","from","to","reset","delay","Gueage","div","style","n","toFixed","backgroundColor","prop","config","duration","x","img","range","output","Math","round","transform","marginTop","test","selectItem","호기ID","percentColor","TOTAL","flipId","translate","호기","canvasRef","useRef","timeout","canvas","setCanvas","setContext","aver","total","def","Object","now","fillColor","strokeColor","wCenter","hCenter","current","getContext","delta","curArr","cur","startArr","endArr","items","complete","draw","arr","clearRect","ss","setArray","stroke","fill","shadow","strokeStyle","lineJoin","lineWidth","shadowBlur","beginPath","moveTo","lineTo","closePath","polygonPoints","fillPolygon","inSize","font","textAlign","textBaseline","fillStyle","fillText","numView","loop","t","temp0","temp1","FPS","ref","CanvasRenderingContext2D","prototype","points","shadowColor","select","checkList","ess","averItem","name","icon","itemIcon","SideItem","val","find","DS","filterView","setFilterView","setSelectItem","setCheckList","setImages","sliderRef","setData","wAverage","keyArray","기준정보","weight","가중치","used","cloneDeep","weightFix","mergeWith","lists","호수추천","each","valueSum","v","k","element","Number","sortBy","reverse","useData","grid","col","row","gap","gridNum","setGridNum","size","targetWidth","floor","_row","_col","_end","_gap","_width","rowNum","colNum","ceil","colMin","min","useGridNum","move","setMove","_x","_c","useMove","필수항목","평균","배정조건","moveSlide","postion","iarr","arrItem","tarr","fView","CheckBox","label","checked","disabled","onChange","e","target","onCheck","htmlFor","preImage","Image","preLoad","flipKey","gridTemplateColumns","gridTemplateRows","loading","Line","cc","maxCount","meassage","callBack","setEnd","setPercent","dataSet","temporaryValue","randomIndex","array","slice","currentIndex","random","shuffle","ment","startMsg","fix","setFix","setFlag","randomArray","m","endMsg","uid","match","params","top","setTop","setLoading","onLoad","URL","fetch","headers","then","response","json","resultTop","부대","ini","isMobile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.802187c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst UserContext = React.createContext();\n\nclass UserProvider extends Component {\n    // Context state\n    state = {\n        engine: false,\n        topNum: 0,\n        type: 'list',\n        focused: 0,\n        base: false,\n        count: 0,\n        width: 0,\n        height: 0,\n        filter: null,\n        temp: [0,0,0,0,0],\n    };\n    // Method to update state\n    setTheme = async theme => {\n        this.setState(\n            {\n                theme: theme ? 'dark' : 'light',\n            }\n        );\n    };\n    setEngine = engine => {\n        this.setState(prevState => ({ engine }));\n    };\n    setTopNum = topNum => {\n        this.setState(prevState => ({ topNum }));\n    };\n    setType = type => {\n        this.setState(prevState => ({ type }));\n    };\n    setFocused = focused => {\n        this.setState(prevState => ({ focused }));\n    };\n    setBase = base => {\n        this.setState(prevState => ({ base }));\n    };\n    setCount = count => {\n        this.setState(prevState => ({ count }));\n    };\n    setWidth = width => {\n        this.setState(prevState => ({ width }));\n    };\n    setHeight = height => {\n        this.setState(prevState => ({ height }));\n    };\n    setFilter = filter => {\n        this.setState(prevState => ({ filter }));\n    };\n    setTemp = temp => {\n        this.setState(prevState => ({ temp }));\n    };\n    //\n    render() {\n        const { children } = this.props;\n        const { url, theme, engine, topNum, type, focused, count, base, width, height, filter, temp } = this.state;\n        const { setTheme, setEngine, setTopNum, setType, setFocused, setCount, setBase, setWidth, setHeight, setFilter, setTemp } = this;\n\n        return (\n            <UserContext.Provider\n                value={{\n                    theme,\n                    url,\n                    engine,\n                    topNum,\n                    type,\n                    focused,\n                    count,\n                    base,\n                    width,\n                    height,\n                    filter,\n                    temp,\n                    setTheme,\n                    setEngine,\n                    setTopNum,\n                    setType,\n                    setFocused,\n                    setCount,\n                    setBase,\n                    setWidth,\n                    setHeight,\n                    setFilter,\n                    setTemp,\n                }}>\n                {children}\n            </UserContext.Provider>\n        );\n    }\n}\n\nexport default UserContext;\n\nexport { UserProvider };\n","import './index.scss';\nimport React, { useContext, useEffect } from 'react';\nimport context from '../Context';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { topNum, setTopNum, setFocused, setCount, base, engine, setEngine } = state;\n  const data = props.data;\n  const onClick = (id) => {\n    setFocused(0);\n    setCount(0);\n    setTopNum(id);\n  }\n  useEffect(() => {\n  },[])\n  return (\n    <div className=\"head\">\n      <div className={classNames('topLogo', engine && 'active')} onClick={() => setEngine(engine ? false : true)}>\n        <div className={'logo'}>\n          <img src={process.env.PUBLIC_URL + '/assets/other/logo.png'} alt={'logo'} />\n        </div>\n      </div>\n      <div className={classNames('topNav', base && 'active')}>\n        {\n          data && data.length > 0 && (\n            <>\n              <img className={'flag'} src={data[topNum].MARK} alt={data[topNum].기지} />\n              <span className={'viewText'}>{data[topNum].기지}</span>\n            </>\n          )\n        }\n        {data && (\n          data.map((item, index) => {\n            return (\n              <button key={index} className={classNames('topButton', index === topNum ? 'active' : null)} onClick={() => !base && onClick(index)}>\n                {item.대대}\n              </button>\n            )\n          }))\n        }\n      </div>\n    </div>\n  );\n}\n\nApp.defaultProps = {\n  topNum: null,\n  type: 'list',\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useState, useContext, useEffect } from 'react';\nimport context from '../Context';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { base, type } = state;\n  const [stepData] = useState([\n    { title: 'STEP 1', comment: 'Search' },\n    { title: 'STEP 2', comment: 'Aircraft' },\n    { title: 'STEP 3', comment: 'Condition' },\n    { title: 'STEP 4', comment: 'Finish' }\n  ]);\n\n  const step = () => {\n    let num = props.stepNum;\n    if (type === 'grid') {\n      num = 2;\n    };\n    return num;\n  };\n  \n  useEffect(() => {\n  }, [])\n  return (\n    <div className={'step'}>\n      <ul className={classNames('stepGroup', base && 'active')}>\n        {\n          stepData.map((item, idx) => {\n            return (\n              <li key={idx} className={classNames('stepItem', idx === step() ? 'active' : null)}>\n                <span className={'stepItemTitle'}>{item.title}</span>\n                <span className={'stepItemComment'}>{item.comment}</span>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}\n\nApp.defaultProps = {\n  stepNum: 1,\n};\n\nexport default App;\n","import { useEffect, useState, } from 'react';\nimport _ from 'lodash';\n\nexport function getColor(percent, start, end, alpha) {\n    var a = percent / 100,\n        b = (end - start) * a,\n        c = b + start,\n        d = alpha ? alpha : 1;\n    return 'hsla(' + c + ', 60%, 48%, ' + d + ')';\n}\n\nexport function byKeys(obj, keys = []) {\n    const filtered = {}\n    keys.forEach(key => {\n        if (obj.hasOwnProperty(key)) {\n            filtered[key] = obj[key]\n        }\n    })\n    return filtered\n}\n\nexport function useData(arr, num, checkList) {\n    const [data, setData] = useState({\n        data: undefined\n    });\n    useEffect(() => {\n        let wAverage = 0;\n        const customizer = ((obj, src) => {\n            if (obj === 'N') {\n                return 0;\n            } else {\n                wAverage += src;\n            };\n        });\n        const keyArray = _.keys(arr[num].기준정보);\n        const weight = arr[num].가중치;\n        const used = _.cloneDeep(checkList);\n        const weightFix = _.mergeWith(used, weight, customizer);\n        const lists = _.cloneDeep(arr[num].호수추천);\n        _.each(lists, (obj) => {\n            let valueSum = 0;\n            _.map(obj, (v, k) => {\n                //console.log(k, v)\n                const findKey = keyArray.find(element => element === k);\n                if (findKey && used) {\n                    valueSum += (v * weightFix[k])\n                    //valueSum += (v * used[findKey])\n                }\n            })\n            obj.TOTAL = Number((valueSum / wAverage).toFixed(2));\n        });\n\n        const temp = _.sortBy(lists, 'TOTAL').reverse();\n        setData({\n            data: temp,\n        });\n    }, [arr, num, checkList]);\n    return data;\n}\n\nexport const debounce = (fn, ms) => {\n    let timer;\n    return _ => {\n        clearTimeout(timer);\n        timer = setTimeout(_ => {\n            timer = null;\n            fn.apply(this);\n        }, ms);\n    };\n}\n\nexport function useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n        flag: false,\n    });\n    useEffect(() => {\n        const handleResize = debounce(() => {\n            setWindowSize({width: window.innerWidth - 32, height: window.innerHeight});\n        }, 100);\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    return windowSize;\n}\n\nexport function useMove(type, count, grid) {\n    const [move, setMove] = useState({\n        x: 0,\n    });\n    const size = useWindowSize();\n    useEffect(() => {\n        let _x = 0;\n        let _c = type === 'list' ? size.width * 0.5 : 0;\n        if (type === 'list') {\n            _x = Math.round(_c - ((grid.width + grid.gap) * count) - (grid.width * 0.5))\n            //} else if (data.length > 15 && !base) {\n        } else {\n            _x = Math.round(_c - ((grid.width + grid.gap) * count))\n        };\n        setMove({\n            x: _x,\n        });\n    }, [type, count, grid, size]);\n    return move;\n}\n\nexport function useGridNum(total, type) {\n    const [gridNum, setGridNum] = useState({\n        col: undefined,\n        row: undefined,\n        end: undefined,\n        gap: undefined,\n        width: undefined,\n        height: undefined,\n    });\n    const size = useWindowSize();\n    useEffect(() => {\n        if (!total) {\n            return { col: 0, row: 0, end: 0, gap: 0, width: 0, height: 0 };\n        }\n        const targetWidth = size.width;\n        const count = Math.floor(size.width / 360);\n\n        let _row = 1;\n        let _col = total;\n        let _end = total - 1;\n        let _gap = 96;\n\n        let _width = type === 'list' ? 360 : Math.round((targetWidth - (16 * (count - 1))) / count);\n        let _height = 160;\n\n        let rowNum = Math.round(targetWidth / _width);\n        let colNum = Math.ceil(total / rowNum);\n        let colMin = Math.min(colNum, 3)\n\n        if (type === 'grid') {\n            if (colNum > 3) {\n                _row = colMin;\n                _col = Math.ceil(total / _row);\n            } else {\n                _row = colMin;\n                _col = rowNum;\n            };\n            _gap = 16;\n            _end = _col - Math.round(targetWidth / _width);\n        };\n        setGridNum({\n            col: _col,\n            row: _row,\n            end: _end,\n            gap: _gap,\n            width: _width,\n            height: _height,\n        });\n    }, [total, type, size]);\n    return gridNum;\n}\n\nexport function shuffle(dataSet) {\n    const array = dataSet.slice();\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n    return array;\n}\n","\nimport './guideBox.scss';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n    const active = props.active;\n    //const type = props.type;\n\n    const Box = () => {\n        const result = [];\n        for (let i = 0; i < 4; i++) {\n            result.push(<span key={i} className={classNames('boxLine')} />)\n        }\n        return result;\n    }\n    return (\n        <>\n        <div className={classNames('boxLineContainer', active && 'active')}>\n            {\n                <Box />\n            }\n        </div>\n        </>\n    );\n}\n\nexport default App;","\nimport './gueage.scss';\nimport classNames from 'classnames';\nimport React, { useEffect } from 'react';\nimport { animated, useSpring } from 'react-spring';\n\nconst App = (props) => {\n    const value = props.value;\n    const color = props.color;\n\n    const { number,} = useSpring({\n        from: {\n            number: 0,\n        },\n        to: {\n            number: value,\n        },\n        reset: true,\n        delay: 300,\n    });\n\n    const Gueage = () => {\n        const result = [];\n        for (let i = 0; i < 10; i++) {\n            result.push(<span key={i} className={classNames('boxGueage')} />)\n        }\n        return result;\n    }\n    useEffect(() => {\n        \n    }, [])\n    return (\n        <div className={classNames('boxGueageContainer')}>\n            <animated.div className={'boxGueageBase'} style={{ width: props.active ? number.to(n => n.toFixed(2) + '%') : value+'%', backgroundColor: color }}/>\n            <Gueage />\n        </div>\n    );\n}\n\nexport default App;","import './aircraft.scss';\nimport React, { useEffect, useContext } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport context from '../Context';\n\nconst App = (props) => {\n    const state = useContext(context);\n    const { engine } = state;\n    const prop = useSpring(\n        {\n            config: { duration: 420 },\n            x: props.active\n        }\n    )\n    useEffect(() => {\n    }, [])\n    return (\n        <div className=\"imageContainer\" >\n            {engine ? (\n                <animated.img className={'image'} alt={'KF21'}\n                    src={prop.x.to({ range: [0, 1], output: [60, 40] }).to(num => process.env.PUBLIC_URL + '/assets/aircraft/TH50/FA_00' + Math.round(num))}\n                    style={{\n                        transform: prop.x.to({ range: [0, 0.5, 1], output: [1, 1, 2.8] }).to(x => `scale(${x})`),\n                        marginTop: prop.x.to({ range: [0, 0.5, 1], output: [0, 0, -42] }).to(x => x)\n                    }}\n                />) : (\n                <animated.img className={'image'} alt={'KF21'}\n                    src={process.env.PUBLIC_URL + '/assets/aircraft/TH50/FA_0060'}\n                    style={{\n                        transform: prop.x.to({ range: [0, 0.5, 1], output: [1, 1, 1.4] }).to(x => `scale(${x})`),\n                    }}\n                />\n            )}\n\n\n        </div>\n    );\n}\n\nApp.defaultProps = {\n    test: 1,\n};\n\nexport default App;\n","import './slideItem.scss';\nimport React, { useContext, useEffect } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { Flipped } from 'react-flip-toolkit';\nimport { getColor } from '../Mixin'\nimport context from '../Context';\nimport GuideBox from './guideBox';\nimport GueageBox from './gueage';\n\nimport Aircraft from './aircraft';\n\nconst App = (props) => {\n    const state = useContext(context);\n    const { focused, setFocused, type, setBase, setCount, setTemp, temp } = state;\n    const index = props.index;\n    const item = props.item;\n    const active = focused === index && type !== 'grid';\n    const selectItem = props.selectItem;\n    const id = item.호기ID;\n    //\n    let percentColor = getColor(item.TOTAL, 0, 240);\n\n    const {number} = useSpring({\n        from: {\n            number: temp[4] || 0,\n        },\n        to: {\n            number: item.TOTAL,\n        },\n        reset: true, //temp[4] === item.TOTAL ? false : true,\n        delay: 200,\n    });\n\n    const onClick = () => {\n        setTemp([0, 0, 0, 0])\n        selectItem(item)\n        setFocused(index)\n        setBase(true)\n        type === 'list' && setCount(index);\n    }\n\n    useEffect(() => {\n        //console.log('item useEffect', props.images)\n    }, [])\n\n    return (\n        <Flipped flipId={id} translate>\n            <div key={item.호기ID} className={classNames('listItem', active && 'active')}>\n                <GuideBox active={active} />\n                <div className={'aircraftGroup'} >\n                    <div className={'aircraft'}>\n                        {/*<img src={getImage(item.기종)} alt={'KF-21'} />*/}\n                        <Aircraft active={active ? 1 : 0}/>\n                    </div>\n                </div>\n                {(focused === index && type === 'list') ? (\n                    <div className={classNames('item')} >\n                        \n                        <button className={'detailButton'} onClick={() => { onClick() }} />\n                    </div>\n                ) : (\n                    <div className={classNames('item')} >\n                        <div className={'itemTitle'}>{item.호기}호기</div>\n                        <GueageBox value={item.TOTAL} color={percentColor} />\n                        <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{type === 'grid' ? number.to(n => n.toFixed(2) + '%') : item.TOTAL + '%'}</animated.div>\n                        <div className={'itemIndex'}>{index < 9 ? '0' + (index + 1) : (index + 1)}</div>\n                        <button className={'detailButtonGrid'} onClick={() => { onClick() }} />\n                    </div>\n                )}\n            </div>\n        </Flipped>\n    );\n}\n\nApp.defaultProps = {\n    focused: 0,\n};\n\nexport default App;\n","\nimport React, { useRef, useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { getColor } from '../Mixin'\n\nconst App = (props) => {\n    const canvasRef = useRef(null);\n    const timeout = useRef(null);\n    //\n    const [canvas, setCanvas] = useState(null)\n    const [context, setContext] = useState(null)\n    const item = props.item;\n    const aver = props.aver || [0, 0, 0, 0];\n    const total = props.total;\n    const def = Object.keys(aver).map(key => ({ key, value: aver[key] }));\n    const now = Object.keys(item).map(key => ({ key, value: item[key] }));\n    //\n    const fillColor = getColor(total, 0, 240, 0.48);\n    const strokeColor = getColor(total, 0, 240, 1);\n\n    const fixSize = 0.5;\n    const width = 480;\n    const height = 360;\n    const wCenter = width * 0.5;\n    const hCenter = height * 0.5;\n    const size = 20;\n    const FPS = 60;\n    const duration = 20;\n\n    useEffect(() => {\n        setCanvas(canvasRef.current);\n        canvas && setContext(canvas.getContext('2d'));\n        const curArr = [props.cur];\n        const startArr = [props.cur];\n        const endArr = [Object.keys(item).map(key => (item[key]))];\n        const items = [def, now];\n        //\n        let complete = true;\n        let delta;\n        //\n        const base = () => {\n            context.strokeStyle = \"#ccc\";  // 선 색깔\n            context.lineJoin = 'round';\t// 선 끄트머리(?)\n            context.lineWidth = 1;\t\t// 선 굵기\n            context.shadowBlur = 0;\n            //세로\n            context.beginPath();\n            context.moveTo(wCenter + fixSize, size);\n            context.lineTo(wCenter + fixSize, height - size);\n            //가로\n            context.moveTo(80, hCenter + fixSize);\n            context.lineTo(width - 80, hCenter + fixSize);\n            context.closePath();\n            //\n            context.stroke();\n            //\n            let ss = ((height / 2) - size) / 5;\n            let polygonPoints = [\n                wCenter, hCenter - ss * 5, // 0\n                wCenter + ss * 5, hCenter, // 1\n                wCenter, hCenter + ss * 5, // 2\n                wCenter - ss * 5, hCenter, // 3\n            ];\n            context.fillPolygon(polygonPoints, 'rgba(0,0,0,0.0)', '#a4a4a4');\n\n            context.stroke();\n\n            // context.beginPath();\n\n            for (let i = 0; i < 5; i++) {\n\n                const inSize = ss * i;\n                let polygonPoints = [\n                    wCenter, hCenter - inSize,\n                    wCenter + inSize, hCenter,\n                    wCenter, hCenter + inSize,\n                    wCenter - inSize, hCenter,\n                ];\n                context.fillPolygon(polygonPoints, 'rgba(0,0,0,0)', '#dedede');\n            }\n            context.font = '500 14px Noto Sans KR';\n            context.textAlign = 'center';\n            context.textBaseline = 'bottom';\n            context.fillStyle = '#898989';\n            context.shadowBlur = 0;\n            context.fillText(now[0].key, wCenter, hCenter - 165);\n\n            context.textAlign = 'left';\n            context.textBaseline = 'middle';\n            context.fillText(now[1].key, wCenter + 165, hCenter);\n\n            context.textAlign = 'center';\n            context.textBaseline = 'top';\n            context.fillText(now[2].key, wCenter, hCenter + 165);\n\n            context.textAlign = 'right';\n            context.textBaseline = 'middle';\n            context.fillText(now[3].key, wCenter - 165, hCenter);\n        }\n        const draw = (arr) => {\n            context.clearRect(0, 0, 480, 360);\n            const ss = ((height / 2) - size) / 100;\n            const setArray = [\n                { stroke: 'rgba(0,0,0,0.24)', fill: 'rgba(0,0,0,0.16)', width: 1, shadow: 0 },\n                { stroke: strokeColor, fill: fillColor, width: 1.6, shadow: 0 },\n            ]\n            base();\n\n            _.map(items, (item, i) => {\n                let polygonPoints = [];\n                if (i === 0) {\n                    polygonPoints = [\n                        wCenter, hCenter - ss * item[0].value,\n                        wCenter + ss * item[1].value, hCenter,\n                        wCenter, hCenter + ss * item[2].value,\n                        wCenter - ss * item[3].value, hCenter,\n                    ];\n                } else {\n                    polygonPoints = [\n                        wCenter, hCenter - ss * arr[0],\n                        wCenter + ss * arr[1], hCenter,\n                        wCenter, hCenter + ss * arr[2],\n                        wCenter - ss * arr[3], hCenter,\n                    ];\n                }\n                context.fillPolygon(polygonPoints,\n                    setArray[i].fill,\n                    setArray[i].stroke,\n                    setArray[i].width,\n                    setArray[i].shadow,\n                );\n                if (i > 0 && props.numView) {\n                    context.textAlign = 'center';\n                    context.textBaseline = 'bottom';\n                    context.fillStyle = '#000';\n                    context.fillText(arr[0].toFixed(0), wCenter, hCenter + 8 - ss * arr[0]);\n                    context.textBaseline = 'middle';\n                    context.textAlign = 'left';\n                    context.fillText(arr[1].toFixed(0), wCenter - 8 + ss * arr[1], hCenter);\n                    context.textBaseline = 'top';\n                    context.textAlign = 'center';\n                    context.fillText(arr[2].toFixed(0), wCenter, hCenter - 8 + ss * arr[2]);\n                    context.textBaseline = 'middle';\n                    context.textAlign = 'right';\n                    context.fillText(arr[3].toFixed(0), wCenter + 8 - ss * arr[3], hCenter);\n                }\n            })\n        }\n        const loop = () => {\n            for (let i = 0; i < endArr.length; i += 1) {\n                for (let t = 0; t < endArr[i].length; t += 1) {\n                    delta = (endArr[i][t] - startArr[i][t]) / duration;\n                    curArr[i][t] += delta;\n                    if (delta) {\n                        complete = false;\n                    };\n                };\n            };\n            //\n            let temp0 = endArr.length - 1;\n            let temp1 = endArr[temp0].length - 1;\n\n            if (Math.round(endArr[temp0][temp1] * 10) / 10 === Math.round(startArr[temp0][temp1] * 10) / 10) {\n                complete = true;\n            };\n            if (complete) {\n                draw(endArr[0]);\n                clearTimeout(timeout.current);\n                //cancelAnimationFrame(loop);\n            } else {\n                draw(curArr[0])\n                timeout.current = setTimeout(() => { loop() }, FPS / duration);\n                //requestAnimationFrame(loop);\n\n            };\n        };\n        if (context) {\n            clearTimeout(timeout.current);\n            loop();\n            //requestAnimationFrame(loop);\n        }\n    }, [canvas, context, item, fillColor, hCenter, now, strokeColor, wCenter, def, props.cur, props.numView])\n\n    return (\n        <canvas ref={canvasRef} className=\"canvas\" width={480} height={360} />\n    );\n}\n\nexport default App;\n\nCanvasRenderingContext2D.prototype.fillPolygon = function (points, fillColor, strokeColor, lineWidth, shadow) {\n    if (points.length <= 0) return;\n    this.closePath();\n    this.strokeStyle = strokeColor;  // 선 색깔\n    this.lineJoin = 'round';\t// 선 끄트머리(?)\n    this.lineWidth = lineWidth || .5;\t\t// 선 굵기\n    this.fillStyle = fillColor;\n\n    this.beginPath();\n    this.moveTo(points[0], points[1]);\n    for (let i = 2; i < points.length - 1; i += 2) {\n        this.lineTo(points[i], points[i + 1]);\n    }\n    this.shadowColor = fillColor;\n    this.shadowBlur = shadow || 0;\n    this.closePath();\n    this.stroke();\n\n    this.fill();\n}","import './detailItem.scss';\nimport React, { useContext, useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css';\nimport { getColor, byKeys } from '../Mixin';\nimport context from '../Context';\nimport { animated, useSpring } from 'react-spring';\n\nimport Chart from './chart';\n\nconst App = (props) => {\n    const state = useContext(context);\n    const { type, setBase, temp, base } = state;\n    const item = props.item;\n    const selectItem = props.select;\n    const checkList = props.checkList;\n    const ess = props.ess;\n    const aver = props.aver;\n\n    const items = byKeys(item, _.keys(checkList));\n    const averItem = byKeys(aver, _.keys(checkList));\n    //\n    const percentColor = item && getColor(item.TOTAL, 0, 240);\n\n    const { number, color } = useSpring({\n        from: { \n            number: temp[4] || 0 \n        },\n        to: {\n            number: item.TOTAL,\n            color: percentColor\n        },\n        reset: true,\n    });\n\n    //const iarr = byKeys(item, _.keys(ess))\n    //const arrItem = Object.keys(iarr).map(key => (iarr[key]));\n\n    const [itemIcon] = useState([\n        { name: '주기검사', icon: 'ri-tools-fill' },\n        { name: '야간비행여부', icon: 'ri-contrast-2-fill' },\n        { name: '외장변경', icon: 'ri-timer-line' },\n        { name: '실무장여부', icon: 'ri-flight-takeoff-fill' },\n        { name: '항공기등급', icon: 'ri-todo-line' },\n        { name: '가동상태', icon: 'ri-user-heart-line' },\n        { name: '최근비행', icon: 'ri-calendar-line' },\n        { name: '주요결함', icon: 'ri-pulse-line' },\n    ])\n\n    const SideItem = item => {\n        const result = [];\n        _.map(items, (val, key) => {\n            //const color = getColor(val, 0, 240)\n            result.push(\n                <li key={key} className={classNames('sideItem', checkList[key] === 'N' && 'disabled')}>\n                    <span className={'sideItemBase'} />\n                    <span className={'sideItemIcon'}><i className={_.find(itemIcon, ['name', key]).icon} /></span>\n                    <span className={'sideItemTitle'}>{key}</span>\n                    <span className={'sideItemValue'}>\n                        {\n                            checkList[key] === 'N' ?\n                                <i className=\"ri-eye-off-line\" /> :\n                                <span className={'sideItemUd'}>{val}<i className={val > averItem[key] ? \"ri-arrow-up-s-fill\" : \"ri-arrow-down-s-fill\"}></i></span>\n                        }\n                    </span>\n                </li>\n            )\n        })\n        return result;\n    }\n\n    const onClick = () => {\n        selectItem(null);\n        setBase(false);\n    }\n\n    useEffect(() => {\n    }, [])\n\n    return (\n        <div className={'detailContainer'} style={{ width: 360, height: 360 }}>\n            <ul className={'detailContents'}>\n                <SideItem {...item} type={type} key={'sideItem'} />\n            </ul>\n            <div className={classNames('listItem', 'listItemExpend')} >\n                <div className={'graph'}>\n                    {base && <Chart item={byKeys(item, _.keys(ess))} aver={byKeys(aver, _.keys(ess))} total={item.TOTAL} cur={temp} numView={true}/>}\n                </div>\n                <div className={'itemRank'}></div>\n                <div className={'itemTitle'}>{item && item.호기}호기 <span className={'itemTitleGray'}>BORAMAE</span></div>\n                <span className={'itemPoint'}>RAITING POINT</span>\n                <animated.div className={classNames('itemPercent')} style={{ color: color }}>\n                    {number.to(n => n.toFixed(2) + '%')}\n                </animated.div>\n                <button className={'detailButton'} onClick={() => { onClick() }} />\n            </div>\n        </div>\n    );\n}\n\nApp.defaultProps = {\n    focused: 0,\n};\n\nexport default App;\n","import './focuseItem.scss';\nimport React, { useContext, useEffect } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { getColor } from '../Mixin'\nimport context from '../Context';\nimport GueageBox from './gueage';\n\nconst App = (props) => {\n    \n    const state = useContext(context);\n    const { temp } = state;\n    const item = props.item;\n    //\n    let percentColor = getColor(item.TOTAL, 0, 240);\n\n    const { number } = useSpring({\n        from: {\n            number: temp[4] || 0,\n        },\n        to: {\n            number: item.TOTAL,\n        },\n        reset: true,\n        delay: 200,\n    });\n\n    useEffect(() => {\n        //console.log('item useEffect')\n    }, [])\n\n    return (\n        <div className={classNames('focuseItem')} >\n            <div className={'itemPercentGroup'} >\n                <GueageBox value={item.TOTAL} color={percentColor} />\n                <span className={'itemRating'}>RATING POINT</span>\n                <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{number.to(n => n.toFixed(2) + '%')}</animated.div>\n            </div>\n            <div className={'itemTitleGroup'} >\n                <div className={'itemTitle'}>{item.호기}호기</div>\n                <span className={'itemSubText'}>Boramae</span>\n            </div>\n        </div>\n    );\n}\n\nApp.defaultProps = {\n    focused: 0,\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport 'remixicon/fonts/remixicon.css'\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport { byKeys } from '../Mixin'\n\nimport context from '../Context';\nimport SlideItem from './slideItem';\nimport DetailItem from './detailItem';\nimport FocuseItem from './focusItem';\n\nimport { useGridNum, useMove, useData } from '../Mixin';\nimport _ from 'lodash';\n\nconst App = (props) => {\n  //console.log('slide')\n  const DS = props.data;\n  const state = useContext(context);\n  const { topNum, type, setType, focused, setFocused, count, setCount, base, setBase, setTemp, temp } = state;\n  const [filterView, setFilterView] = useState(null);\n  const [selectItem, setSelectItem] = useState(null);\n  const [checkList, setCheckList] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [images, setImages] = useState(null);\n\n  const sliderRef = useRef(null);\n  const result = useData(DS, topNum, checkList);\n  const grid = useGridNum(result.data && result.data.length, type);\n  const move = useMove(type, count, grid);\n  const ess = DS[topNum].필수항목;\n  const aver = DS[topNum].평균;\n  const comment = DS[topNum].배정조건;\n\n\n  //\n  //const timeout = useRef(null);\n  /*const autoSlide = () => {\n    if (focused < grid.col - 1) {\n      moveSlide('next');\n    } else {\n      setFocused(0);\n      setCount(0);\n    }\n    timeout.current = setTimeout(() => { autoSlide() }, 2000);\n  }*/\n\n  const preLoad = () => {\n    const arr = [];\n    for (let i = 40; i <= 60; i++) {\n      const preImage = new Image();\n      preImage.src = process.env.PUBLIC_URL + '/assets/aircraft/TH50/FA_00' + i;\n      arr.push(preImage);\n    }\n    setImages(arr);\n  };\n\n  const moveSlide = (postion) => {\n    if (base) {\n      const iarr = byKeys(result.data[focused], _.keys(ess))\n      let arrItem = Object.keys(iarr).map(key => (iarr[key]));\n      arrItem[4] = result.data[focused].TOTAL;\n      setTemp(arrItem);\n    } else {\n      let tarr = [];\n      for (let i = 0; i < 5; i++) {\n        if (i !== 4) {\n          tarr[i] = temp[i];\n        } else {\n          tarr[i] = result.data[focused].TOTAL\n        };\n      };\n      setTemp(tarr);\n    }\n\n    if (postion === 'prev') {\n      type === 'list' && focused > 0 && setFocused(focused - 1);\n      count > 0 && setCount(count - 1);\n    } else if (postion === 'next') {\n      type === 'list' && focused < grid.end && setFocused(focused + 1);\n      count < grid.end && setCount(count + 1);\n    };\n    //console.log(selectItem)\n  };\n\n  const onCheck = e => {\n    let name = e.target.value;\n    setCheckList(\n      { ...checkList, [name]: e.target.checked ? 'Y' : 'N' }\n    );\n  };\n\n  const onWindow = () => {\n    window['returnFn'](result.data[focused]);\n  }\n\n  const fView = () => {\n    if (filterView === null) {\n      setFilterView('active');\n      setType('grid');\n    } else {\n      setFilterView(null);\n      setType('list');\n    }\n    setSelectItem(null);\n    setBase(false)\n    setFocused(0);\n    setCount(0);\n  }\n\n  const CheckBox = () => {\n    const result = [];\n    _.map(checkList, (v, k) => {\n      const label = 'check' + k;\n      result.push(\n        <div className={'checkbox'} key={'check' + k}>\n          <div className='checkboxInput'><input id={label} className={'check'} value={k} type={'checkbox'} checked={v === 'Y' && true} disabled={ess[k]} onChange={(e) => onCheck(e)} /></div>\n          <div className={'checkboxText'} ><label htmlFor={label} className={'label'}>{k}</label>\n            <span className={'comment'}>{comment[k]}</span></div>\n        </div>\n      )\n    })\n    return result;\n  }\n\n  useEffect(() => {\n    setCheckList(DS[topNum].기준정보);\n    preLoad();\n  }, [DS, topNum]);\n\n  return (\n    <Flipper className={'slider'} flipKey={[result.data]}\n    //spring={{ stiffness: 560, damping: 56 }}\n    >\n      {\n        result.data ? (\n          selectItem === null ? (\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate>\n              <div className={classNames('slide')} ref={sliderRef}>\n                <div className={classNames('list', type === 'grid' && 'active')}\n                  style={{\n                    transform: 'translateX(' + move.x + 'px)',\n                    gridTemplateColumns: 'repeat(' + grid.col + ', ' + grid.width + 'px)',\n                    gridTemplateRows: 'repeat(' + grid.row + ', ' + grid.height + 'px)',\n                    gap: grid.gap,\n                  }}\n                >\n                  {\n                    result.data.map((item, i) => {\n                      return (\n                        <SlideItem item={item} index={i} focused={focused} key={'slideItem' + i} selectItem={setSelectItem} />\n                      )\n                    })\n                  }\n                </div>\n                <FocuseItem item={result.data[focused]} />\n                {type !== 'grid' && <button className={classNames('callButton', base && 'active')} onClick={onWindow}>\n                  <i className=\"ri-check-fill\"></i>\n                  <span className='callButtonText'>호기선택</span>\n                </button>}\n              </div>\n\n            </Flipped>\n          ) : (\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate>\n              <div className={'detail'}>\n                <DetailItem item={result.data[focused]} ess={ess} aver={aver} checkList={checkList} active={false} select={setSelectItem} key={'sideItem'} />\n              </div>\n            </Flipped>\n          )\n\n        ) : (\n          <div>NO DATA</div>\n        )\n      }\n      {result.data &&\n        <div className={classNames('controller', type === 'grid' && 'active')}>\n\n          <button className={'controllerButton prevButton'} onClick={() => count !== 0 && moveSlide('prev')}><i className=\"ri-arrow-left-s-line\"></i><span className=\"controllText\">PREV</span></button>\n          <button className={'controllerButton filterButton'} onClick={() => fView()}><i className={type === 'list' ? \"ri-arrow-up-s-line\" : \"ri-close-fill\"}></i><span className=\"controllText\">배정조건</span></button>\n          <button className={'controllerButton nextButton'} onClick={() => count < grid.end && moveSlide('next')}><span className=\"controllText\">NEXT</span><i className=\"ri-arrow-right-s-line\"></i></button>\n          <div className={classNames('filter', filterView)}>\n            <div className={'filterClose'} onClick={() => fView()} />\n            <CheckBox />\n            <ul className={'filterInfo'}>\n              <li className={'infobox boxdisable'}>필수</li>\n              <li className={'infobox boxchecked'}>선택</li>\n              <li className={'infobox boxnormal'}>선택가능</li>\n            </ul>\n          </div>\n        </div>\n      }\n    </Flipper>\n  );\n}\n\nApp.defaultProps = {\n  focused: 0,\n};\n\nexport default App;\n","import './index.scss';\nimport React, { useContext, useEffect } from 'react';\nimport classNames from 'classnames';\nimport context from '../Context';\n\nconst App = (props) => {\n  const state = useContext(context);\n  const { type, base } = state;\n  const loading = props.loading;\n  const slideSize = 360;\n\n  const Line = () => {\n    const result = [];\n    for (let i = 0; i < 9; i++) {\n      result.push(<span key={i} className={classNames('sliceLine')} />)\n    }\n    return result;\n  }\n  useEffect(() => {\n  }, [])\n\n  return (\n    <div className={classNames('base', type !== 'grid' ? null : 'active', loading && 'loading')}>\n      <div className={'baseContents'} style={{ width: slideSize, height: slideSize }}>\n        <div className={classNames('baseBox')} />\n        <div className={classNames('inBox')} />\n        {!loading &&\n          <div className={'detailButton'}>\n            <div className={classNames('detailButtonContainer', base && 'active')}>\n              <span className={'detailText'}>상세정보<i className={\"ri-search-line\"}></i></span>\n              <span className={'detailText'}>닫기<i className={\"ri-close-line\"}></i></span>\n            </div>\n          </div>\n        }\n      </div>\n      <div className={'slice'}>\n        <Line />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useRef, useEffect, } from 'react';\nimport './index.scss';\nimport Chart from '../Slide/chart';\nimport { shuffle } from '../Mixin';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n    //console.log('loading')\n    let cc = 0;\n    const duration = 1000;\n    const maxCount = props.meassage.length || 0;\n    const callBack = props.callBack;\n    const [end, setEnd] = useState([0, 0, 0, 0]);\n    const [start] = useState([0, 0, 0, 0]);\n    const [percent, setPercent] = useState(0);\n    const [ment] = useState(shuffle(props.meassage));\n    const [fix, setFix] = useState(props.startMsg);\n    const timeout = useRef(null);\n    const [flag, setFlag] = useState(false);\n    //\n\n    useEffect(() => {\n        const loop = () => {\n            if (props.title) {\n                clearTimeout(timeout.current);\n                let item = null;\n                if (cc > maxCount - 1) {\n                    item = randomArray(100, 100);\n                    setFix(props.endMsg);\n                } else {\n                    item = randomArray(50, 100);\n                    setFix(ment[cc])\n                }\n\n                if (cc < maxCount) {\n                    cc++;\n                    timeout.current = setTimeout(() => { loop() }, duration);\n                } else {\n                    setFlag(true);\n                    timeout.current = setTimeout(() => {\n                        callBack(false);\n                        clearTimeout(timeout.current);\n                    }, 1200);\n                }\n                setEnd(item.array);\n                setPercent(item.total);\n            }\n        }\n        const randomArray = (n, m) => {\n            let arr = {};\n            let total = 0;\n            for (var i = 0; i < props.title.length; i++) {\n                const value = Math.floor((Math.random() * (m - n) + n));\n                arr[props.title[i]] = value;\n                total += value;\n            };\n            return { array: arr, total: total / props.title.length };\n        };\n        loop();\n        return () => setEnd(null);\n    }, [cc, maxCount, ment, props.endMsg, props.title, callBack])\n\n    return (\n        <div className='load'>\n            <div className={classNames('graph', flag && 'active')}>\n                <Chart item={end} total={percent} cur={start} />\n                <div className={'loadingComment'} onClick={() => { callBack(false) }}>\n                    <span className='loadingText'>{fix}</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import './index.scss';\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst App = (props) => {\n  useEffect(() => {\n  }, [])\n\n  return (\n    <div className={classNames('mobile')}>\n      <div className='mobileBox' />\n      <img className='mobileLogo' src={process.env.PUBLIC_URL + '/assets/other/logo.png'} alt={'logo'} />\n      <span className='mobileMent'>아쉽게도 현재 모바일은 지원 하지 않습니다</span>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport './App.scss';\nimport { isMobile } from 'react-device-detect';\nimport Head from './component/Head/';\nimport Foot from './component/Foot/';\nimport Slide from './component/Slide';\nimport Base from './component/Base';\nimport Loading from './component/Loading';\n\nimport Mobile from './component/Mobile';\n\nconst App = (props) => {\n  const { uid } = props.match.params;\n  const [prop] = useState(window['getProps']());\n  const [top, setTop] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    const onLoad = async () => {\n      const URL = uid ? prop.url+'/'+uid : prop.url;\n      fetch(URL, {\n        headers: {\n          'Accept': 'application / json'\n        }\n      })\n        .then(response => response.json())\n        .then(response => setData(response))\n    }\n    const ini = () => {\n      let resultTop = [];\n      _.forEach(data, function (n) {\n        resultTop.push(n.부대)\n      });\n      setTop(resultTop);\n    }\n    !data ? onLoad() : ini();\n  }, [data, prop.url, uid]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\" />\n      <main className=\"main\">\n        <div className={classNames('contents', loading && 'loading')}>\n          {isMobile ? (\n            <Mobile />\n          ) : (\n            <>\n              <Base loading={loading} />\n              <Head data={top} />\n              {\n                loading ? <Loading callBack={setLoading} {...prop} /> : data ? <Slide data={data} /> : <div>데이터가 없습니다.</div>\n              }\n              <Foot stepNum={loading ? 0 : 1} />\n            </>\n\n          )}\n        </div>\n      </main>\n      <footer className=\"footer\">\n        {isMobile ? '© ROK KF-21 lis, ALL RIGHTS RESERVED' : '© ROK Government KF-21 lis program data, ALL RIGHTS RESERVED'}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n//\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport { UserProvider } from './component/Context';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <BrowserRouter>\n        <Route path='/:uid?' render={(props) => <App {...props} />} />\n      </BrowserRouter>\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}