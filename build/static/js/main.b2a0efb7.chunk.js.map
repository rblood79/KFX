{"version":3,"sources":["component/Context/index.js","component/Head/index.js","component/Foot/index.js","component/Mixin/index.js","component/Slide/guideBox.js","component/Slide/gueage.js","component/Slide/aircraft.js","component/Slide/slideItem.js","component/Slide/chart.js","component/Slide/detailItem.js","component/Slide/focusItem.js","component/Slide/index.js","component/Base/index.js","component/Loading/index.js","component/Mobile/index.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","state","url","theme","engine","topNum","type","focused","base","count","width","height","filter","temp","setTheme","a","setState","setEngine","prevState","setTopNum","setType","setFocused","setBase","setCount","setWidth","setHeight","setFilter","setTemp","children","this","props","Provider","value","Component","App","useContext","context","data","useEffect","className","classNames","onClick","src","process","alt","length","MARK","기지","map","item","index","id","대대","defaultProps","useState","title","comment","stepData","step","num","stepNum","idx","getColor","percent","start","end","alpha","byKeys","obj","keys","filtered","forEach","key","hasOwnProperty","useWindowSize","undefined","flag","windowSize","setWindowSize","handleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","debounce","window","innerWidth","innerHeight","addEventListener","removeEventListener","active","Box","result","i","push","color","number","useSpring","from","to","reset","delay","Gueage","div","style","n","toFixed","backgroundColor","images","prop","config","duration","x","img","range","output","Math","round","transform","marginTop","test","selectItem","호기ID","percentColor","TOTAL","flipId","translate","호기","canvasRef","useRef","timeout","canvas","setCanvas","setContext","aver","total","def","Object","now","fillColor","strokeColor","wCenter","hCenter","current","getContext","delta","curArr","cur","startArr","endArr","items","complete","draw","arr","clearRect","ss","setArray","stroke","fill","shadow","strokeStyle","lineJoin","lineWidth","shadowBlur","beginPath","moveTo","lineTo","closePath","polygonPoints","fillPolygon","inSize","font","textAlign","textBaseline","fillStyle","fillText","loop","t","temp0","temp1","FPS","ref","CanvasRenderingContext2D","prototype","points","shadowColor","select","checkList","ess","averItem","name","icon","itemIcon","SideItem","val","find","DS","filterView","setFilterView","setSelectItem","setCheckList","setImages","sliderRef","setData","wAverage","keyArray","기준정보","weight","가중치","used","cloneDeep","weightFix","mergeWith","lists","호수추천","each","valueSum","v","k","element","Number","sortBy","reverse","useData","grid","col","row","gap","gridNum","setGridNum","size","targetWidth","floor","_row","_col","_end","_gap","_width","rowNum","colNum","ceil","colMin","min","useGridNum","move","setMove","_x","_c","useMove","필수항목","평균","배정조건","moveSlide","postion","iarr","arrItem","tarr","fView","CheckBox","label","checked","disabled","onChange","e","target","onCheck","htmlFor","preImage","Image","preLoad","flipKey","gridTemplateColumns","gridTemplateRows","loading","Line","cc","maxCount","meassage","callBack","setEnd","setPercent","dataSet","temporaryValue","randomIndex","array","slice","currentIndex","random","shuffle","ment","startMsg","fix","setFix","setFlag","randomArray","m","endMsg","navigator","userAgent","isMobile","top","setTop","setLoading","onLoad","fetch","headers","then","response","json","resultTop","부대","ini","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a0efb7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nclass UserProvider extends Component {\r\n    // Context state\r\n    state = {\r\n        url: 'http://localhost:8080',\r\n        theme: 'light',\r\n        engine: false,\r\n        topNum: 0,\r\n        type: 'list',\r\n        focused: 0,\r\n        base: false,\r\n        count: 0,\r\n        width: 0,\r\n        height: 0,\r\n        filter: null,\r\n        temp: [0,0,0,0,0],\r\n    };\r\n    // Method to update state\r\n    setTheme = async theme => {\r\n        this.setState(\r\n            {\r\n                theme: theme ? 'dark' : 'light',\r\n            }\r\n        );\r\n    };\r\n    setEngine = engine => {\r\n        this.setState(prevState => ({ engine }));\r\n    };\r\n    setTopNum = topNum => {\r\n        this.setState(prevState => ({ topNum }));\r\n    };\r\n    setType = type => {\r\n        this.setState(prevState => ({ type }));\r\n    };\r\n    setFocused = focused => {\r\n        this.setState(prevState => ({ focused }));\r\n    };\r\n    setBase = base => {\r\n        this.setState(prevState => ({ base }));\r\n    };\r\n    setCount = count => {\r\n        this.setState(prevState => ({ count }));\r\n    };\r\n    setWidth = width => {\r\n        this.setState(prevState => ({ width }));\r\n    };\r\n    setHeight = height => {\r\n        this.setState(prevState => ({ height }));\r\n    };\r\n    setFilter = filter => {\r\n        this.setState(prevState => ({ filter }));\r\n    };\r\n    setTemp = temp => {\r\n        this.setState(prevState => ({ temp }));\r\n    };\r\n    //\r\n    render() {\r\n        const { children } = this.props;\r\n        const { url, theme, engine, topNum, type, focused, count, base, width, height, filter, temp } = this.state;\r\n        const { setTheme, setEngine, setTopNum, setType, setFocused, setCount, setBase, setWidth, setHeight, setFilter, setTemp } = this;\r\n\r\n        return (\r\n            <UserContext.Provider\r\n                value={{\r\n                    theme,\r\n                    url,\r\n                    engine,\r\n                    topNum,\r\n                    type,\r\n                    focused,\r\n                    count,\r\n                    base,\r\n                    width,\r\n                    height,\r\n                    filter,\r\n                    temp,\r\n                    setTheme,\r\n                    setEngine,\r\n                    setTopNum,\r\n                    setType,\r\n                    setFocused,\r\n                    setCount,\r\n                    setBase,\r\n                    setWidth,\r\n                    setHeight,\r\n                    setFilter,\r\n                    setTemp,\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserContext;\r\n\r\nexport { UserProvider };\r\n","import './index.scss';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport context from '../Context';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css';\r\n\r\nconst App = (props) => {\r\n  const state = useContext(context);\r\n  const { topNum, setTopNum, setFocused, setCount, base, engine, setEngine } = state;\r\n  const data = props.data;\r\n  const onClick = (id) => {\r\n    setFocused(0);\r\n    setCount(0);\r\n    setTopNum(id);\r\n  }\r\n  useEffect(() => {\r\n  },[])\r\n  return (\r\n    <div className=\"head\">\r\n      <div className={classNames('topLogo', engine && 'active')} onClick={() => setEngine(engine ? false : true)}>\r\n        <div className={'logo'}>\r\n          <img src={process.env.PUBLIC_URL + '/assets/other/logo.png'} alt={'logo'} />\r\n        </div>\r\n      </div>\r\n      <div className={classNames('topNav', base && 'active')}>\r\n        {\r\n          data && data.length > 0 && (\r\n            <>\r\n              <img className={'flag'} src={data[topNum].MARK} alt={data[topNum].기지} />\r\n              <span className={'viewText'}>{data[topNum].기지}</span>\r\n            </>\r\n          )\r\n        }\r\n        {data && (\r\n          data.map((item, index) => {\r\n            return (\r\n              <button key={index} className={classNames('topButton', index === topNum ? 'active' : null)} onClick={() => !base && onClick(index)}>\r\n                {item.대대}\r\n              </button>\r\n            )\r\n          }))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.defaultProps = {\r\n  topNum: null,\r\n  type: 'list',\r\n};\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport context from '../Context';\r\nimport classNames from 'classnames';\r\n\r\nconst App = (props) => {\r\n  const state = useContext(context);\r\n  const { base, type } = state;\r\n  const [stepData] = useState([\r\n    { title: 'STEP 1', comment: 'Search' },\r\n    { title: 'STEP 2', comment: 'Aircraft' },\r\n    { title: 'STEP 3', comment: 'Condition' },\r\n    { title: 'STEP 4', comment: 'Finish' }\r\n  ]);\r\n\r\n  const step = () => {\r\n    let num = props.stepNum;\r\n    if (type === 'grid') {\r\n      num = 2;\r\n    };\r\n    return num;\r\n  };\r\n  \r\n  useEffect(() => {\r\n  }, [])\r\n  return (\r\n    <div className={'step'}>\r\n      <ul className={classNames('stepGroup', base && 'active')}>\r\n        {\r\n          stepData.map((item, idx) => {\r\n            return (\r\n              <li key={idx} className={classNames('stepItem', idx === step() ? 'active' : null)}>\r\n                <span className={'stepItemTitle'}>{item.title}</span>\r\n                <span className={'stepItemComment'}>{item.comment}</span>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.defaultProps = {\r\n  stepNum: 1,\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState, } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function getColor(percent, start, end, alpha) {\r\n    var a = percent / 100,\r\n        b = (end - start) * a,\r\n        c = b + start,\r\n        d = alpha ? alpha : 1;\r\n    return 'hsla(' + c + ', 60%, 48%, ' + d + ')';\r\n}\r\n\r\nexport function byKeys(obj, keys = []) {\r\n    const filtered = {}\r\n    keys.forEach(key => {\r\n        if (obj.hasOwnProperty(key)) {\r\n            filtered[key] = obj[key]\r\n        }\r\n    })\r\n    return filtered\r\n}\r\n\r\nexport function useData(arr, num, checkList) {\r\n    const [data, setData] = useState({\r\n        data: undefined\r\n    });\r\n    useEffect(() => {\r\n        let wAverage = 0;\r\n        const customizer = ((obj, src) => {\r\n            if (obj === 'N') {\r\n                return 0;\r\n            } else {\r\n                wAverage += src;\r\n            };\r\n        });\r\n        const keyArray = _.keys(arr[num].기준정보);\r\n        const weight = arr[num].가중치;\r\n        const used = _.cloneDeep(checkList);\r\n        const weightFix = _.mergeWith(used, weight, customizer);\r\n        const lists = _.cloneDeep(arr[num].호수추천);\r\n        _.each(lists, (obj) => {\r\n            let valueSum = 0;\r\n            _.map(obj, (v, k) => {\r\n                //console.log(k, v)\r\n                const findKey = keyArray.find(element => element === k);\r\n                if (findKey && used) {\r\n                    valueSum += (v * weightFix[k])\r\n                    //valueSum += (v * used[findKey])\r\n                }\r\n            })\r\n            obj.TOTAL = Number((valueSum / wAverage).toFixed(2));\r\n        });\r\n\r\n        const temp = _.sortBy(lists, 'TOTAL').reverse();\r\n        setData({\r\n            data: temp,\r\n        });\r\n    }, [arr, num, checkList]);\r\n    return data;\r\n}\r\n\r\nexport const debounce = (fn, ms) => {\r\n    let timer;\r\n    return _ => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(_ => {\r\n            timer = null;\r\n            fn.apply(this);\r\n        }, ms);\r\n    };\r\n}\r\n\r\nexport function useWindowSize() {\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n        flag: false,\r\n    });\r\n    useEffect(() => {\r\n        const handleResize = debounce(() => {\r\n            setWindowSize({width: window.innerWidth - 32, height: window.innerHeight});\r\n        }, 100);\r\n        window.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n    return windowSize;\r\n}\r\n\r\nexport function useMove(type, count, grid) {\r\n    const [move, setMove] = useState({\r\n        x: 0,\r\n    });\r\n    const size = useWindowSize();\r\n    useEffect(() => {\r\n        let _x = 0;\r\n        let _c = type === 'list' ? size.width * 0.5 : 0;\r\n        if (type === 'list') {\r\n            _x = Math.round(_c - ((grid.width + grid.gap) * count) - (grid.width * 0.5))\r\n            //} else if (data.length > 15 && !base) {\r\n        } else {\r\n            _x = Math.round(_c - ((grid.width + grid.gap) * count))\r\n        };\r\n        setMove({\r\n            x: _x,\r\n        });\r\n    }, [type, count, grid, size]);\r\n    return move;\r\n}\r\n\r\nexport function useGridNum(total, type) {\r\n    const [gridNum, setGridNum] = useState({\r\n        col: undefined,\r\n        row: undefined,\r\n        end: undefined,\r\n        gap: undefined,\r\n        width: undefined,\r\n        height: undefined,\r\n    });\r\n    const size = useWindowSize();\r\n    useEffect(() => {\r\n        if (!total) {\r\n            return { col: 0, row: 0, end: 0, gap: 0, width: 0, height: 0 };\r\n        }\r\n        const targetWidth = size.width;\r\n        const count = Math.floor(size.width / 360);\r\n\r\n        let _row = 1;\r\n        let _col = total;\r\n        let _end = total - 1;\r\n        let _gap = 96;\r\n\r\n        let _width = type === 'list' ? 360 : Math.round((targetWidth - (16 * (count - 1))) / count);\r\n        let _height = 160;\r\n\r\n        let rowNum = Math.round(targetWidth / _width);\r\n        let colNum = Math.ceil(total / rowNum);\r\n        let colMin = Math.min(colNum, 3)\r\n\r\n        if (type === 'grid') {\r\n            if (colNum > 3) {\r\n                _row = colMin;\r\n                _col = Math.ceil(total / _row);\r\n            } else {\r\n                _row = colMin;\r\n                _col = rowNum;\r\n            };\r\n            _gap = 16;\r\n            _end = _col - Math.round(targetWidth / _width);\r\n        };\r\n        setGridNum({\r\n            col: _col,\r\n            row: _row,\r\n            end: _end,\r\n            gap: _gap,\r\n            width: _width,\r\n            height: _height,\r\n        });\r\n    }, [total, type, size]);\r\n    return gridNum;\r\n}\r\n\r\nexport function shuffle(dataSet) {\r\n    const array = dataSet.slice();\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n}\r\n\r\n/*export function usePosition(type) {\r\n    const [position, setPosition] = useState({\r\n        x: 0,\r\n    });\r\n    const size = useWindowSize();\r\n    useEffect(() => {\r\n        if (size === null) {\r\n            return { x: 0 };\r\n        }\r\n        setPosition({\r\n            x: type === 'list' ? (size.width - 32) * 0.5 : 0,\r\n        });\r\n    }, [type, size,]);\r\n    return position;\r\n}*/","\r\nimport './guideBox.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst App = (props) => {\r\n    const active = props.active;\r\n    //const type = props.type;\r\n\r\n    const Box = () => {\r\n        const result = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            result.push(<span key={i} className={classNames('boxLine')} />)\r\n        }\r\n        return result;\r\n    }\r\n    return (\r\n        <>\r\n        <div className={classNames('boxLineContainer', active && 'active')}>\r\n            {\r\n                <Box />\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","\r\nimport './gueage.scss';\r\nimport classNames from 'classnames';\r\nimport React, { useEffect } from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\n\r\nconst App = (props) => {\r\n    const value = props.value;\r\n    const color = props.color;\r\n\r\n    const { number,} = useSpring({\r\n        from: {\r\n            number: 0,\r\n        },\r\n        to: {\r\n            number: value,\r\n        },\r\n        reset: true,\r\n        delay: 300,\r\n    });\r\n\r\n    const Gueage = () => {\r\n        const result = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            result.push(<span key={i} className={classNames('boxGueage')} />)\r\n        }\r\n        return result;\r\n    }\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n    return (\r\n        <div className={classNames('boxGueageContainer')}>\r\n            <animated.div className={'boxGueageBase'} style={{ width: props.active ? number.to(n => n.toFixed(2) + '%') : value+'%', backgroundColor: color }}/>\r\n            <Gueage />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import './aircraft.scss';\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport context from '../Context';\r\n\r\nconst App = (props) => {\r\n    const state = useContext(context);\r\n    const { engine } = state;\r\n    const images = props.images;\r\n    const prop = useSpring(\r\n        {\r\n            config: { duration: 600 },\r\n            x: props.active\r\n        }\r\n    )\r\n    useEffect(() => {\r\n    }, [])\r\n    return (\r\n        <div className=\"imageContainer\" >\r\n            {engine && images ? (\r\n                <animated.img alt={'KF21'}\r\n                    //src={prop.x.to({ range: [0, 1], output: [60, 40] }).to(num => process.env.PUBLIC_URL + '/assets/aircraft/FA50/FA_00' + Math.round(num))}\r\n                    src={prop.x.to({ range: [0, 1], output: [images.length - 1, 0] }).to(num => images[Math.round(num)].src)}\r\n                    style={{\r\n                        transform: prop.x.to({ range: [0, 0.5, 1], output: [1, 1, 2.8] }).to(x => `scale(${x})`),\r\n                        marginTop: prop.x.to({ range: [0, 0.5, 1], output: [0, 0, -42] }).to(x => x)\r\n                    }}\r\n                />) : (\r\n                <animated.img src={images[Math.round(images.length - 1)].src} alt={'KF21'}\r\n                    style={{\r\n                        transform: prop.x.to({ range: [0, 0.5, 1], output: [1, 1, 1.4] }).to(x => `scale(${x})`),\r\n                    }}\r\n                />\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    test: 1,\r\n};\r\n\r\nexport default App;\r\n","import './slideItem.scss';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css'\r\nimport { Flipped } from 'react-flip-toolkit';\r\nimport { getColor } from '../Mixin'\r\nimport context from '../Context';\r\nimport GuideBox from './guideBox';\r\nimport GueageBox from './gueage';\r\n\r\nimport Aircraft from './aircraft';\r\n\r\nconst App = (props) => {\r\n    const state = useContext(context);\r\n    const { focused, setFocused, type, setBase, setCount, setTemp, temp } = state;\r\n    const index = props.index;\r\n    const item = props.item;\r\n    const active = focused === index && type !== 'grid';\r\n    const selectItem = props.selectItem;\r\n    const id = item.호기ID;\r\n    //\r\n    let percentColor = getColor(item.TOTAL, 0, 240);\r\n\r\n    const {number} = useSpring({\r\n        from: {\r\n            number: temp[4] || 0,\r\n        },\r\n        to: {\r\n            number: item.TOTAL,\r\n        },\r\n        reset: true, //temp[4] === item.TOTAL ? false : true,\r\n        delay: 200,\r\n    });\r\n\r\n    const onClick = () => {\r\n        setTemp([0, 0, 0, 0])\r\n        selectItem(item)\r\n        setFocused(index)\r\n        setBase(true)\r\n        type === 'list' && setCount(index);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log('item useEffect', props.images)\r\n    }, [])\r\n\r\n    return (\r\n        <Flipped flipId={id} translate>\r\n            <div key={item.호기ID} className={classNames('listItem', active && 'active')}>\r\n                <GuideBox active={active} />\r\n                <div className={'aircraftGroup'} >\r\n                    <div className={'aircraft'}>\r\n                        {/*<img src={getImage(item.기종)} alt={'KF-21'} />*/}\r\n                        <Aircraft active={active ? 1 : 0} images={props.images}/>\r\n                    </div>\r\n                </div>\r\n                {(focused === index && type === 'list') ? (\r\n                    <div className={classNames('item')} >\r\n                        \r\n                        <button className={'detailButton'} onClick={() => { onClick() }} />\r\n                    </div>\r\n                ) : (\r\n                    <div className={classNames('item')} >\r\n                        <div className={'itemTitle'}>{item.호기}호기</div>\r\n                        <GueageBox value={item.TOTAL} color={percentColor} />\r\n                        <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{type === 'grid' ? number.to(n => n.toFixed(2) + '%') : item.TOTAL + '%'}</animated.div>\r\n                        <div className={'itemIndex'}>{index < 9 ? '0' + (index + 1) : (index + 1)}</div>\r\n                        <button className={'detailButtonGrid'} onClick={() => { onClick() }} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Flipped>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    focused: 0,\r\n};\r\n\r\nexport default App;\r\n","\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { getColor } from '../Mixin'\r\n\r\nconst App = (props) => {\r\n    //console.log('chart')\r\n    const canvasRef = useRef(null);\r\n    const timeout = useRef(null);\r\n    //\r\n    const [canvas, setCanvas] = useState(null)\r\n    const [context, setContext] = useState(null)\r\n    const item = props.item;\r\n    const aver = props.aver || [0, 0, 0, 0];\r\n    const total = props.total;\r\n    const def = Object.keys(aver).map(key => ({ key, value: aver[key] }));\r\n    const now = Object.keys(item).map(key => ({ key, value: item[key] }));\r\n    //\r\n    const fillColor = getColor(total, 0, 240, 0.48);\r\n    const strokeColor = getColor(total, 0, 240, 1);\r\n\r\n    const fixSize = 0.5;\r\n    const width = 480;\r\n    const height = 360;\r\n    const wCenter = width * 0.5;\r\n    const hCenter = height * 0.5;\r\n    const size = 20;\r\n    const FPS = 60;\r\n    const duration = 20;\r\n\r\n    useEffect(() => {\r\n        setCanvas(canvasRef.current);\r\n        canvas && setContext(canvas.getContext('2d'));\r\n        const curArr = [props.cur];\r\n        const startArr = [props.cur];\r\n        const endArr = [Object.keys(item).map(key => (item[key]))];\r\n        const items = [def, now];\r\n        //\r\n        let complete = true;\r\n        let delta;\r\n        //\r\n        const base = () => {\r\n            context.strokeStyle = \"#ccc\";  // 선 색깔\r\n            context.lineJoin = 'round';\t// 선 끄트머리(?)\r\n            context.lineWidth = 1;\t\t// 선 굵기\r\n            context.shadowBlur = 0;\r\n            //세로\r\n            context.beginPath();\r\n            context.moveTo(wCenter + fixSize, size);\r\n            context.lineTo(wCenter + fixSize, height - size);\r\n            //가로\r\n            context.moveTo(80, hCenter + fixSize);\r\n            context.lineTo(width - 80, hCenter + fixSize);\r\n            context.closePath();\r\n            //\r\n            context.stroke();\r\n            //\r\n            let ss = ((height / 2) - size) / 5;\r\n            let polygonPoints = [\r\n                wCenter, hCenter - ss * 5, // 0\r\n                wCenter + ss * 5, hCenter, // 1\r\n                wCenter, hCenter + ss * 5, // 2\r\n                wCenter - ss * 5, hCenter, // 3\r\n            ];\r\n            context.fillPolygon(polygonPoints, 'rgba(0,0,0,0.0)', '#a4a4a4');\r\n            \r\n            context.stroke();\r\n\r\n           // context.beginPath();\r\n\r\n            for (let i = 0; i < 5; i++) {\r\n\r\n                const inSize = ss * i;\r\n                let polygonPoints = [\r\n                    wCenter, hCenter - inSize,\r\n                    wCenter + inSize, hCenter,\r\n                    wCenter, hCenter + inSize,\r\n                    wCenter - inSize, hCenter,\r\n                ];\r\n                context.fillPolygon(polygonPoints, 'rgba(0,0,0,0)', '#dedede');\r\n            }\r\n            context.font = '500 14px Noto Sans KR';\r\n            context.textAlign = 'center';\r\n            context.textBaseline = 'bottom';\r\n            context.fillStyle = '#1c1c1c';\r\n            context.shadowBlur = 0;\r\n            context.fillText(now[0].key, wCenter, hCenter - 160);\r\n\r\n            context.textAlign = 'left';\r\n            context.textBaseline = 'middle';\r\n            context.fillText(now[1].key, wCenter + 160, hCenter);\r\n\r\n            context.textAlign = 'center';\r\n            context.textBaseline = 'top';\r\n            context.fillText(now[2].key, wCenter, hCenter + 160);\r\n\r\n            context.textAlign = 'right';\r\n            context.textBaseline = 'middle';\r\n            context.fillText(now[3].key, wCenter - 160, hCenter);\r\n        }\r\n        const draw = (arr) => {\r\n            context.clearRect(0, 0, 480, 360);\r\n            const ss = ((height / 2) - size) / 100;\r\n            const setArray = [\r\n                { stroke: 'rgba(0,0,0,0.24)', fill: 'rgba(0,0,0,0.16)', width: 1, shadow: 0 },\r\n                { stroke: strokeColor, fill: fillColor, width: 1.6, shadow: 0 },\r\n            ]\r\n            base();\r\n\r\n            _.map(items, (item, i) => {\r\n                let polygonPoints = [];\r\n                if (i === 0) {\r\n                    polygonPoints = [\r\n                        wCenter, hCenter - ss * item[0].value,\r\n                        wCenter + ss * item[1].value, hCenter,\r\n                        wCenter, hCenter + ss * item[2].value,\r\n                        wCenter - ss * item[3].value, hCenter,\r\n                    ];\r\n                } else {\r\n                    polygonPoints = [\r\n                        wCenter, hCenter - ss * arr[0],\r\n                        wCenter + ss * arr[1], hCenter,\r\n                        wCenter, hCenter + ss * arr[2],\r\n                        wCenter - ss * arr[3], hCenter,\r\n                    ];\r\n                }\r\n                context.fillPolygon(polygonPoints,\r\n                    setArray[i].fill,\r\n                    setArray[i].stroke,\r\n                    setArray[i].width,\r\n                    setArray[i].shadow,\r\n                );\r\n            })\r\n        }\r\n        const loop = () => {\r\n            for (let i = 0; i < endArr.length; i += 1) {\r\n                for (let t = 0; t < endArr[i].length; t += 1) {\r\n                    delta = (endArr[i][t] - startArr[i][t]) / duration;\r\n                    curArr[i][t] += delta;\r\n                    if (delta) {\r\n                        complete = false;\r\n                    };\r\n                };\r\n            };\r\n            //\r\n            let temp0 = endArr.length - 1;\r\n            let temp1 = endArr[temp0].length - 1;\r\n\r\n            if (Math.round(endArr[temp0][temp1] * 10) / 10 === Math.round(startArr[temp0][temp1] * 10) / 10) {\r\n                complete = true;\r\n            };\r\n            if (complete) {\r\n                draw(endArr[0]);\r\n                clearTimeout(timeout.current);\r\n                //cancelAnimationFrame(loop);\r\n            } else {\r\n                draw(curArr[0])\r\n                timeout.current = setTimeout(() => { loop() }, FPS / duration);\r\n                //requestAnimationFrame(loop);\r\n\r\n            };\r\n        };\r\n        if (context) {\r\n            clearTimeout(timeout.current);\r\n            loop();\r\n            //requestAnimationFrame(loop);\r\n        }\r\n    }, [canvas, context, item, fillColor, hCenter, now, strokeColor, wCenter, def, props.cur])\r\n\r\n    return (\r\n        <canvas ref={canvasRef} className=\"canvas\" width={480} height={360} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\nCanvasRenderingContext2D.prototype.fillPolygon = function (points, fillColor, strokeColor, lineWidth, shadow) {\r\n    if (points.length <= 0) return;\r\n    this.closePath();\r\n    this.strokeStyle = strokeColor;  // 선 색깔\r\n    this.lineJoin = 'round';\t// 선 끄트머리(?)\r\n    this.lineWidth = lineWidth || .5;\t\t// 선 굵기\r\n    this.fillStyle = fillColor;\r\n\r\n    this.beginPath();\r\n    this.moveTo(points[0], points[1]);\r\n    for (let i = 2; i < points.length - 1; i += 2) {\r\n        this.lineTo(points[i], points[i + 1]);\r\n    }\r\n    this.shadowColor = fillColor;\r\n    this.shadowBlur = shadow || 0;\r\n    this.closePath();\r\n    this.stroke();\r\n\r\n    this.fill();\r\n}","import './detailItem.scss';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css';\r\nimport { getColor, byKeys } from '../Mixin';\r\nimport context from '../Context';\r\nimport { animated, useSpring } from 'react-spring';\r\n\r\nimport Chart from './chart';\r\n\r\nconst App = (props) => {\r\n    const state = useContext(context);\r\n    const { type, setBase, temp, base } = state;\r\n    const item = props.item;\r\n    const selectItem = props.select;\r\n    const checkList = props.checkList;\r\n    const ess = props.ess;\r\n    const aver = props.aver;\r\n\r\n    const items = byKeys(item, _.keys(checkList));\r\n    const averItem = byKeys(aver, _.keys(checkList));\r\n    //\r\n    const percentColor = item && getColor(item.TOTAL, 0, 240);\r\n\r\n    const { number, color } = useSpring({\r\n        from: { \r\n            number: temp[4] || 0 \r\n        },\r\n        to: {\r\n            number: item.TOTAL,\r\n            color: percentColor\r\n        },\r\n        reset: true,\r\n    });\r\n\r\n    //const iarr = byKeys(item, _.keys(ess))\r\n    //const arrItem = Object.keys(iarr).map(key => (iarr[key]));\r\n\r\n    const [itemIcon] = useState([\r\n        { name: '주기검사', icon: 'ri-tools-fill' },\r\n        { name: '야간비행여부', icon: 'ri-contrast-2-fill' },\r\n        { name: '외장변경', icon: 'ri-timer-line' },\r\n        { name: '실무장여부', icon: 'ri-flight-takeoff-fill' },\r\n        { name: '항공기등급', icon: 'ri-todo-line' },\r\n        { name: '가동상태', icon: 'ri-user-heart-line' },\r\n        { name: '최근비행', icon: 'ri-calendar-line' },\r\n        { name: '주요결함', icon: 'ri-pulse-line' },\r\n    ])\r\n\r\n    const SideItem = item => {\r\n        const result = [];\r\n        _.map(items, (val, key) => {\r\n            //const color = getColor(val, 0, 240)\r\n            result.push(\r\n                <li key={key} className={classNames('sideItem', checkList[key] === 'N' && 'disabled')}>\r\n                    <span className={'sideItemBase'} />\r\n                    <span className={'sideItemIcon'}><i className={_.find(itemIcon, ['name', key]).icon} /></span>\r\n                    <span className={'sideItemTitle'}>{key}</span>\r\n                    <span className={'sideItemValue'}>\r\n                        {\r\n                            checkList[key] === 'N' ?\r\n                                <i className=\"ri-eye-off-line\" /> :\r\n                                <span className={'sideItemUd'}>{val}<i className={val > averItem[key] ? \"ri-arrow-up-s-fill\" : \"ri-arrow-down-s-fill\"}></i></span>\r\n                        }\r\n                    </span>\r\n                </li>\r\n            )\r\n        })\r\n        return result;\r\n    }\r\n\r\n    const onClick = () => {\r\n        selectItem(null);\r\n        setBase(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <div className={'detailContainer'} style={{ width: 360, height: 360 }}>\r\n            <ul className={'detailContents'}>\r\n                <SideItem {...item} type={type} key={'sideItem'} />\r\n            </ul>\r\n            <div className={classNames('listItem', 'listItemExpend')} >\r\n                <div className={'graph'}>\r\n                    {base && <Chart item={byKeys(item, _.keys(ess))} aver={byKeys(aver, _.keys(ess))} total={item.TOTAL} cur={temp} />}\r\n                </div>\r\n                <div className={'itemRank'}></div>\r\n                <div className={'itemTitle'}>{item && item.호기}호기 <span className={'itemTitleGray'}>BORAMAE</span></div>\r\n                <span className={'itemPoint'}>RAITING POINT</span>\r\n                <animated.div className={classNames('itemPercent')} style={{ color: color }}>\r\n                    {number.to(n => n.toFixed(2) + '%')}\r\n                </animated.div>\r\n                <button className={'detailButton'} onClick={() => { onClick() }} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    focused: 0,\r\n};\r\n\r\nexport default App;\r\n","import './focuseItem.scss';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css'\r\nimport { getColor } from '../Mixin'\r\nimport context from '../Context';\r\nimport GueageBox from './gueage';\r\n\r\nconst App = (props) => {\r\n    \r\n    const state = useContext(context);\r\n    const { temp } = state;\r\n    const item = props.item;\r\n    //\r\n    let percentColor = getColor(item.TOTAL, 0, 240);\r\n\r\n    const { number } = useSpring({\r\n        from: {\r\n            number: temp[4] || 0,\r\n        },\r\n        to: {\r\n            number: item.TOTAL,\r\n        },\r\n        reset: true,\r\n        delay: 200,\r\n    });\r\n\r\n    useEffect(() => {\r\n        //console.log('item useEffect')\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classNames('focuseItem')} >\r\n            <div className={'itemPercentGroup'} >\r\n                <GueageBox value={item.TOTAL} color={percentColor} />\r\n                <span className={'itemRating'}>RATING POINT</span>\r\n                <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{number.to(n => n.toFixed(2) + '%')}</animated.div>\r\n            </div>\r\n            <div className={'itemTitleGroup'} >\r\n                <div className={'itemTitle'}>{item.호기}호기</div>\r\n                <span className={'itemSubText'}>Boramae</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    focused: 0,\r\n};\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css'\r\nimport { Flipper, Flipped } from 'react-flip-toolkit';\r\nimport { byKeys } from '../Mixin'\r\n\r\nimport context from '../Context';\r\nimport SlideItem from './slideItem';\r\nimport DetailItem from './detailItem';\r\nimport FocuseItem from './focusItem';\r\n\r\nimport { useGridNum, useMove, useData } from '../Mixin';\r\nimport _ from 'lodash';\r\n\r\nconst App = (props) => {\r\n  //console.log('slide')\r\n  const DS = props.data;\r\n  const state = useContext(context);\r\n  const { topNum, type, setType, focused, setFocused, count, setCount, base, setBase, setTemp, temp } = state;\r\n  const [filterView, setFilterView] = useState(null);\r\n  const [selectItem, setSelectItem] = useState(null);\r\n  const [checkList, setCheckList] = useState(null);\r\n  const [images, setImages] = useState(null);\r\n\r\n  const sliderRef = useRef(null);\r\n  const result = useData(DS, topNum, checkList);\r\n  const grid = useGridNum(result.data && result.data.length, type);\r\n  const move = useMove(type, count, grid);\r\n  const ess = DS[topNum].필수항목;\r\n  const aver = DS[topNum].평균;\r\n  const comment = DS[topNum].배정조건;\r\n\r\n\r\n  //\r\n  //const timeout = useRef(null);\r\n  /*const autoSlide = () => {\r\n    if (focused < grid.col - 1) {\r\n      moveSlide('next');\r\n    } else {\r\n      setFocused(0);\r\n      setCount(0);\r\n    }\r\n    timeout.current = setTimeout(() => { autoSlide() }, 2000);\r\n  }*/\r\n\r\n  const preLoad = () => {\r\n    const arr = [];\r\n    for (let i = 40; i < 60; i++) {\r\n      const preImage = new Image();\r\n      preImage.src = process.env.PUBLIC_URL + '/assets/aircraft/FA50/FA_00' + i;\r\n      arr.push(preImage)\r\n    }\r\n    setImages(arr);\r\n  };\r\n\r\n  const moveSlide = (postion) => {\r\n    if (base) {\r\n      const iarr = byKeys(result.data[focused], _.keys(ess))\r\n      let arrItem = Object.keys(iarr).map(key => (iarr[key]));\r\n      arrItem[4] = result.data[focused].TOTAL;\r\n      setTemp(arrItem);\r\n    } else {\r\n      let tarr = [];\r\n      for (let i = 0; i < 5; i++) {\r\n        if (i !== 4) {\r\n          tarr[i] = temp[i];\r\n        } else {\r\n          tarr[i] = result.data[focused].TOTAL\r\n        };\r\n      };\r\n      setTemp(tarr);\r\n    }\r\n\r\n    if (postion === 'prev') {\r\n      type === 'list' && focused > 0 && setFocused(focused - 1);\r\n      count > 0 && setCount(count - 1);\r\n    } else if (postion === 'next') {\r\n      type === 'list' && focused < grid.end && setFocused(focused + 1);\r\n      count < grid.end && setCount(count + 1);\r\n    };\r\n    //console.log(selectItem)\r\n  };\r\n\r\n  const onCheck = e => {\r\n    let name = e.target.value;\r\n    setCheckList(\r\n      { ...checkList, [name]: e.target.checked ? 'Y' : 'N' }\r\n    );\r\n  };\r\n\r\n  const onWindow = () => {\r\n    window['returnFn'](result.data[focused]);\r\n  }\r\n\r\n  const fView = () => {\r\n    if (filterView === null) {\r\n      setFilterView('active');\r\n      setType('grid');\r\n    } else {\r\n      setFilterView(null);\r\n      setType('list');\r\n    }\r\n    setSelectItem(null);\r\n    setBase(false)\r\n    setFocused(0);\r\n    setCount(0);\r\n  }\r\n\r\n  const CheckBox = () => {\r\n    const result = [];\r\n    _.map(checkList, (v, k) => {\r\n      const label = 'check' + k;\r\n      result.push(\r\n        <div className={'checkbox'} key={'check' + k}>\r\n          <div className='checkboxInput'><input id={label} className={'check'} value={k} type={'checkbox'} checked={v === 'Y' && true} disabled={ess[k]} onChange={(e) => onCheck(e)} /></div>\r\n          <div className={'checkboxText'} ><label htmlFor={label} className={'label'}>{k}</label>\r\n            <span className={'comment'}>{comment[k]}</span></div>\r\n        </div>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCheckList(DS[topNum].기준정보);\r\n    preLoad();\r\n  }, [DS, topNum]);\r\n\r\n  return (\r\n    <Flipper className={'slider'} flipKey={[result.data]}\r\n    //spring={{ stiffness: 560, damping: 56 }}\r\n    >\r\n      {\r\n        result.data ? (\r\n          selectItem === null ? (\r\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate>\r\n              <div className={classNames('slide')} ref={sliderRef}>\r\n                <div className={classNames('list', type === 'grid' && 'active')}\r\n                  style={{\r\n                    transform: 'translateX(' + move.x + 'px)',\r\n                    gridTemplateColumns: 'repeat(' + grid.col + ', ' + grid.width + 'px)',\r\n                    gridTemplateRows: 'repeat(' + grid.row + ', ' + grid.height + 'px)',\r\n                    gap: grid.gap,\r\n                  }}\r\n                >\r\n                  {\r\n                    result.data.map((item, i) => {\r\n                      return (\r\n                        <SlideItem item={item} index={i} focused={focused} images={images} key={'slideItem' + i} selectItem={setSelectItem} />\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n                <FocuseItem item={result.data[focused]} />\r\n                {type !== 'grid' && <button className={classNames('callButton', base && 'active')} onClick={onWindow}>\r\n                  <i className=\"ri-check-fill\"></i>\r\n                  <span className='callButtonText'>호기선택</span>\r\n                </button>}\r\n              </div>\r\n\r\n            </Flipped>\r\n          ) : (\r\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate>\r\n              <div className={'detail'}>\r\n                <DetailItem item={result.data[focused]} ess={ess} aver={aver} checkList={checkList} active={false} select={setSelectItem} key={'sideItem'} />\r\n              </div>\r\n            </Flipped>\r\n          )\r\n\r\n        ) : (\r\n          <div>NO DATA</div>\r\n        )\r\n      }\r\n      {result.data &&\r\n        <div className={classNames('controller', type === 'grid' && 'active')}>\r\n\r\n          <button className={'controllerButton prevButton'} onClick={() => count !== 0 && moveSlide('prev')}><i className=\"ri-arrow-left-s-line\"></i><span className=\"controllText\">PREV</span></button>\r\n          <button className={'controllerButton filterButton'} onClick={() => fView()}><i className={type === 'list' ? \"ri-arrow-up-s-line\" : \"ri-close-fill\"}></i><span className=\"controllText\">배정조건</span></button>\r\n          <button className={'controllerButton nextButton'} onClick={() => count < grid.end && moveSlide('next')}><span className=\"controllText\">NEXT</span><i className=\"ri-arrow-right-s-line\"></i></button>\r\n          <div className={classNames('filter', filterView)}>\r\n            <div className={'filterClose'} onClick={() => fView()} />\r\n            <CheckBox />\r\n            <ul className={'filterInfo'}>\r\n              <li className={'infobox boxdisable'}>필수</li>\r\n              <li className={'infobox boxchecked'}>선택</li>\r\n              <li className={'infobox boxnormal'}>선택가능</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      }\r\n    </Flipper>\r\n  );\r\n}\r\n\r\nApp.defaultProps = {\r\n  focused: 0,\r\n};\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport context from '../Context';\r\n\r\nconst App = (props) => {\r\n  const state = useContext(context);\r\n  const { type, base } = state;\r\n  const loading = props.loading;\r\n  const slideSize = 360;\r\n\r\n  const Line = () => {\r\n    const result = [];\r\n    for (let i = 0; i < 9; i++) {\r\n      result.push(<span key={i} className={classNames('sliceLine')} />)\r\n    }\r\n    return result;\r\n  }\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classNames('base', type !== 'grid' ? null : 'active', loading && 'loading')}>\r\n      <div className={'baseContents'} style={{ width: slideSize, height: slideSize }}>\r\n        <div className={classNames('baseBox')} />\r\n        <div className={classNames('inBox')} />\r\n        {!loading &&\r\n          <div className={'detailButton'}>\r\n            <div className={classNames('detailButtonContainer', base && 'active')}>\r\n              <span className={'detailText'}>상세정보<i className={\"ri-search-line\"}></i></span>\r\n              <span className={'detailText'}>닫기<i className={\"ri-close-line\"}></i></span>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className={'slice'}>\r\n        <Line />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useRef, useEffect, } from 'react';\r\nimport './index.scss';\r\nimport Chart from '../Slide/chart';\r\nimport { shuffle } from '../Mixin';\r\nimport classNames from 'classnames';\r\n\r\nconst App = (props) => {\r\n    //console.log('loading')\r\n    let cc = 0;\r\n    const duration = 1000;\r\n    const maxCount = props.meassage.length || 0;\r\n    const callBack = props.callBack;\r\n    const [end, setEnd] = useState([0, 0, 0, 0]);\r\n    const [start] = useState([0, 0, 0, 0]);\r\n    const [percent, setPercent] = useState(0);\r\n    const [ment] = useState(shuffle(props.meassage));\r\n    const [fix, setFix] = useState(props.startMsg);\r\n    const timeout = useRef(null);\r\n    const [flag, setFlag] = useState(false);\r\n    //\r\n    useEffect(() => {\r\n        const loop = () => {\r\n            if (props.title) {\r\n                clearTimeout(timeout.current);\r\n                let item = null;\r\n                if (cc > maxCount - 1) {\r\n                    item = randomArray(100, 100);\r\n                    setFix(props.endMsg);\r\n                } else {\r\n                    item = randomArray(50, 100);\r\n                    setFix(ment[cc])\r\n                }\r\n\r\n                if (cc < maxCount) {\r\n                    cc++;\r\n                    timeout.current = setTimeout(() => { loop() }, duration);\r\n                } else {\r\n                    setFlag(true);\r\n                    timeout.current = setTimeout(() => {\r\n                        callBack(false);\r\n                        clearTimeout(timeout.current);\r\n                    }, 1200);\r\n                }\r\n                setEnd(item.array);\r\n                setPercent(item.total);\r\n            }\r\n        }\r\n        const randomArray = (n, m) => {\r\n            let arr = {};\r\n            let total = 0;\r\n            for (var i = 0; i < props.title.length; i++) {\r\n                const value = Math.floor((Math.random() * (m - n) + n));\r\n                arr[props.title[i]] = value;\r\n                total += value;\r\n            };\r\n            return { array: arr, total: total / props.title.length };\r\n        };\r\n        loop();\r\n        return () => setEnd(null);\r\n    }, [cc, maxCount, ment, props.endMsg, props.title, callBack])\r\n\r\n    return (\r\n        <div className='load'>\r\n            <div className={classNames('graph', flag && 'active')}>\r\n                <Chart item={end} total={percent} cur={start} />\r\n                <div className={'loadingComment'} onClick={() => { callBack(false) }}>\r\n                    <span className='loadingText'>{fix}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useEffect } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst App = (props) => {\r\n  //const slideSize = 360;\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classNames('mobile')}>\r\n      <div className='mobileBox' />\r\n      <img className='mobileLogo' src={process.env.PUBLIC_URL + '/assets/other/logo.png'} alt={'logo'} />\r\n      <span className='mobileMent'>아쉽게도 현재 모바일은 지원 하지 않습니다</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport './App.scss';\r\nimport Head from './component/Head/';\r\nimport Foot from './component/Foot/';\r\nimport Slide from './component/Slide';\r\nimport Base from './component/Base';\r\nimport Loading from './component/Loading';\r\n\r\nimport Mobile from './component/Mobile';\r\n\r\nconst App = () => {\r\n  //console.log('App')\r\n  const [props] = useState(window['getProps']());\r\n  const [isMobile] = useState(/Mobi/i.test(window.navigator.userAgent));\r\n  const [top, setTop] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const onLoad = async () => {\r\n      fetch(props.url, {\r\n        headers: {\r\n          'Accept': 'application / json'\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => setData(response));\r\n    }\r\n    const ini = () => {\r\n      let resultTop = [];\r\n      _.forEach(data, function (n) {\r\n        resultTop.push(n.부대)\r\n      });\r\n      setTop(resultTop);\r\n    }\r\n    !data ? onLoad() : ini();\r\n  }, [data, props.url]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\" />\r\n      <main className=\"main\">\r\n        <div className={classNames('contents', loading && 'loading')}>\r\n          {isMobile ? (\r\n            <Mobile />\r\n          ) : (\r\n            <>\r\n              <Base loading={loading}/>\r\n              <Head data={top} />\r\n              {\r\n                loading ? <Loading callBack={setLoading} {...props} /> : <Slide data={data} />\r\n              }\r\n              <Foot stepNum={loading ? 0 : 1} />\r\n            </>\r\n\r\n          )}\r\n        </div>\r\n      </main>\r\n      <footer className=\"footer\">\r\n        {isMobile ? '© ROK KF-21 lis, ALL RIGHTS RESERVED' : '© ROK Government KF-21 lis program data, ALL RIGHTS RESERVED'}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n//\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { UserProvider } from './component/Context';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}