{"version":3,"sources":["component/Context/index.js","component/Head/index.js","component/Foot/index.js","component/Mixin/index.js","component/Slide/guideBox.js","component/Slide/gueage.js","component/Slide/aircraft.js","component/Slide/slideItem.js","component/Slide/chart.js","component/Slide/detailItem.js","component/Slide/focusItem.js","component/Slide/index.js","component/Base/index.js","component/Loading/index.js","component/Mobile/index.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","state","type","engine","base","filter","topNum","focused","count","width","height","size","temp","setTheme","theme","a","setState","setEngine","prevState","setTopNum","setType","setFocused","setBase","setCount","setWidth","setHeight","setFilter","setTemp","children","this","props","url","Provider","value","Component","App","useContext","context","data","useEffect","className","classNames","onClick","src","process","alt","length","MARK","기지","map","item","index","id","대대","defaultProps","useState","title","comment","stepData","step","num","stepNum","idx","getColor","percent","start","end","alpha","byKeys","obj","keys","filtered","forEach","key","hasOwnProperty","useWindowSize","undefined","flag","windowSize","setWindowSize","handleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","debounce","window","innerWidth","innerHeight","addEventListener","removeEventListener","Box","useCallback","result","i","push","color","number","useSpring","from","to","reset","delay","Gueage","div","style","active","n","toFixed","backgroundColor","prop","config","duration","x","img","range","output","Math","round","transform","marginTop","test","selectItem","호기ID","percentColor","TOTAL","flipId","호기","canvasRef","useRef","timeout","canvas","setCanvas","setContext","aver","total","def","Object","now","fillColor","strokeColor","fixSize","wCenter","hCenter","current","getContext","delta","curArr","cur","startArr","endArr","items","complete","draw","arr","clearRect","ss","setArray","stroke","fill","shadow","strokeStyle","lineJoin","lineWidth","shadowBlur","beginPath","moveTo","lineTo","closePath","polygonPoints","fillPolygon","inSize","font","textAlign","textBaseline","fillStyle","fillText","numView","loop","t","temp0","temp1","FPS","ref","CanvasRenderingContext2D","prototype","points","shadowColor","select","checkList","ess","averItem","name","icon","itemIcon","SideItem","val","find","marginLeft","top","DS","filterView","setFilterView","setSelectItem","setCheckList","setImages","sliderRef","setData","wAverage","keyArray","기준정보","weight","가중치","used","cloneDeep","weightFix","mergeWith","lists","호수추천","each","valueSum","v","k","element","Number","sortBy","reverse","useData","grid","col","row","gap","gridNum","setGridNum","winSize","targetWidth","floor","_row","_col","_end","_gap","_width","rowNum","colNum","ceil","colMin","min","useGridNum","move","setMove","_x","_c","useMove","필수항목","평균","배정조건","moveSlide","postion","iarr","arrItem","tarr","fView","CheckBox","label","checked","disabled","onChange","e","target","onCheck","htmlFor","preImage","Image","preLoad","flipKey","spring","stiffness","damping","translate","gridTemplateColumns","gridTemplateRows","loading","slideSize","Line","maxWidth","minWidth","cc","maxCount","meassage","callBack","setEnd","setPercent","dataSet","temporaryValue","randomIndex","array","slice","currentIndex","random","shuffle","ment","startMsg","fix","setFix","setFlag","randomArray","m","endMsg","uid","match","params","setTop","setLoading","onLoad","URL","fetch","headers","then","response","json","resultTop","부대","ini","isMobile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.b3eb4cf4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nclass UserProvider extends Component {\r\n    // Context state\r\n    state = {\r\n        type: 'list',\r\n        engine: false,\r\n        base: false,\r\n        filter: null,\r\n        topNum: 0,\r\n        focused: 0,\r\n        count: 0,\r\n        width: 0,\r\n        height: 0,\r\n        size: 360,\r\n        temp: [0,0,0,0,0],\r\n    };\r\n    // Method to update state\r\n    setTheme = async theme => {\r\n        this.setState(\r\n            {\r\n                theme: theme ? 'dark' : 'light',\r\n            }\r\n        );\r\n    };\r\n    setEngine = engine => {\r\n        this.setState(prevState => ({ engine }));\r\n    };\r\n    setTopNum = topNum => {\r\n        this.setState(prevState => ({ topNum }));\r\n    };\r\n    setType = type => {\r\n        this.setState(prevState => ({ type }));\r\n    };\r\n    setFocused = focused => {\r\n        this.setState(prevState => ({ focused }));\r\n    };\r\n    setBase = base => {\r\n        this.setState(prevState => ({ base }));\r\n    };\r\n    setCount = count => {\r\n        this.setState(prevState => ({ count }));\r\n    };\r\n    setWidth = width => {\r\n        this.setState(prevState => ({ width }));\r\n    };\r\n    setHeight = height => {\r\n        this.setState(prevState => ({ height }));\r\n    };\r\n    setFilter = filter => {\r\n        this.setState(prevState => ({ filter }));\r\n    };\r\n    setTemp = temp => {\r\n        this.setState(prevState => ({ temp }));\r\n    };\r\n    //\r\n    render() {\r\n        const { children } = this.props;\r\n        const { url, theme, engine, topNum, type, focused, count, base, width, height, size, filter, temp } = this.state;\r\n        const { setTheme, setEngine, setTopNum, setType, setFocused, setCount, setBase, setWidth, setHeight, setFilter, setTemp } = this;\r\n\r\n        return (\r\n            <UserContext.Provider\r\n                value={{\r\n                    theme,\r\n                    url,\r\n                    engine,\r\n                    topNum,\r\n                    type,\r\n                    focused,\r\n                    count,\r\n                    base,\r\n                    width,\r\n                    height,\r\n                    size,\r\n                    filter,\r\n                    temp,\r\n                    setTheme,\r\n                    setEngine,\r\n                    setTopNum,\r\n                    setType,\r\n                    setFocused,\r\n                    setCount,\r\n                    setBase,\r\n                    setWidth,\r\n                    setHeight,\r\n                    setFilter,\r\n                    setTemp,\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserContext;\r\n\r\nexport { UserProvider };\r\n","import './index.scss';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport context from '../Context';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css';\r\n\r\nconst App = (props) => {\r\n  \r\n  const state = useContext(context);\r\n  const { topNum, setTopNum, setFocused, setCount, base, engine, setEngine } = state;\r\n  const data = props.data;\r\n  const onClick = (id) => {\r\n    setFocused(0);\r\n    setCount(0);\r\n    setTopNum(id);\r\n  }\r\n  useEffect(() => {\r\n  },[])\r\n  return (\r\n    <div className=\"head\">\r\n      <div className={classNames('topLogo', engine && 'active')} onClick={() => setEngine(engine ? false : true)}>\r\n        <div className={'logo'}>\r\n          <img src={process.env.PUBLIC_URL + '/assets/other/logo.png'} alt={'logo'} />\r\n        </div>\r\n      </div>\r\n      <div className={classNames('topNav', base && 'active')}>\r\n        {\r\n          data && data.length > 0 && (\r\n            <>\r\n              <img className={'flag'} src={data[topNum].MARK} alt={data[topNum].기지} />\r\n              <span className={'viewText'}>{data[topNum].기지}</span>\r\n            </>\r\n          )\r\n        }\r\n        {data && (\r\n          data.map((item, index) => {\r\n            return (\r\n              <button key={item.대대} className={classNames('topButton', index === topNum ? 'active' : null)} onClick={() => !base && onClick(index)}>\r\n                {item.대대}\r\n              </button>\r\n            )\r\n          }))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.defaultProps = {\r\n  topNum: null,\r\n  type: 'list',\r\n};\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport context from '../Context';\r\nimport classNames from 'classnames';\r\n\r\nconst App = (props) => {\r\n  const state = useContext(context);\r\n  const { base, type } = state;\r\n  const [stepData] = useState([\r\n    { title: 'STEP 1', comment: 'Search' },\r\n    { title: 'STEP 2', comment: 'Aircraft' },\r\n    { title: 'STEP 3', comment: 'Condition' },\r\n    { title: 'STEP 4', comment: 'Finish' }\r\n  ]);\r\n\r\n  const step = () => {\r\n    let num = props.stepNum;\r\n    if (type === 'grid') {\r\n      num = 2;\r\n    };\r\n    return num;\r\n  };\r\n  \r\n  useEffect(() => {\r\n  }, [])\r\n  return (\r\n    <div className={'step'}>\r\n      <ul className={classNames('stepGroup', base && 'active')}>\r\n        {\r\n          stepData.map((item, idx) => {\r\n            return (\r\n              <li key={idx} className={classNames('stepItem', idx === step() ? 'active' : null)}>\r\n                <span className={'stepItemTitle'}>{item.title}</span>\r\n                <span className={'stepItemComment'}>{item.comment}</span>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.defaultProps = {\r\n  stepNum: 1,\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState, } from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport function getColor(percent, start, end, alpha) {\r\n    var a = percent / 100,\r\n        b = (end - start) * a,\r\n        c = b + start,\r\n        d = alpha ? alpha : 1;\r\n    return 'hsla(' + c + ', 60%, 48%, ' + d + ')';\r\n}\r\n\r\nexport function byKeys(obj, keys = []) {\r\n    const filtered = {}\r\n    keys.forEach(key => {\r\n        if (obj.hasOwnProperty(key)) {\r\n            filtered[key] = obj[key]\r\n        }\r\n    })\r\n    return filtered\r\n}\r\n\r\nexport function useData(arr, num, checkList) {\r\n    const [data, setData] = useState({\r\n        data: undefined\r\n    });\r\n    useEffect(() => {\r\n        let wAverage = 0;\r\n        const customizer = ((obj, src) => {\r\n            if (obj === 'N') {\r\n                return 0;\r\n            } else {\r\n                wAverage += src;\r\n            };\r\n        });\r\n        const keyArray = _.keys(arr[num].기준정보);\r\n        const weight = arr[num].가중치;\r\n        const used = _.cloneDeep(checkList);\r\n        const weightFix = _.mergeWith(used, weight, customizer);\r\n        const lists = _.cloneDeep(arr[num].호수추천);\r\n        _.each(lists, (obj) => {\r\n            let valueSum = 0;\r\n            _.map(obj, (v, k) => {\r\n                //console.log(k, v)\r\n                const findKey = keyArray.find(element => element === k);\r\n                if (findKey && used) {\r\n                    valueSum += (v * weightFix[k])\r\n                    //valueSum += (v * used[findKey])\r\n                }\r\n            })\r\n            obj.TOTAL = Number((valueSum / wAverage).toFixed(2));\r\n        });\r\n\r\n        const temp = _.sortBy(lists, 'TOTAL').reverse();\r\n        setData({\r\n            data: temp,\r\n        });\r\n    }, [arr, num, checkList]);\r\n    return data;\r\n}\r\n\r\nexport const debounce = (fn, ms) => {\r\n    let timer;\r\n    return _ => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(_ => {\r\n            timer = null;\r\n            fn.apply(this);\r\n        }, ms);\r\n    };\r\n}\r\n\r\nexport function useWindowSize() {\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n        flag: false,\r\n    });\r\n    useEffect(() => {\r\n        const handleResize = debounce(() => {\r\n            setWindowSize({width: window.innerWidth - 32, height: window.innerHeight});\r\n        }, 100);\r\n        window.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n    return windowSize;\r\n}\r\n\r\nexport function useMove(type, count, grid) {\r\n    const [move, setMove] = useState({\r\n        x: 0,\r\n    });\r\n    const size = useWindowSize();\r\n    useEffect(() => {\r\n        let _x = 0;\r\n        let _c = type === 'list' ? size.width * 0.5 : 0;\r\n        if (type === 'list') {\r\n            _x = Math.round(_c - ((grid.width + grid.gap) * count) - (grid.width * 0.5))\r\n            //} else if (data.length > 15 && !base) {\r\n        } else {\r\n            _x = Math.round(_c - ((grid.width + grid.gap) * count))\r\n        };\r\n        setMove({\r\n            x: _x,\r\n        });\r\n    }, [type, count, grid, size]);\r\n    return move;\r\n}\r\n\r\nexport function useGridNum(total, type, size) {\r\n    const [gridNum, setGridNum] = useState({\r\n        col: undefined,\r\n        row: undefined,\r\n        end: undefined,\r\n        gap: undefined,\r\n        width: undefined,\r\n        height: undefined,\r\n    });\r\n    const winSize = useWindowSize();\r\n    useEffect(() => {\r\n        if (!total) {\r\n            return { col: 0, row: 0, end: 0, gap: 0, width: 0, height: 0 };\r\n        }\r\n        const targetWidth = winSize.width;\r\n        const count = Math.floor(targetWidth / size);\r\n\r\n        let _row = 1;\r\n        let _col = total;\r\n        let _end = total - 1;\r\n        let _gap = 96;\r\n\r\n        let _width = type === 'list' ? size : Math.round((targetWidth - (16 * (count - 1))) / count);\r\n        let _height = 160;\r\n\r\n        let rowNum = Math.round(targetWidth / _width);\r\n        let colNum = Math.ceil(total / rowNum);\r\n        let colMin = Math.min(colNum, 3)\r\n\r\n        if (type === 'grid') {\r\n            if (colNum > 3) {\r\n                _row = colMin;\r\n                _col = Math.ceil(total / _row);\r\n            } else {\r\n                _row = colMin;\r\n                _col = rowNum;\r\n            };\r\n            _gap = 16;\r\n            _end = _col - Math.round(targetWidth / _width);\r\n        };\r\n        setGridNum({\r\n            col: _col,\r\n            row: _row,\r\n            end: _end,\r\n            gap: _gap,\r\n            width: _width,\r\n            height: _height,\r\n        });\r\n    }, [total, type, winSize, size]);\r\n    return gridNum;\r\n}\r\n\r\nexport function shuffle(dataSet) {\r\n    const array = dataSet.slice();\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n}\r\n","\r\nimport './guideBox.scss';\r\nimport classNames from 'classnames';\r\nimport React, { useCallback } from 'react';\r\n\r\nconst App = (props) => {\r\n    const Box = useCallback(() => {\r\n        const result = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            result.push(<span key={i} className={classNames('boxLine')} />)\r\n        }\r\n        return result;\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classNames('boxLineContainer')}>\r\n            <Box />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","\r\nimport './gueage.scss';\r\nimport classNames from 'classnames';\r\nimport React, { useEffect, useCallback } from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\n\r\nconst App = (props) => {\r\n    const value = props.value;\r\n    const color = props.color;\r\n\r\n    const { number, } = useSpring({\r\n        from: {\r\n            number: 0,\r\n        },\r\n        to: {\r\n            number: value,\r\n        },\r\n        reset: true,\r\n        delay: 300,\r\n    });\r\n\r\n    const Gueage = useCallback(() => {\r\n        const result = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            result.push(<span key={i} className={classNames('boxGueage')} />)\r\n        }\r\n        return result;\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    return (\r\n        <div className={classNames('boxGueageContainer')}>\r\n            <animated.div className={'boxGueageBase'} style={{ width: props.active ? number.to(n => n.toFixed(2) + '%') : value + '%', backgroundColor: color }} />\r\n            <Gueage />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import './aircraft.scss';\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport context from '../Context';\r\n\r\nconst App = (props) => {\r\n    const state = useContext(context);\r\n    const { engine } = state;\r\n    const prop = useSpring(\r\n        {\r\n            config: { duration: 420 },\r\n            x: props.active\r\n        }\r\n    )\r\n    useEffect(() => {\r\n    }, [])\r\n    return (\r\n        <div className=\"imageContainer\" >\r\n            {engine ? (\r\n                <animated.img className={'image'} alt={'KF21'}\r\n                    src={prop.x.to({ range: [0, 1], output: [60, 40] }).to(num => process.env.PUBLIC_URL + '/assets/aircraft/TH50/FA_00' + Math.round(num))}\r\n                    style={{\r\n                        transform: prop.x.to({ range: [0, 0.5, 1], output: [1, 1, 2.8] }).to(x => `scale(${x})`),\r\n                        marginTop: prop.x.to({ range: [0, 0.5, 1], output: [0, 0, -42] }).to(x => x)\r\n                    }}\r\n                />) : (\r\n                <animated.img className={'image'} alt={'KF21'}\r\n                    src={process.env.PUBLIC_URL + '/assets/aircraft/TH50/FA_0060'}\r\n                    style={{\r\n                        transform: prop.x.to({ range: [0, 0.5, 1], output: [1, 1, 1.4] }).to(x => `scale(${x})`),\r\n                    }}\r\n                />\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    test: 1,\r\n};\r\n\r\nexport default App;\r\n","import './slideItem.scss';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css'\r\nimport { Flipped } from 'react-flip-toolkit';\r\nimport { getColor } from '../Mixin'\r\nimport context from '../Context';\r\nimport GuideBox from './guideBox';\r\nimport GueageBox from './gueage';\r\n\r\nimport Aircraft from './aircraft';\r\n\r\nconst App = (props) => {\r\n    //console.log('/// list item')\r\n    const state = useContext(context);\r\n    const { focused, setFocused, type, setBase, setCount, setTemp, temp } = state;\r\n    const index = props.index;\r\n    const item = props.item;\r\n    const active = focused === index && type !== 'grid';\r\n    const selectItem = props.selectItem;\r\n    const id = item.호기ID;\r\n    //\r\n    let percentColor = getColor(item.TOTAL, 0, 240);\r\n\r\n    const { number } = useSpring({\r\n        from: {\r\n            number: temp[4] || 0,\r\n        },\r\n        to: {\r\n            number: item.TOTAL,\r\n        },\r\n        reset: true, //temp[4] === item.TOTAL ? false : true,\r\n        delay: 200,\r\n    });\r\n\r\n    const onClick = () => {\r\n        setTemp([0, 0, 0, 0])\r\n        selectItem(item)\r\n        setFocused(index)\r\n        setBase(true)\r\n        type === 'list' && setCount(index);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log('item useEffect', props.images)\r\n    }, [])\r\n\r\n    return (\r\n        <Flipped flipId={id}>\r\n            <div className={classNames('listItem', active && 'active')}>\r\n                {!active && <GuideBox active={active} />}\r\n                <div className={'aircraftGroup'} >\r\n                    <div className={'aircraft'}>\r\n                        {/*<img src={getImage(item.기종)} alt={'KF-21'} />*/}\r\n                        <Aircraft active={active ? 1 : 0} />\r\n                    </div>\r\n                </div>\r\n                {(focused === index && type === 'list') ? (\r\n                    <div className={classNames('item')} >\r\n                        <button className={'detailButton'} onClick={() => { onClick() }} />\r\n                    </div>\r\n                ) : (\r\n                    <div className={classNames('item')} >\r\n                        <div className={'itemTitle'}>{item.호기}호기</div>\r\n                        <GueageBox value={item.TOTAL} color={percentColor} />\r\n                        <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{type === 'grid' ? number.to(n => n.toFixed(2) + '%') : item.TOTAL + '%'}</animated.div>\r\n                        <div className={'itemIndex'}>{index < 9 ? '0' + (index + 1) : (index + 1)}</div>\r\n                        <button className={'detailButtonGrid'} onClick={() => { onClick() }} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Flipped>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    focused: 0,\r\n};\r\n\r\nexport default App;\r\n","\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { getColor } from '../Mixin'\r\n\r\nconst App = (props) => {\r\n    const canvasRef = useRef(null);\r\n    const timeout = useRef(null);\r\n    //\r\n    const [canvas, setCanvas] = useState(null)\r\n    const [context, setContext] = useState(null)\r\n    const item = props.item;\r\n    const aver = props.aver || [0, 0, 0, 0];\r\n    const total = props.total;\r\n    const def = Object.keys(aver).map(key => ({ key, value: aver[key] }));\r\n    const now = Object.keys(item).map(key => ({ key, value: item[key] }));\r\n    //\r\n    const fillColor = getColor(total, 0, 240, 0.48);\r\n    const strokeColor = getColor(total, 0, 240, 1);\r\n\r\n    const fixSize = 0.5;\r\n    const width = props.size + (props.size / 3);\r\n    const height = props.size;\r\n    const wCenter = width * 0.5;\r\n    const hCenter = height * 0.5;\r\n    const size = 20;\r\n    const FPS = 60;\r\n    const duration = 20;\r\n\r\n    useEffect(() => {\r\n        setCanvas(canvasRef.current);\r\n        canvas && setContext(canvas.getContext('2d'));\r\n        const curArr = [props.cur];\r\n        const startArr = [props.cur];\r\n        const endArr = [Object.keys(item).map(key => (item[key]))];\r\n        const items = [def, now];\r\n        //\r\n        let complete = true;\r\n        let delta;\r\n        //\r\n        const base = () => {\r\n            context.strokeStyle = \"#ccc\";  // 선 색깔\r\n            context.lineJoin = 'round';\t// 선 끄트머리(?)\r\n            context.lineWidth = 1;\t\t// 선 굵기\r\n            context.shadowBlur = 0;\r\n            //세로\r\n            context.beginPath();\r\n            context.moveTo(wCenter + fixSize, size);\r\n            context.lineTo(wCenter + fixSize, height - size);\r\n            //가로\r\n            context.moveTo(80, hCenter + fixSize);\r\n            context.lineTo(width - 80, hCenter + fixSize);\r\n            context.closePath();\r\n            //\r\n            context.stroke();\r\n            //\r\n            let ss = ((height / 2) - size) / 5;\r\n            let polygonPoints = [\r\n                wCenter, hCenter - ss * 5, // 0\r\n                wCenter + ss * 5, hCenter, // 1\r\n                wCenter, hCenter + ss * 5, // 2\r\n                wCenter - ss * 5, hCenter, // 3\r\n            ];\r\n            context.fillPolygon(polygonPoints, 'rgba(0,0,0,0.0)', '#a4a4a4');\r\n\r\n            context.stroke();\r\n\r\n            // context.beginPath();\r\n\r\n            for (let i = 0; i < 5; i++) {\r\n\r\n                const inSize = ss * i;\r\n                let polygonPoints = [\r\n                    wCenter, hCenter - inSize,\r\n                    wCenter + inSize, hCenter,\r\n                    wCenter, hCenter + inSize,\r\n                    wCenter - inSize, hCenter,\r\n                ];\r\n                context.fillPolygon(polygonPoints, 'rgba(0,0,0,0)', '#dedede');\r\n            }\r\n            context.font = '500 14px Noto Sans KR';\r\n            context.textAlign = 'center';\r\n            context.textBaseline = 'top';\r\n            context.fillStyle = '#898989';\r\n            context.shadowBlur = 0;\r\n            context.fillText(now[0].key, wCenter, 4);\r\n\r\n            context.textAlign = 'left';\r\n            context.textBaseline = 'middle';\r\n            context.fillText(now[1].key, wCenter - 16 + (props.size * 0.5), hCenter);\r\n\r\n            context.textAlign = 'center';\r\n            context.textBaseline = 'bottom';\r\n            context.fillText(now[2].key, wCenter, height - 4);\r\n\r\n            context.textAlign = 'right';\r\n            context.textBaseline = 'middle';\r\n            context.fillText(now[3].key, wCenter + 16 - (props.size * 0.5), hCenter);\r\n        }\r\n        const draw = (arr) => {\r\n            context.clearRect(0, 0, 480, height);\r\n            const ss = ((height / 2) - size) / 100;\r\n            const setArray = [\r\n                { stroke: 'rgba(0,0,0,0.16)', fill: 'rgba(0,0,0,0.16)', width: 1, shadow: 0 },\r\n                { stroke: 'rgba(0,0,0,0.24)', fill: 'rgba(0,0,0,0.24)', width: 0.5, shadow: 0 },\r\n            ]\r\n            base();\r\n\r\n            _.map(items, (item, i) => {\r\n                let polygonPoints = [];\r\n                if (i === 0) {\r\n                    polygonPoints = [\r\n                        wCenter, hCenter - ss * item[0].value,\r\n                        wCenter + ss * item[1].value, hCenter,\r\n                        wCenter, hCenter + ss * item[2].value,\r\n                        wCenter - ss * item[3].value, hCenter,\r\n                    ];\r\n                    context.fillPolygon(polygonPoints,\r\n                        setArray[i].fill,\r\n                        setArray[i].stroke,\r\n                        setArray[i].width,\r\n                        setArray[i].shadow,\r\n                    );\r\n                } else {\r\n                    /*polygonPoints = [\r\n                        wCenter, hCenter - ss * arr[0],\r\n                        wCenter + ss * arr[1], hCenter,\r\n                        wCenter, hCenter + ss * arr[2],\r\n                        wCenter - ss * arr[3], hCenter,\r\n                    ];*/\r\n\r\n                    polygonPoints = [\r\n                        wCenter, hCenter,\r\n                        wCenter + ss * arr[1], hCenter,\r\n                        wCenter, hCenter - ss * arr[0],\r\n                    ];\r\n                    context.fillPolygon(polygonPoints,\r\n                        getColor(total, 0, 240, 0.5),\r\n                        setArray[i].stroke,\r\n                        setArray[i].width,\r\n                        setArray[i].shadow,\r\n                    );\r\n\r\n                    polygonPoints = [\r\n                        wCenter, hCenter,\r\n                        wCenter + ss * arr[1], hCenter,\r\n                        wCenter, hCenter + ss * arr[2],\r\n                    ];\r\n                    context.fillPolygon(polygonPoints,\r\n                        getColor(total, 0, 240, 0.6),\r\n                        setArray[i].stroke,\r\n                        setArray[i].width,\r\n                        setArray[i].shadow,\r\n                    );\r\n\r\n                    polygonPoints = [\r\n                        wCenter, hCenter,\r\n                        wCenter, hCenter + ss * arr[2],\r\n                        wCenter - ss * arr[3], hCenter,\r\n                    ];\r\n                    context.fillPolygon(polygonPoints,\r\n                        getColor(total, 0, 240, 0.8),\r\n                        setArray[i].stroke,\r\n                        setArray[i].width,\r\n                        setArray[i].shadow,\r\n                    );\r\n\r\n                    polygonPoints = [\r\n                        wCenter, hCenter,\r\n                        wCenter, hCenter - ss * arr[0],\r\n                        wCenter - ss * arr[3], hCenter,\r\n                    ];\r\n                    context.fillPolygon(polygonPoints,\r\n                        getColor(total, 0, 240, 0.6),\r\n                        setArray[i].stroke,\r\n                        setArray[i].width,\r\n                        setArray[i].shadow,\r\n                    );\r\n\r\n                }\r\n                /*context.fillPolygon(polygonPoints,\r\n                    setArray[i].fill,\r\n                    setArray[i].stroke,\r\n                    setArray[i].width,\r\n                    setArray[i].shadow,\r\n                );*/\r\n                if (i > 0 && props.numView) {\r\n                    context.font = '600 14px GmarketSans';\r\n                    context.textAlign = 'center';\r\n                    context.textBaseline = 'bottom';\r\n                    context.fillStyle = '#4c4c4c';\r\n                    context.fillText(arr[0].toFixed(0), wCenter, hCenter + 8 - ss * arr[0]);\r\n                    context.textBaseline = 'middle';\r\n                    context.textAlign = 'left';\r\n                    context.fillText(arr[1].toFixed(0), wCenter - 8 + ss * arr[1], hCenter);\r\n                    context.textBaseline = 'top';\r\n                    context.textAlign = 'center';\r\n                    context.fillText(arr[2].toFixed(0), wCenter, hCenter - 8 + ss * arr[2]);\r\n                    context.textBaseline = 'middle';\r\n                    context.textAlign = 'right';\r\n                    context.fillText(arr[3].toFixed(0), wCenter + 8 - ss * arr[3], hCenter);\r\n                }\r\n            })\r\n        }\r\n        const loop = () => {\r\n            for (let i = 0; i < endArr.length; i += 1) {\r\n                for (let t = 0; t < endArr[i].length; t += 1) {\r\n                    delta = (endArr[i][t] - startArr[i][t]) / duration;\r\n                    curArr[i][t] += delta;\r\n                    if (delta) {\r\n                        complete = false;\r\n                    };\r\n                };\r\n            };\r\n            //\r\n            let temp0 = endArr.length - 1;\r\n            let temp1 = endArr[temp0].length - 1;\r\n\r\n            if (Math.round(endArr[temp0][temp1] * 10) / 10 === Math.round(startArr[temp0][temp1] * 10) / 10) {\r\n                complete = true;\r\n            };\r\n            if (complete) {\r\n                draw(endArr[0]);\r\n                clearTimeout(timeout.current);\r\n                //cancelAnimationFrame(loop);\r\n            } else {\r\n                draw(curArr[0])\r\n                timeout.current = setTimeout(() => { loop() }, FPS / duration);\r\n                //requestAnimationFrame(loop);\r\n\r\n            };\r\n        };\r\n        if (context) {\r\n            clearTimeout(timeout.current);\r\n            loop();\r\n            //requestAnimationFrame(loop);\r\n        }\r\n    }, [canvas, context, item, fillColor, hCenter, now, strokeColor, wCenter, def, total, props.cur, props.numView, height])\r\n\r\n    return (\r\n        <canvas ref={canvasRef} className=\"canvas\" width={width} height={height} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\nCanvasRenderingContext2D.prototype.fillPolygon = function (points, fillColor, strokeColor, lineWidth, shadow) {\r\n    if (points.length <= 0) return;\r\n    this.strokeStyle = strokeColor;  // 선 색깔\r\n    this.lineJoin = 'round';\t// 선 끄트머리(?)\r\n    this.lineWidth = lineWidth || .5;\t\t// 선 굵기\r\n    this.fillStyle = fillColor;\r\n\r\n    this.beginPath();\r\n    this.moveTo(points[0], points[1]);\r\n    for (let i = 2; i < points.length - 1; i += 2) {\r\n        this.lineTo(points[i], points[i + 1]);\r\n    }\r\n    this.shadowColor = fillColor;\r\n    this.shadowBlur = shadow || 0;\r\n    this.closePath();\r\n    this.stroke();\r\n    this.fill();\r\n}","import './detailItem.scss';\r\nimport React, { useContext, useState, useEffect, useCallback } from 'react';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css';\r\nimport { getColor, byKeys } from '../Mixin';\r\nimport context from '../Context';\r\nimport { animated, useSpring } from 'react-spring';\r\n\r\nimport Chart from './chart';\r\n\r\nconst App = (props) => {\r\n    const state = useContext(context);\r\n    const { setBase, temp, base, size } = state;\r\n    const item = props.item;\r\n    const selectItem = props.select;\r\n    const checkList = props.checkList;\r\n    const ess = props.ess;\r\n    const aver = props.aver;\r\n\r\n    const items = byKeys(item, _.keys(checkList));\r\n    const averItem = byKeys(aver, _.keys(checkList));\r\n    //\r\n    const percentColor = item && getColor(item.TOTAL, 0, 240);\r\n\r\n    const { number, color } = useSpring({\r\n        from: {\r\n            number: temp[4] || 0\r\n        },\r\n        to: {\r\n            number: item.TOTAL,\r\n            color: percentColor\r\n        },\r\n        reset: true,\r\n    });\r\n\r\n    //const iarr = byKeys(item, _.keys(ess))\r\n    //const arrItem = Object.keys(iarr).map(key => (iarr[key]));\r\n\r\n    const [itemIcon] = useState([\r\n        { name: '주기검사', icon: 'ri-tools-fill' },\r\n        { name: '야간비행여부', icon: 'ri-contrast-2-fill' },\r\n        { name: '외장변경', icon: 'ri-timer-line' },\r\n        { name: '실무장여부', icon: 'ri-flight-takeoff-fill' },\r\n        { name: '항공기등급', icon: 'ri-todo-line' },\r\n        { name: '가동상태', icon: 'ri-user-heart-line' },\r\n        { name: '최근비행', icon: 'ri-calendar-line' },\r\n        { name: '주요결함', icon: 'ri-pulse-line' },\r\n    ])\r\n\r\n    const SideItem = useCallback((item) => {\r\n        const result = [];\r\n        _.map(items, (val, key) => {\r\n            result.push(\r\n                <li key={key} className={classNames('sideItem', checkList[key] === 'N' && 'disabled')}>\r\n                    <span className={'sideItemBase'} />\r\n                    <span className={'sideItemIcon'}><i className={_.find(itemIcon, ['name', key]).icon} /></span>\r\n                    <span className={'sideItemTitle'}>{key}</span>\r\n                    <span className={'sideItemValue'}>\r\n                        {\r\n                            checkList[key] === 'N' ?\r\n                                <i className=\"ri-eye-off-line\" /> :\r\n                                <span className={'sideItemUd'}>{val}<i className={val > averItem[key] ? \"ri-arrow-up-s-fill\" : \"ri-arrow-down-s-fill\"}></i></span>\r\n                        }\r\n                    </span>\r\n                </li>\r\n            )\r\n        });\r\n        return result;\r\n    }, [averItem, checkList, itemIcon, items,])\r\n\r\n    const onClick = () => {\r\n        selectItem(null);\r\n        setBase(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n    return (\r\n        <div className={'detailContainer'} style={{ width: size, height: size }}>\r\n            <ul className={'detailContents'} style={{ marginLeft: Math.round(size * 0.5 * 1.414) - 94, top: 32 + Math.round((size - 282) * 0.5) }}>\r\n                <SideItem {...item} />\r\n            </ul>\r\n            <div className={classNames('listItem', 'listItemExpend')} >\r\n                <div className={'graph'}>\r\n                    {base && <Chart item={byKeys(item, _.keys(ess))} aver={byKeys(aver, _.keys(ess))} total={item.TOTAL} cur={temp} numView={true} size={size} />}\r\n                </div>\r\n                <div className={'itemTitle'}>{item && item.호기}호기 <span className={'itemTitleGray'}>BORAMAE</span></div>\r\n                <span className={'itemPoint'}>RAITING POINT</span>\r\n                <animated.div className={classNames('itemPercent')} style={{ color: color }}>\r\n                    {number.to(n => n.toFixed(2) + '%')}\r\n                </animated.div>\r\n                <button className={'detailButton'} onClick={() => { onClick() }} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    focused: 0,\r\n};\r\n\r\nexport default App;\r\n","import './focuseItem.scss';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css'\r\nimport { getColor } from '../Mixin'\r\nimport context from '../Context';\r\nimport GueageBox from './gueage';\r\n\r\nconst App = (props) => {\r\n    \r\n    const state = useContext(context);\r\n    const { temp } = state;\r\n    const item = props.item;\r\n    //\r\n    let percentColor = getColor(item.TOTAL, 0, 240);\r\n\r\n    const { number } = useSpring({\r\n        from: {\r\n            number: temp[4] || 0,\r\n        },\r\n        to: {\r\n            number: item.TOTAL,\r\n        },\r\n        reset: true,\r\n        delay: 200,\r\n    });\r\n\r\n    useEffect(() => {\r\n        //console.log('item useEffect')\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classNames('focuseItem')} >\r\n            <div className={'itemPercentGroup'} >\r\n                <GueageBox value={item.TOTAL} color={percentColor} />\r\n                <span className={'itemRating'}>RATING POINT</span>\r\n                <animated.div className={classNames('itemPercent')} style={{ color: percentColor }}>{number.to(n => n.toFixed(2) + '%')}</animated.div>\r\n            </div>\r\n            <div className={'itemTitleGroup'} >\r\n                <div className={'itemTitle'}>{item.호기}호기</div>\r\n                <span className={'itemSubText'}>Boramae</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nApp.defaultProps = {\r\n    focused: 0,\r\n};\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport 'remixicon/fonts/remixicon.css'\r\nimport { Flipper, Flipped } from 'react-flip-toolkit';\r\nimport { byKeys } from '../Mixin'\r\n\r\nimport context from '../Context';\r\nimport SlideItem from './slideItem';\r\nimport DetailItem from './detailItem';\r\nimport FocuseItem from './focusItem';\r\n\r\nimport { useGridNum, useMove, useData, useWindowSize } from '../Mixin';\r\nimport _ from 'lodash';\r\n\r\nconst App = (props) => {\r\n  //console.log('slide')\r\n  const DS = props.data;\r\n  const state = useContext(context);\r\n  const { topNum, type, setType, focused, setFocused, count, setCount, base, setBase, setTemp, temp, size } = state;\r\n  const [filterView, setFilterView] = useState(null);\r\n  const [selectItem, setSelectItem] = useState(null);\r\n  const [checkList, setCheckList] = useState(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [images, setImages] = useState(null);\r\n\r\n  const sliderRef = useRef(null);\r\n  const result = useData(DS, topNum, checkList);\r\n  const grid = useGridNum(result.data && result.data.length, type, size);\r\n  const move = useMove(type, count, grid);\r\n  const winSize = useWindowSize();\r\n  const ess = DS[topNum].필수항목;\r\n  const aver = DS[topNum].평균;\r\n  const comment = DS[topNum].배정조건;\r\n\r\n\r\n  //\r\n  //const timeout = useRef(null);\r\n  /*const autoSlide = () => {\r\n    if (focused < grid.col - 1) {\r\n      moveSlide('next');\r\n    } else {\r\n      setFocused(0);\r\n      setCount(0);\r\n    }\r\n    timeout.current = setTimeout(() => { autoSlide() }, 2000);\r\n  }*/\r\n\r\n  const preLoad = () => {\r\n    const arr = [];\r\n    for (let i = 40; i <= 60; i++) {\r\n      const preImage = new Image();\r\n      preImage.src = process.env.PUBLIC_URL + '/assets/aircraft/TH50/FA_00' + i;\r\n      arr.push(preImage);\r\n    }\r\n    setImages(arr);\r\n  };\r\n\r\n  const moveSlide = (postion) => {\r\n    if (base) {\r\n      const iarr = byKeys(result.data[focused], _.keys(ess))\r\n      let arrItem = Object.keys(iarr).map(key => (iarr[key]));\r\n      arrItem[4] = result.data[focused].TOTAL;\r\n      setTemp(arrItem);\r\n    } else {\r\n      let tarr = [];\r\n      for (let i = 0; i < 5; i++) {\r\n        if (i !== 4) {\r\n          tarr[i] = temp[i];\r\n        } else {\r\n          tarr[i] = result.data[focused].TOTAL\r\n        };\r\n      };\r\n      setTemp(tarr);\r\n    }\r\n\r\n    if (postion === 'prev') {\r\n      type === 'list' && focused > 0 && setFocused(focused - 1);\r\n      count > 0 && setCount(count - 1);\r\n    } else if (postion === 'next') {\r\n      type === 'list' && focused < grid.end && setFocused(focused + 1);\r\n      count < grid.end && setCount(count + 1);\r\n    };\r\n    //console.log(selectItem)\r\n  };\r\n\r\n  const onCheck = e => {\r\n    let name = e.target.value;\r\n    setCheckList(\r\n      { ...checkList, [name]: e.target.checked ? 'Y' : 'N' }\r\n    );\r\n  };\r\n\r\n  const onWindow = () => {\r\n    window['returnFn'](result.data[focused]);\r\n  }\r\n\r\n  const fView = () => {\r\n    if (filterView === null) {\r\n      setFilterView('active');\r\n      setType('grid');\r\n    } else {\r\n      setFilterView(null);\r\n      setType('list');\r\n    }\r\n    setSelectItem(null);\r\n    setBase(false)\r\n    setFocused(0);\r\n    setCount(0);\r\n  }\r\n\r\n  const CheckBox = () => {\r\n    const result = [];\r\n    _.map(checkList, (v, k) => {\r\n      const label = 'check' + k;\r\n      result.push(\r\n        <div className={'checkbox'} key={'check' + k}>\r\n          <div className='checkboxInput'><input id={label} className={'check'} value={k} type={'checkbox'} checked={v === 'Y' && true} disabled={ess[k]} onChange={(e) => onCheck(e)} /></div>\r\n          <div className={'checkboxText'} ><label htmlFor={label} className={'label'}>{k}</label>\r\n            <span className={'comment'}>{comment[k]}</span></div>\r\n        </div>\r\n      )\r\n    })\r\n    return result;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCheckList(DS[topNum].기준정보);\r\n    preLoad();\r\n  }, [DS, topNum]);\r\n\r\n  return (\r\n    <Flipper className={'slider'} flipKey={[result.data]}\r\n      spring={{ stiffness: 560, damping: 56 }}\r\n    >\r\n      {\r\n        result.data ? (\r\n          selectItem === null ? (\r\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate>\r\n              <div className={classNames('slide')} ref={sliderRef}>\r\n                <div className={classNames('list', type === 'grid' && 'active')}\r\n                  style={{\r\n                    transform: 'translateX(' + move.x + 'px)',\r\n                    gridTemplateColumns: 'repeat(' + grid.col + ', ' + grid.width + 'px)',\r\n                    gridTemplateRows: 'repeat(' + grid.row + ', ' + grid.height + 'px)',\r\n                    gap: grid.gap,\r\n                  }}\r\n                >\r\n                  {\r\n                    result.data.map((item, i) => {\r\n                      return (\r\n                        <SlideItem item={item} index={i} focused={focused} key={'slideItem' + i} selectItem={setSelectItem} />\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n                {type !== 'grid' && <FocuseItem item={result.data[focused]} />}\r\n                {type !== 'grid' && <button className={classNames('callButton', base && 'active')} style={{ marginTop: -Math.round(size * 0.5 * 1.414) + 12 }} onClick={onWindow}>\r\n                  <i className=\"ri-check-fill\"></i>\r\n                  <span className='callButtonText'>호기선택</span>\r\n                </button>}\r\n              </div>\r\n\r\n            </Flipped>\r\n          ) : (\r\n            <Flipped flipId={'FlippedContainer'} key={'swiperContainer'} translate>\r\n              <div className={'detail'}>\r\n                <DetailItem item={result.data[focused]} ess={ess} aver={aver} checkList={checkList} active={false} select={setSelectItem} key={'sideItem'} />\r\n              </div>\r\n            </Flipped>\r\n          )\r\n\r\n        ) : (\r\n          <div>NO DATA</div>\r\n        )\r\n      }\r\n      {result.data &&\r\n        <div className={classNames('controller', type === 'grid' && 'active')}>\r\n          <button className={classNames('controllerButton prevButton', count === 0 && 'disabled')} onClick={() => count !== 0 && moveSlide('prev')}><i className=\"ri-arrow-left-s-line\"></i><span className=\"controllText\">PREV</span></button>\r\n          <button className={'controllerButton filterButton'} onClick={() => fView()}><i className={type === 'list' ? \"ri-arrow-up-s-line\" : \"ri-close-fill\"}></i><span className=\"controllText\">배정조건</span></button>\r\n          <button className={classNames('controllerButton nextButton', count >= grid.end && 'disabled')} onClick={() => count < grid.end && moveSlide('next')}><span className=\"controllText\">NEXT</span><i className=\"ri-arrow-right-s-line\"></i></button>\r\n          {type === 'grid' &&\r\n            <div className={classNames('filter')}>\r\n              <div className={'filterClose'} onClick={() => fView()} />\r\n              <CheckBox />\r\n              <ul className={'filterInfo'}>\r\n                <li className={'infobox boxdisable'}>필수</li>\r\n                <li className={'infobox boxchecked'}>선택</li>\r\n                <li className={'infobox boxnormal'}>선택가능</li>\r\n              </ul>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </Flipper>\r\n  );\r\n}\r\n\r\nApp.defaultProps = {\r\n  focused: 0,\r\n};\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useContext, useCallback } from 'react';\r\nimport classNames from 'classnames';\r\nimport context from '../Context';\r\n\r\nconst App = (props) => {\r\n  //console.log('base')\r\n  const state = useContext(context);\r\n  const { type, base, size } = state;\r\n  const loading = props.loading;\r\n  const slideSize = size;\r\n  const width = size * 9;\r\n  const Line = useCallback(() => {\r\n    const result = [];\r\n    for (let i = 0; i < 9; i++) {\r\n      result.push(<span key={'line' + i} className={classNames('sliceLine')} style={{ width: size, maxWidth: size, minWidth: size }} />)\r\n    }\r\n    return result;\r\n  }, [size])\r\n\r\n  return (\r\n    <div className={classNames('base', type !== 'grid' ? null : 'active', loading && 'loading')}>\r\n      <div className={'baseContents'} style={{ width: slideSize, height: slideSize }}>\r\n        <div className={classNames('baseBox')} />\r\n        <div className={classNames('inBox')} />\r\n        {!loading &&\r\n          <div className={'detailButton'} style={{ marginTop: Math.round(size * 0.5 * 1.414) - 74 }}>\r\n            <div className={classNames('detailButtonContainer', base && 'active')}>\r\n              <span className={'detailText'}>상세정보<i className={\"ri-search-line\"}></i></span>\r\n              <span className={'detailText'}>닫기<i className={\"ri-close-line\"}></i></span>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className={'slice'} style={{ width: width, height: (size * 10) }}>\r\n        {\r\n          <Line key={'lineGroup'} />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport './index.scss';\r\nimport Chart from '../Slide/chart';\r\nimport { shuffle } from '../Mixin';\r\nimport classNames from 'classnames';\r\nimport context from '../Context';\r\n\r\nconst App = (props) => {\r\n    //console.log('loading')\r\n    const state = useContext(context);\r\n    const { size } = state;\r\n    let cc = 0;\r\n    const duration = 1000;\r\n    const maxCount = props.meassage.length || 0;\r\n    const callBack = props.callBack;\r\n    const [end, setEnd] = useState([0, 0, 0, 0]);\r\n    const [start] = useState([0, 0, 0, 0]);\r\n    const [percent, setPercent] = useState(0);\r\n    const [ment] = useState(shuffle(props.meassage));\r\n    const [fix, setFix] = useState(props.startMsg);\r\n    const timeout = useRef(null);\r\n    const [flag, setFlag] = useState(false);\r\n    //\r\n\r\n    useEffect(() => {\r\n        const loop = () => {\r\n            if (props.title) {\r\n                clearTimeout(timeout.current);\r\n                let item = null;\r\n                if (cc > maxCount - 1) {\r\n                    item = randomArray(100, 100);\r\n                    setFix(props.endMsg);\r\n                } else {\r\n                    item = randomArray(50, 100);\r\n                    setFix(ment[cc])\r\n                }\r\n\r\n                if (cc < maxCount) {\r\n                    cc++;\r\n                    timeout.current = setTimeout(() => { loop() }, duration);\r\n                } else {\r\n                    setFlag(true);\r\n                    timeout.current = setTimeout(() => {\r\n                        callBack(false);\r\n                        clearTimeout(timeout.current);\r\n                    }, 1200);\r\n                }\r\n                setEnd(item.array);\r\n                setPercent(item.total);\r\n            }\r\n        }\r\n        const randomArray = (n, m) => {\r\n            let arr = {};\r\n            let total = 0;\r\n            for (var i = 0; i < props.title.length; i++) {\r\n                const value = Math.floor((Math.random() * (m - n) + n));\r\n                arr[props.title[i]] = value;\r\n                total += value;\r\n            };\r\n            return { array: arr, total: total / props.title.length };\r\n        };\r\n        loop();\r\n        return () => setEnd(null);\r\n    }, [cc, maxCount, ment, props.endMsg, props.title, callBack])\r\n\r\n    return (\r\n        <div className='load'>\r\n            <div className={classNames('graph', flag && 'active')}>\r\n                <Chart item={end} total={percent} cur={start} size={size}/>\r\n                <div className={'loadingComment'} onClick={() => { callBack(false) }}>\r\n                    <span className='loadingText'>{fix}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.scss';\r\nimport React, { useEffect } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classNames('mobile')}>\r\n      <div className='mobileBox' />\r\n      <img className='mobileLogo' src={process.env.PUBLIC_URL + '/assets/other/logo.png'} alt={'logo'} />\r\n      <span className='mobileMent'>아쉽게도 현재 모바일은 지원 하지 않습니다</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport './App.scss';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Head from './component/Head/';\r\nimport Foot from './component/Foot/';\r\nimport Slide from './component/Slide';\r\nimport Base from './component/Base';\r\nimport Loading from './component/Loading';\r\n\r\nimport Mobile from './component/Mobile';\r\n\r\nconst App = (props) => {\r\n  const { uid } = props.match.params;\r\n  const [prop] = useState(window['getProps']());\r\n  const [top, setTop] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    const onLoad = async () => {\r\n      const URL = prop.url; //uid ? prop.url+'/'+uid : prop.url;\r\n      fetch(URL, {\r\n        headers: {\r\n          'Accept': 'application / json'\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => setData(response))\r\n    }\r\n    const ini = () => {\r\n      let resultTop = [];\r\n      _.forEach(data, function (n) {\r\n        resultTop.push(n.부대)\r\n      });\r\n      setTop(resultTop);\r\n    }\r\n    !data ? onLoad() : ini();\r\n  }, [data, prop.url, uid]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\" />\r\n      <main className=\"main\">\r\n        <div className={classNames('contents', loading && 'loading')}>\r\n          {isMobile ? (\r\n            <Mobile />\r\n          ) : (\r\n            <>\r\n              <Base loading={loading} />\r\n              <Head data={top} />\r\n              {\r\n                loading ? <Loading callBack={setLoading} {...prop} /> : data ? <Slide data={data} /> : <div>데이터가 없습니다.</div>\r\n              }\r\n              <Foot stepNum={loading ? 0 : 1} />\r\n            </>\r\n\r\n          )}\r\n        </div>\r\n      </main>\r\n      <footer className=\"footer\">\r\n        {isMobile ? '© ROK KF-21 lis, ALL RIGHTS RESERVED' : '© ROK Government KF-21 lis program data, ALL RIGHTS RESERVED'}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n//\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { UserProvider } from './component/Context';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <BrowserRouter>\r\n        <Route path='/:uid?' render={(props) => <App {...props} />} />\r\n      </BrowserRouter>\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}